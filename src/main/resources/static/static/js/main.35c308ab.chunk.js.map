{"version":3,"sources":["redux/constants.ts","redux/actions.ts","var/routers.ts","helpers/index.ts","components/Cropper/index.jsx","components/UserView/index.tsx","components/Header/index.tsx","components/ChatList/ChatElem/index.tsx","components/ChatList/Search/index.tsx","components/ChatList/index.tsx","services/socket/socket.ts","components/Message/Input/index.tsx","components/Message/MessageItem.tsx","helpers/autoscroll.jsx","components/Message/MessageList.tsx","components/ChatPage/index.tsx","components/Chat/index.tsx","components/LoginPage/LoginForm.tsx","components/LoginPage/RegForm.tsx","components/LoginPage/Particles/particles.tsx","components/LoginPage/index.tsx","helpers/webApi.tsx","components/ConfirmPage/index.tsx","App.tsx","serviceWorker.ts","redux/saga.ts","redux/reducer.ts","configStore.ts","index.tsx"],"names":["FETCH_CHATS","FETCH_CHATS_DONE","FETCH_MESSAGES","FETCH_MESSAGES_DONE","CLOSE_CHAT","TOGGLE_PANEL","TOGGLE_SEARCH","ADD_NEW_MESSAGE","LOGIN","LOGIN_FAIL","REG","REG_FAIL","CHANGE_PAGE","REMOVE_STORE","FETCH_USER","FETCH_USER_DONE","SEARCH","SEARCH_DONE","CREATE_CHAT","CREATE_CHAT_DONE","ADD_CHAT_TO_LIST","DELETE_MESSAGE","DELETE_MESSAGE_DONE","EDIT_MESSAGE","EDIT_MESSAGE_DONE","UPDATE_AVATAR","UPDATE_AVATAR_DONE","UPDATE_ABOUT","UPDATE_ABOUT_DONE","UPDATE_EMAIL","UPDATE_EMAIL_DONE","SEND_CONFIRM_MESSAGE","SEND_OPTIONS","SEND_OPTIONS_DONE","SEND_EMAIL","CLEAR_LOGIN","CLEAR_REG","clearStore","type","types","fetchChats","fetchMessages","chatId","user","payload","id","closeChat","togglePanel","newMessage","message","loginUser","login","password","regUser","avatar","changePage","page","fetchUser","search","toggleSearch","newChat","userId","addChatToList","deleteMessage","messageId","deleteMessageDone","editMessage","editMessageDone","updateAvatar","src","editAbout","editEmail","email","confirmEmail","sendOptions","options","sendEmail","clearLogin","clearReg","prefix","SOCKET_URL","concat","CHAT_LIST","CHAT_MESSAGES","USER","NEW_CHAT","UPLOAD_FILE","CONFIRM_EMAIL","CONFIRM_EMAIL_DONE","dayjs","extend","relativeTime","fetchHeaderConfig","headers","Authorization","localStorage","getItem","fromNow","date","sortChatList","data","Object","toConsumableArray","sort","el1","el2","time1","time","uploadFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","file","formData","res","wrap","_context","prev","next","FormData","append","fetch","url","method","body","sent","json","abrupt","stop","_x","apply","this","arguments","humanFileSize","bytes","si","length","undefined","thresh","Math","abs","units","u","toFixed","Cropper","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","preview","onCrop","bind","assertThisInitialized","onClose","setState","_this2","_this$state$preview$s","split","_this$state$preview$s2","slicedToArray","info","_info$split","encoding","dataurl","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLtoFile","then","fileDownloadUri","catch","console","log","_this3","react_default","createElement","Fragment","className","react_avatar_default","width","height","onBeforeFileLoad","alt","style","display","justifyContent","Button","color","onClick","onSave","React","Component","connect","userStore","dispatch","actions","bindActionCreators","_useState","useState","_useState2","crop","setCropper","_useState3","_useState4","setEditAbout","_useState5","about","_useState6","editValue","setEditValue","closeEditAbout","_useState7","objectSpread2","_useState8","changeOptions","setOption","name","value","defineProperty","_useState9","_useState10","emailAbout","setEmailAbout","_useState11","_useState12","emailValue","setEmailValue","closeEmailAbout","useEffect","Modal","open","close","closeOnDimmerClick","setClose","centered","Header","as","username","isEdit","onLogOut","index_es","icon","faSignOutAlt","Content","components_Cropper","Image","wrapped","size","circular","Description","Header_Header","Icon","TextArea","onChange","e","minHeight","confirm","Popup","content","trigger","marginLeft","Input","Checkbox","toggle","checked","label","eachMessage","sendMessage","isEqual","chat","userView","setUserView","faBars","faSearch","components_UserView","removeItem","ChatElem","_props$show","show","text","react_ellipsis_text_default","Search","setValue","Form","onSubmit","loading","isFetching","placeholder","iconPosition","map","elem","ChatList_ChatElem","key","chatList","find","onText","textAlign","isOpen","ChatList_Search","stompClient","socket","destination","send","action","store","connected","Stomp","over","SockJS","subscribe","JSON","parse","_ref2","user1","user2","_ref3","_ref4","setLoading","openModal","setOpenModal","setFile","handleUploadFile","target","files","stringify","fluid","hidden","basic","Message","fileName","Actions","inverted","disabled","fromMe","openDelete","openEdit","setCloseEdit","messageEdit","changeMessage","alignItems","fileType","indexOf","compact","window","marginBottom","href","whiteSpace","ReactHtmlParser","isScrolledUp","el","scrollTop","autoscroll","_ref$isScrolledDownTh","isScrolledDownThreshold","_React$PureComponent","_temp","shouldScroll","_isScrolledDown","_el","_scrollHeight","_isScrolledUp","inherits","createClass","clientHeight","scrollHeight","scrollDown","threshold","onScrolledTop","onScrolled","scrollDownIfNeeded","nextProps","nextState","difference","amount","_this$props","rest","objectWithoutProperties","assign","ref","ReactDOM","findDOMNode","onScroll","handleScroll","PureComponent","Message_MessageItem","Loader","active","inline","Message_MessageList","Message_Input","flexDirection","showPanel","background","components_Header","components_ChatList","components_ChatPage","Dimmer","loginPage","setLogin","setPassword","Grid","position","top","left","verticalAlign","Column","Segment","stacked","event","error","imageList","i","randomProfile","getAvatars","regPage","setAvatar","react_image_picker_dist_default","images","image","onPick","initParticles","particlesJS","particles","number","density","enable","value_area","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","config_demo","hide_card","background_color","background_image","background_position","background_repeat","background_size","LoginPage","LoginPage_LoginForm","LoginPage_RegForm","request","input","init","promise","Headers","Content-Type","ok","location","reload","Error","_x2","ConfirmPage","setLoad","setError","token","err","Subheader","replace","components_LoginPage","components_Chat","react_notifications_lib","_window$location$path","pathname","_window$location$path2","toArray","slice","components_ConfirmPage","join","Boolean","hostname","updateAbout","updateEmail","confirmMessage","watchSaga","put","t0","_marked","_context2","_marked2","_context3","X-Requested-With","setItem","_marked3","_context4","_marked4","_action$payload","_context5","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","NotificationManager","_marked13","_context14","_marked14","_context15","_marked15","_context16","takeLatest","_marked16","initialState","reducer","messageList","m","filter","middlewareSaga","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35c308ab.chunk.js","sourcesContent":["export const FETCH_CHATS = \"FETCH_CHATS\";\nexport const FETCH_CHATS_DONE = \"FETCH_CHATS_DONE\";\n\nexport const FETCH_MESSAGES = \"FETCH_MESSAGES\";\nexport const FETCH_MESSAGES_DONE = \"FETCH_MESSAGES_DONE\";\nexport const CLOSE_CHAT = \"CLOSE_CHAT\";\n\nexport const TOGGLE_PANEL = \"TOGGLE_PANEL\";\nexport const TOGGLE_SEARCH = \"TOGGLE_SEARCH\";\n\nexport const ADD_NEW_MESSAGE = \"ADD_NEW_MESSAGE\";\n\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGIN_DONE = \"LOGIN_DONE\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\n\nexport const REG = \"REG\";\nexport const REG_DONE = \"REG_DONE\";\nexport const REG_FAIL = \"REG_FAIL\";\n\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const REMOVE_STORE = \"REMOVE_STORE\";\n\nexport const FETCH_USER = \"FETCH_USER\";\nexport const FETCH_USER_DONE = \"FETCH_USER_DONE\";\nexport const FETCH_USER_FAIL = \"FETCH_USER_FAIL\";\n\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_DONE = \"SEARCH_DONE\";\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\n\nexport const CREATE_CHAT = \"CREATE_CHAT\";\nexport const CREATE_CHAT_DONE = \"CREATE_CHAT_DONE\";\nexport const CREATE_CHAT_FAIL = \"CREATE_CHAT_FAIL\";\n\nexport const ADD_CHAT_TO_LIST = \"ADD_CHAT_TO_LIST\";\n\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const DELETE_MESSAGE_DONE = \"DELETE_MESSAGE_DONE\";\n\nexport const EDIT_MESSAGE = \"EDIT_MESSAGE\";\nexport const EDIT_MESSAGE_DONE = \"EDIT_MESSAGE_DONE\";\n\nexport const UPDATE_AVATAR = \"UPDATE_AVATAR\";\nexport const UPDATE_AVATAR_DONE = \"UPDATE_AVATAR_DONE\";\n\nexport const UPDATE_ABOUT = \"UPDATE_ABOUT\";\nexport const UPDATE_ABOUT_DONE = \"UPDATE_ABOUT_DONE\";\n\nexport const UPDATE_EMAIL = \"UPDATE_EMAIL\";\nexport const UPDATE_EMAIL_DONE = \"UPDATE_EMAIL_DONE\";\n\nexport const SEND_CONFIRM_MESSAGE = \"SEND_CONFIRM_MESSAGE\";\n\nexport const SEND_OPTIONS = \"SEND_OPTIONS\";\nexport const SEND_OPTIONS_DONE = \"SEND_OPTIONS_DONE\";\n\nexport const SEND_EMAIL = \"SEND_EMAIL\";\n\n\nexport const CLEAR_LOGIN = \"CLEAR_LOGIN\";\nexport const CLEAR_REG = \"CLEAR_REG\";","import * as types from \"./constants\";\nimport {IMessage, IOptions, IUser} from \"../model/IApp\";\n\nexport const clearStore = () => ({\n  type: types.REMOVE_STORE\n});\n\n\nexport const fetchChats = () => ({\n    type: types.FETCH_CHATS\n});\n\nexport const fetchMessages = (chatId: number, user: IUser) => ({\n    type: types.FETCH_MESSAGES,\n    payload: {\n        id: chatId,\n        user\n    }\n});\n\nexport const closeChat = () => ({\n    type: types.CLOSE_CHAT\n});\n\nexport const togglePanel = () => ({\n    type: types.TOGGLE_PANEL\n});\n\nexport const newMessage = (message: IMessage) => {\n    return {\n        type: types.ADD_NEW_MESSAGE,\n        payload: {\n            message\n        }\n    }\n};\n\nexport const loginUser = (login: string, password: string) => ({\n    type: types.LOGIN,\n    payload: {\n        login,\n        password\n    }\n});\n\nexport const regUser = (login: string, password: string, avatar: string) => ({\n    type: types.REG,\n    payload: {\n        login,\n        password,\n        avatar\n    }\n});\n\nexport const changePage = (page: string) => ({\n    type: types.CHANGE_PAGE,\n    payload: page\n});\n\nexport const fetchUser = () => ({\n    type: types.FETCH_USER\n});\n\nexport const search = (search: string) => ({\n   type: types.SEARCH,\n   payload: { search }\n});\n\nexport const toggleSearch = () => ({\n    type: types.TOGGLE_SEARCH\n});\n\nexport const newChat = (userId: number, user: IUser) => ({\n    type: types.CREATE_CHAT,\n    payload: {\n        userId,\n        user\n    }\n});\n\nexport const addChatToList = (chatId: number, user: IUser) => ({\n    type: types.ADD_CHAT_TO_LIST,\n    payload: {\n        chatId,\n        user\n    }\n});\n\nexport const deleteMessage = (messageId: number, chatId: number) => ({\n    type: types.DELETE_MESSAGE,\n    payload: {\n        messageId,\n        chatId\n    }\n});\n\nexport const deleteMessageDone = (message: IMessage) => ({\n    type: types.DELETE_MESSAGE_DONE,\n    payload: {\n        message\n    }\n});\n\nexport const editMessage = (messageId: number, chatId: number, message: string) => ({\n    type: types.EDIT_MESSAGE,\n    payload: {\n        messageId,\n        chatId,\n        message\n    }\n});\n\nexport const editMessageDone = (message: IMessage) => ({\n    type: types.EDIT_MESSAGE_DONE,\n    payload: {\n        message\n    }\n});\n\nexport const updateAvatar = (src: string) => ({\n    type: types.UPDATE_AVATAR,\n    payload: {\n        src\n    }\n});\n\nexport const editAbout = (message: string) => ({\n    type: types.UPDATE_ABOUT,\n    payload: {\n        message\n    }\n});\n\nexport const editEmail = (email: string) => ({\n    type: types.UPDATE_EMAIL,\n    payload: {\n        email\n    }\n});\n\nexport const confirmEmail = (email: string) => ({\n    type: types.SEND_CONFIRM_MESSAGE,\n    payload: {\n        email\n    }\n});\n\nexport const sendOptions = (options: IOptions) => ({\n    type: types.SEND_OPTIONS,\n    payload: {\n        options\n    }\n});\n\nexport const sendEmail = (message: IMessage) => ({\n    type: types.SEND_EMAIL,\n    payload: {\n        message\n    }\n});\n\nexport const clearLogin = () => ({ type: types.CLEAR_LOGIN });\n\nexport const clearReg = () => ({ type: types.CLEAR_REG });","const prefix = \"https://igor-babin-chat-java.herokuapp.com\";\n// const prefix = \"http://localhost:8080\";\n\n\nexport const SOCKET_URL = `${prefix}/ws`;\nexport const CHAT_LIST = `${prefix}/api/chats`;\nexport const CHAT_MESSAGES = `${prefix}/api/chat/`;\nexport const LOGIN = `${prefix}/api/auth/login`;\nexport const USER = `${prefix}/api/me`;\nexport const REG = `${prefix}/req`;\nexport const SEARCH = `${prefix}/api/users`;\nexport const NEW_CHAT = `${prefix}/api/chat`;\nexport const DELETE_MESSAGE = `${prefix}/api/message`;\nexport const UPLOAD_FILE = `${prefix}/api/uploadFile`;\nexport const UPDATE_AVATAR = `${prefix}/api/user/avatar`;\nexport const UPDATE_ABOUT = `${prefix}/api/user/about`;\nexport const UPDATE_EMAIL = `${prefix}/api/user/email`;\nexport const CONFIRM_EMAIL = `${prefix}/api/email/confirm`;\nexport const CONFIRM_EMAIL_DONE = `${prefix}/api/user/confirm`;\nexport const SEND_OPTIONS = `${prefix}/api/user/options`;\nexport const SEND_EMAIL = `${prefix}/api/email/send-message`;","import randomProfile from 'random-profile-generator';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {IFile, IMessageView} from \"../model/IApp\";\nimport * as url from '../var/routers';\n\ndayjs.extend(relativeTime);\n\n\nexport const fetchHeaderConfig = () => ({\n    headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n});\n\nexport const getAvatars = (amount: number) => {\n    let res = [];\n    for (let i = 0; i < amount; i++)\n        res[i] = randomProfile.avatar();\n    return res;\n};\n\nexport const fromNow = (date: string | number) => dayjs(date).fromNow();\n\nexport const sortChatList = (data: IMessageView[]) => {\n    const res = [...(data || [])];\n\n    return res.sort((el1, el2) => {\n        const time1: number = el1.message ? el1.message.time : 0;\n        const time2: number = el2.message ? el2.message.time : 0;\n        return time2 - time1;\n    })\n};\n\nexport const uploadFile = async (file: any): Promise<IFile> => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    let res = await fetch(url.UPLOAD_FILE, {\n        headers: {Authorization: `Bearer ${localStorage.getItem('token')}`},\n        method: \"POST\",\n        body: formData\n    });\n    res = await res.json();\n    return res as unknown as IFile;\n};\n\n\nexport const humanFileSize = (bytes: number, si: boolean = false) => {\n    const thresh = si ? 1000 : 1024;\n    if (Math.abs(bytes) < thresh) {\n        return bytes + ' B';\n    }\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    do {\n        bytes /= thresh;\n        ++u;\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n    return bytes.toFixed(1) + ' ' + units[u];\n};\n\nexport const dataURLtoFile = (dataurl: any, filename: any) => {\n    let arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n    while(n--){\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, {type:mime});\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Avatar from 'react-avatar-edit'\nimport './styles.sass'\nimport {Button} from \"semantic-ui-react\";\nimport {dataURLtoFile, uploadFile} from \"../../helpers\";\n\nclass Cropper extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            preview: null,\n            src: \"\"\n        };\n        this.onCrop = this.onCrop.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    onClose() {\n        this.setState({preview: null})\n    }\n\n    onCrop(preview) {\n        this.setState({preview})\n    }\n\n    onSave(){\n        const [info, data] = this.state.preview.split(',');\n        const [typeTemp] = info.split(\";\");\n        const encoding = typeTemp.split(\"/\")[1];\n        const file = dataURLtoFile(this.state.preview, `avatar.${encoding}`);\n        uploadFile(file)\n            .then(file => {\n                this.props.onClose(file.fileDownloadUri);\n            })\n            .catch(console.log);\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"cropper\">\n                    <Avatar\n                        width={320}\n                        height={200}\n                        onCrop={this.onCrop}\n                        onClose={this.onClose}\n                        onBeforeFileLoad={this.onBeforeFileLoad}\n                    />\n\n                    <div className=\"preview\">\n                        {this.state.preview && (\n                            <img src={this.state.preview} alt=\"Preview\"/>)\n                        }\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <Button color='blue' onClick={() => this.props.onClose()}>Close</Button>\n                    {this.state.preview && <Button color='blue' onClick={() => this.onSave()}>Save</Button>}\n                </div>\n            </>\n\n        )\n    }\n}\n\nexport default Cropper;","import React, {useEffect, useState} from 'react';\nimport IApp, {IOptions, IUser} from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {Modal, Image, Header, Button, Icon, TextArea, Input, Popup, Checkbox} from \"semantic-ui-react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport Cropper from \"../Cropper\";\nimport { isEqual } from 'lodash';\n\nimport './styles.sass';\n\nexport interface IProps {\n    close: boolean;\n    setClose: (status: boolean) => void;\n    actions: typeof actions\n    user: IUser\n    userStore?: IUser\n    onLogOut: () => void\n    isEdit: boolean\n}\n\nconst UserView = (props: IProps) => {\n    const user = props.user;\n    const [crop, setCropper] = useState(false);\n\n\n    const [editAbout, setEditAbout] = useState(false);\n    const [editValue, setEditValue] = useState<any>(user.about);\n    const closeEditAbout = () => {\n        setEditValue(user.about);\n        setEditAbout(false);\n    };\n    const changeAbout = () => {\n        props.actions.editAbout(editValue);\n        closeEditAbout();\n    };\n\n    const sendConfirmLink = () => {\n        props.actions.confirmEmail(user.email || \"\");\n    };\n\n    const [options, changeOptions] = useState<IOptions>({...user.options});\n\n    const setOption = (name: string, value: boolean) => {\n        changeOptions({\n            ...options,\n            [name]: value\n            })\n    };\n\n\n    const [emailAbout, setEmailAbout] = useState(false);\n    const [emailValue, setEmailValue] = useState<any>(user.email);\n    const closeEmailAbout = () => {\n        setEmailValue(user.email);\n        setEmailAbout(false);\n    };\n    const changeEmail = () => {\n        props.actions.editEmail(emailValue);\n        closeEmailAbout();\n    };\n\n    const sendOptions = () => {\n        props.actions.sendOptions(options);\n    };\n\n    useEffect(() => {\n        if (emailAbout) {\n            setEmailValue(user.email);\n        }\n    }, [emailAbout]);\n\n    useEffect(() => {\n        if (editAbout) {\n            setEditValue(user.about);\n        }\n    }, [editAbout]);\n\n    useEffect(() => {\n        changeOptions(user.options);\n    }, [user.options]);\n    return (\n        <Modal\n            open={props.close}\n            closeOnDimmerClick={true}\n            onClose={() => props.setClose(false)}\n            centered={false}\n        >\n            <Modal.Header as={'h1'}>\n                <div className={\"header-wrap-view\"}>\n                    {user.username}\n                    {props.isEdit && <div className=\"icon-wrap\" onClick={props.onLogOut}>\n                        <FontAwesomeIcon icon={faSignOutAlt}/>\n                    </div>}\n                </div>\n            </Modal.Header>\n            <Modal.Content>\n                <div className=\"content-wrapper\">\n                    {crop ? (\n                            <>\n                                <Cropper\n                                    onClose={(src?: string) => {\n                                        setCropper(false);\n                                        if (src) {\n                                            props.actions.updateAvatar(src);\n                                        }\n                                    }}\n                                />\n                            </>\n                        ) :\n                        (<div className={\"avatar\"}>\n                            <Image wrapped size='medium' src={user.avatar} circular/>\n                            {props.isEdit &&\n                            <Button color='blue' onClick={() => setCropper(true)}>Upload photo</Button>}\n                        </div>)\n                    }\n                    <Modal.Description>\n                        <Header as={'h4'}>Profile Info</Header>\n                        <div className=\"key-value\">\n                            <div className=\"key\">\n                                About\n                                {props.isEdit && (!editAbout ?\n                                    <span onClick={() => setEditAbout(true)}><Icon name={'edit'}\n                                                                                   color={\"blue\"}/></span> : (\n                                        <>\n                                            <span onClick={closeEditAbout}><Icon name={'window close outline'}\n                                                                                 color={\"blue\"}/></span>\n                                            <span onClick={changeAbout}><Icon name={'check'} color={\"blue\"}/></span>\n                                        </>\n                                    ))}\n                            </div>\n                            <div className=\"value\">\n                                {!props.isEdit || !editAbout ? user.about : (\n                                    <TextArea\n                                        value={editValue}\n                                        onChange={(e, data) => setEditValue(data.value)}\n                                        style={{minHeight: 100}}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"key-value\">\n                            <div className=\"key\">\n                                <div>\n                                    Email\n                                    {props.isEdit && (!emailAbout ?\n                                        <span onClick={() => setEmailAbout(true)}><Icon name={'edit'}\n                                                                                        color={\"blue\"}/></span> : (\n                                            <>\n                                                <span onClick={closeEmailAbout}><Icon name={'window close outline'}\n                                                                                      color={\"blue\"}/></span>\n                                                <span onClick={changeEmail}><Icon name={'check'} color={\"blue\"}/></span>\n                                            </>\n                                        ))}\n                                </div>\n                                <Header as={'h6'} color={user.confirm ? \"green\" : \"red\"}>{user.confirm ? 'confirm' : (\n                                    props.isEdit && <Popup content='Click to send confirm email'\n                                                           trigger={<span style={{marginLeft: 0}}\n                                                                          onClick={sendConfirmLink}>no confirm</span>}/>\n                                )}</Header>\n                            </div>\n                            <div className=\"value\">\n                                {!props.isEdit || !emailAbout ? user.email : (\n                                    <Input value={emailValue} onChange={(e, data) => setEmailValue(data.value)}/>\n                                )}\n                            </div>\n                        </div>\n                        {props.isEdit && <div className={\"notific-setting\"}>\n                            <Header as={'h4'}>Notification settings</Header>\n                            {!user.confirm && <Header as={'h5'} color={\"red\"}>Works only when you confirm email</Header>}\n                            <div className={\"checkbox-wrap\"}>\n                                <Checkbox toggle checked={options.newChat} onChange={() => setOption('newChat', !options.newChat)} label={\"New chat\"}/>\n                            </div>\n                            <div className={\"checkbox-wrap\"}>\n                                <Checkbox toggle checked={options.eachMessage} onChange={() => setOption('eachMessage', !options.eachMessage)} label={\"Each new message\"}/>\n                            </div>\n                            <div className={\"checkbox-wrap\"}>\n                                <Checkbox toggle checked={options.sendMessage} onChange={() => setOption('sendMessage', !options.sendMessage)} label={\"Option to send particular message to email\"}/>\n                            </div>\n                            {isEqual(options, user.options) ? \"\" : <Button color='blue' onClick={sendOptions}>Save settings</Button>}\n                        </div>}\n                    </Modal.Description>\n                </div>\n            </Modal.Content>\n        </Modal>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    userStore: state.user.data\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserView);","import React, {useEffect, useState} from \"react\";\nimport \"./styles.sass\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faSearch, faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport IApp, {IUser} from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {Image} from \"semantic-ui-react\";\nimport UserView from \"../UserView\";\n\nconst Header = (props: any) => {\n    const onLogOut = () => {\n        localStorage.removeItem('token');\n        props.actions.clearStore();\n    };\n    const [close, setClose] = useState(false);\n    const [userView, setUserView] = useState<IUser | null>(null);\n\n    const onClick = (user: IUser) => {\n        if (user) {\n            setClose(true);\n            setUserView(user);\n        }\n    };\n\n    useEffect(() => {\n        if(userView && userView.id === props.user.data.id){\n            setUserView(props.user.data);\n        }\n    },[props.user]);\n\n    const user = props.chat.user;\n\n    return (\n        <div className=\"header-wrap\">\n            <div className=\"left-side\">\n                <div className=\"icon-wrap\" onClick={() => props.actions.togglePanel()}>\n                    <FontAwesomeIcon icon={faBars}/>\n                </div>\n                <div className=\"icon-wrap\" onClick={() => props.actions.toggleSearch()}>\n                    <FontAwesomeIcon icon={faSearch}/></div>\n            </div>\n            {user &&\n            <div className={\"header-user\"} onClick={() => onClick(user)}>\n                <div className=\"avatar\">\n                    <Image avatar src={user.avatar}/>\n                </div>\n                <div className=\"name\">{user.username}</div>\n            </div>}\n            <div className=\"right-size\" onClick={() => onClick(props.user.data)}>\n                <Image avatar src={props.user.data.avatar}/>\n            </div>\n            {userView && <UserView\n                isEdit={userView.id === props.user.data.id}\n                close={close}\n                setClose={() => {\n                    setUserView(null);\n                    setClose(false);\n                }}\n                user={userView}\n                actions={props.actions}\n                onLogOut={onLogOut}\n            />\n            }\n        </div>\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n","import React from 'react';\nimport \"./styles.sass\"\nimport {Image} from \"semantic-ui-react\";\nimport {fromNow} from \"../../../helpers\";\nimport EllipsisText from \"react-ellipsis-text\";\n\nexport interface IChatElem {\n    id: number;\n    name: string;\n    date: string;\n    message: string;\n    onClick: () => void;\n}\n\nconst ChatElem = (props: any) => {\n    const {name, date, message, id, avatar, show = false} = props;\n    const text = message ? (message.message || (message.file ? <span className=\"file\">file</span> : \"\"))   : \"\";\n    return (\n        <div className={`chat-elem-wrap ${props.chatId === id ? 'toggled' : \"\"}`} onClick={() => props.onClick()}>\n            <div className=\"avatar\">\n                <Image avatar src={avatar}/>\n            </div>\n            <div className=\"info\">\n                <div className=\"name-wrap\">\n                    <div className=\"name\">{name}</div>\n                    <div className=\"date\">{date && fromNow(date)}</div>\n                </div>\n                {!show && typeof text === \"string\"? (<EllipsisText text={text} length={21}/>) : text}\n            </div>\n        </div>\n    )\n};\n\n\nexport default ChatElem;","import React, {useState} from 'react';\nimport {Form, Header, Icon, Input} from \"semantic-ui-react\";\nimport ChatElem from \"../ChatElem\";\nimport {IMessageView, IUser} from \"../../../model/IApp\";\n\n\nconst Search = (props: any) => {\n    const [value, setValue] = useState(\"\");\n    const onText = (user: IUser) => {\n\n        const chat = props.chatList.data.find( (elem: any) =>elem.user.id === user.id);\n        if(chat){\n            return props.actions.fetchMessages(chat.chat.id, user);\n        }\n        props.actions.newChat(user.id);\n    };\n\n    const getNotFound = () => (\n        <Header as='h4' icon textAlign={\"center\"}>\n            <Icon name='window close outline' size={\"mini\"}/>\n            Not found\n        </Header>\n    );\n    const getUserList = () => (\n        <>\n            {props.search.data.map((elem: IUser) =>\n                <ChatElem\n                    key={elem.id}\n                    id={elem.id}\n                    name={elem.username}\n                    avatar={elem.avatar}\n                    onClick={() => onText(elem)}\n                    show\n                />\n            )}\n        </>\n    );\n\n\n    return (\n        <>\n            <Form onSubmit={() => props.actions.search(value)}>\n                <Input\n                    loading={props.search.isFetching}\n                    value={value}\n                    icon='user'\n                    placeholder='Search...'\n                    iconPosition='left'\n                    onChange={(e, data) => setValue(data.value)}\n                />\n            </Form>\n            <>\n                {props.search.data && (props.search.data.length > 0 ? getUserList() : getNotFound())}\n            </>\n        </>\n    )\n};\n\n\nexport default Search;","import ChatElem from \"./ChatElem\";\nimport React, {useEffect} from \"react\";\nimport \"./styles.sass\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport IApp, {IChatList, IChatView, IMessageView} from \"../../model/IApp\";\nimport {Input, Divider, Header} from \"semantic-ui-react\";\nimport Search from \"./Search\";\n\n\ninterface IChatListProps {\n    actions: typeof actions;\n    chatList: IChatList;\n    chat: IChatView\n    search: any\n}\n\nconst ChatList = (props: IChatListProps) => {\n    useEffect(() => {\n        if (!props.chatList.data)\n            props.actions.fetchChats();\n    }, [props.actions]);\n\n    const onClick = (elem: IMessageView) => {\n        if (elem.chat.id !== props.chat.id) {\n            props.actions.fetchMessages(elem.chat.id, elem.user)\n        } else {\n            props.actions.closeChat();\n        }\n    };\n\n    return (\n        (<div className=\"chat-list-wrap\">\n                {props.search.isOpen ? <Search {...props}/> :\n                    <>\n                        {props.chatList.data && props.chatList.data.map(elem => elem && elem.message && (\n                            <ChatElem key={elem.chat.id} id={elem.chat.id}\n                                      chatId={props.chat.id}\n                                      name={elem.user.username}\n                                      date={elem.message.time}\n                                      message={elem.message}\n                                      avatar={elem.user.avatar}\n                                      onClick={() => onClick(elem)}/>\n                        ))}\n                    </>}\n            </div>\n        ))\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    chatList: state.chatList,\n    chat: state.chat,\n    search: state.search\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatList);","import SockJS from \"sockjs-client\";\nimport Stomp, {Client} from 'stompjs';\nimport * as actions from \"../../redux/actions\";\nimport * as url from '../../var/routers'\nimport IApp, {IMessage, IUser} from \"../../model/IApp\";\n\nlet stompClient = {} as Client;\n\n\n\nconst connect = (action: typeof actions, store: IApp) => {\n    if(stompClient.connected){\n        console.log(\"already connected\");\n        return;\n    }\n\n\n    const user = store.user.data as IUser;\n\n    stompClient = Stomp.over(new SockJS(url.SOCKET_URL));\n    stompClient.connect({}, () => {\n        console.log('Connected', store.user);\n\n\n\n        stompClient.subscribe(`/res/new-message/${user.id}`, ({ body }) => action.newMessage(JSON.parse(body)));\n\n        stompClient.subscribe(`/res/new-chat/${user.id}`, ({ body }: { body: string}) => {\n            const newChat: { chatId: number, user1: IUser, user2: IUser} = JSON.parse(body);\n\n            action.addChatToList(newChat.chatId, newChat.user1.id === user.id ? newChat.user1 : newChat.user2);\n\n        });\n\n        stompClient.subscribe(`/res/delete-message/${user.id}`, ({ body }: { body: string}) => {\n            const message: IMessage = JSON.parse(body);\n\n            action.deleteMessageDone(message);\n            action.fetchChats();\n        })\n\n        stompClient.subscribe(`/res/edit-message/${user.id}`, ({ body }: { body: string}) => {\n            const message: IMessage = JSON.parse(body);\n\n            action.editMessageDone(message);\n            action.fetchChats();\n        })\n    });\n};\n\nconst send = (destination: string, headers?: {}, body?: string) => {\n    return stompClient.send(destination, headers, body);\n};\n\nexport default {\n    stompClient,\n    send,\n    connect\n};","import React, {useState} from 'react';\nimport {Button, Form, Header, Icon, Input, Message, Modal, TextArea} from 'semantic-ui-react'\nimport socket from \"../../../services/socket/socket\";\nimport IApp, {IFile} from \"../../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {uploadFile, humanFileSize} from \"../../../helpers\";\n\n\nexport const MessageInput = (props: any) => {\n    const [value, setValue] = useState<any>(\"\");\n    const [loading, setLoading] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [file, setFile] = useState<IFile | null>(null);\n\n    const handleUploadFile = async ({ target }: any) => {\n        if(target.files.length == 0){\n            return;\n        }\n        setOpenModal(true);\n        setLoading(true);\n        uploadFile(target.files[0])\n            .then((file: IFile) => {\n                setFile(file);\n                setLoading(false);\n            })\n            .catch(console.log);\n    };\n\n    const sendMessage = () => {\n        setOpenModal(false);\n        if (!value && !file)\n            return;\n        socket.send('/req/new-message', {}, JSON.stringify({\n            chatId: props.chat.id,\n            userId: props.user.data.id,\n            message: value,\n            file,\n        }));\n        setValue(\"\");\n        setFile(null);\n    };\n\n\n    return <Form onSubmit={(e) => sendMessage()} className={\"input-wrapper\"}>\n        <Input placeholder='Type a message...' fluid value={value} onChange={(e, data) => setValue(data.value)}/>\n        <Button color=\"teal\" icon as=\"label\">\n            <Icon name=\"paperclip\"/>\n            <input name=\"image\" type=\"file\" onChange={handleUploadFile} hidden />\n        </Button>\n        <Modal\n            open={openModal}\n            basic\n            size='small'\n        >\n            <Modal.Content>\n                <Header as={'h3'} textAlign='center' className={\"white-header\"}>Message with attached</Header>\n                <Message icon >\n                    {loading ? <Icon name='circle notched' loading /> :\n                    <Icon name='file' />}\n                    <Message.Content>\n                        <Message.Header>{file && file.fileName}</Message.Header>\n                        {file && humanFileSize(file.size)}\n                    </Message.Content>\n                </Message>\n                <Form>\n                    <TextArea\n                        value={value}\n                        onChange={(e, data) => setValue(data.value)}\n                        style={{ minHeight: 200 }}\n                    />\n                </Form>\n            </Modal.Content>\n            <Modal.Actions className={\"action-btn\"}>\n                <Button color='green' inverted onClick={() => loading || sendMessage()}>\n                    <Icon name='save' disabled={loading}/> Save\n                </Button>\n                <Button color='blue' inverted onClick={() => { setOpenModal(false); setFile(null) }}>\n                    <Icon name='cancel' /> Cancel\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    </Form>\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    user: state.user,\n    chat: state.chat\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MessageInput);","import {Button, Form, Header, Icon, Image, Message, Modal, TextArea} from \"semantic-ui-react\";\nimport React, {useState} from \"react\";\nimport {IMessage, IUser} from \"../../model/IApp\";\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport './styles.sass'\nimport {fromNow, humanFileSize} from \"../../helpers\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../redux/actions\";\nimport ReactHtmlParser from 'react-html-parser';\n\ndayjs.extend(relativeTime);\n\n\nexport const MessageItem = (props: { user: IUser, message: IMessage, actions: typeof Actions }) => {\n    const {message, user, actions} = props;\n    const fromMe = message.user.id === user.id;\n\n    const [openDelete, setClose] = useState(false);\n    const [openEdit, setCloseEdit] = useState(false);\n    const [messageEdit, changeMessage] = useState<any>(message.message);\n\n    const onDelete = () => {\n        setClose(false);\n        actions.deleteMessage(message.id, message.chat.id);\n    };\n\n    const onEdit = () => {\n        setCloseEdit(false);\n        actions.editMessage(message.id, message.chat.id, messageEdit);\n    };\n\n    const getJustifyContent = () => fromMe ? \"space-between\" : user.options.sendMessage ? \"space-between\" : \"flex-end\";\n    const sendMessage = () => props.actions.sendEmail(message);\n    return (\n        <div className={`message-item ${openDelete ? \"to-delete\" : \"\"}`}\n             style={{alignItems: fromMe ? \"flex-end\" : \"flex-start\"}}>\n            <p className={fromMe ? \"from-me\" : \"from-them\"}>\n                {message.file && (\n                        message.file.fileType.indexOf('image') === -1 ? (\n                            <Message icon compact size={\"mini\"} info>\n                                <Icon name='file'\n                                      onClick={() => message.file && window.open(message.file.fileDownloadUri, '_blank')}/>\n                                <Message.Content>\n                                    <Message.Header>{message.file && message.file.fileName}</Message.Header>\n                                    {message.file && humanFileSize(message.file.size)}\n                                </Message.Content>\n                            </Message>) :\n                            <>\n                                <div style={{ marginBottom: 10 }}>\n                            <Image src={message.file.fileDownloadUri}\n                                   size='medium'\n                                   wrapped\n                                   as={'a'}\n                                   href={message.file.fileDownloadUri}\n                                   target='_blank'/>\n                                </div>\n                            </>\n\n                   )}\n                <div style={{ whiteSpace: \"pre-wrap\" }}>{ReactHtmlParser(message.message)}</div>\n                <span className=\"info-block\" style={{ justifyContent: getJustifyContent() }}>\n                    {!fromMe && user.confirm && user.options.sendMessage && <span><Icon name={\"mail\"} size={\"small\"} onClick={sendMessage}/></span>}\n                <span className={\"time\"}>{fromNow(message.time)}</span>\n                    {fromMe && (<span className={\"icons\"}>\n                        {user.confirm && user.options.sendMessage && <Icon name={\"mail\"} size={\"small\"} onClick={sendMessage}/>}\n                    <Modal\n                        trigger={<Icon name={\"trash\"} size={\"small\"} onClick={() => setClose(true)}/>}\n                        open={openDelete}\n                        onClose={() => setClose(false)}\n                        basic\n                        size='small'\n                    >\n                    <Modal.Content>\n                      <Header as={'h3'} textAlign='center' className={\"white-header\"}>Are you sure you want to delete the message?</Header>\n                    </Modal.Content>\n                    <Modal.Actions className={\"action-btn\"}>\n                      <Button color='red' onClick={onDelete} inverted>\n                        <Icon name='trash'/> Delete\n                      </Button>\n                        <Button color='green' onClick={() => setClose(false)} inverted>\n                        <Icon name='cancel'/> Cancel\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                     <Modal\n                         trigger={<Icon name={\"edit\"} size={\"small\"} onClick={() => setCloseEdit(true)}/>}\n                         open={openEdit}\n                         onClose={() => setCloseEdit(false)}\n                         basic\n                         size='small'\n                     >\n                    <Modal.Content>\n                      <Header as={'h3'} textAlign='center' className={\"white-header\"}>Edit message</Header>\n                        <Form>\n                            <TextArea\n                                value={messageEdit}\n                                onChange={(e, data) => changeMessage(data.value)}\n                                style={{minHeight: 200}}\n                            />\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions className={\"action-btn\"}>\n                      <Button color='green' onClick={onEdit} inverted>\n                        <Icon name='edit'/> Edit\n                      </Button>\n                        <Button color='blue' onClick={() => setCloseEdit(false)} inverted>\n                        <Icon name='cancel'/> Cancel\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                </span>)}\n            </span>\n            </p>\n            <Image avatar src={message.user.avatar}/>\n        </div>\n    )\n};\n\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(Actions, dispatch)\n});\nexport default connect(\n    () => ({}),\n    mapDispatchToProps\n)(MessageItem);","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst hasOverflow = el => el.clientHeight < el.scrollHeight\n\nconst isScrolledDown = (el, threshold) => {\n    const bottom = el.scrollTop + el.clientHeight\n    return bottom >= el.scrollHeight - threshold\n}\n\nconst isScrolledUp = el => el.scrollTop === 0\n\nconst scrollDown = el => el.scrollTop = el.scrollHeight - el.clientHeight\n\nconst scrollDownBy = (amount, el) => el.scrollTop += amount\nconst scrollUpBy = (amount, el) => el.scrollTop -= amount\n\nexport default (Component, { isScrolledDownThreshold = 150 } = { }) => class extends React.PureComponent {\n    shouldScroll = true;\n    constructor(props){\n        super(props)\n        this._isScrolledDown = true /* whether the user has scrolled down */\n        this._el = null\n        this._scrollHeight = null\n        this._isScrolledUp = null\n        this.state = { size: (this.props.chat.data || []).length}\n    }\n    scrollDownIfNeeded(){\n        if(this.shouldScroll && hasOverflow(this._el)){\n            scrollDown(this._el)\n            this.shouldScroll = false;\n        }\n    }\n    handleScroll(e){\n        this._isScrolledDown = isScrolledDown(this._el, isScrolledDownThreshold)\n        if(isScrolledUp(this._el)){\n            this.props.onScrolledTop && this.props.onScrolledTop(e)\n        }\n        this.props.onScrolled && this.props.onScrolled(e)\n    }\n    componentDidMount(){\n        this.scrollDownIfNeeded()\n    }\n    componentWillUpdate(nextProps, nextState){\n        this.setState({size: nextProps.chat.data.length});\n        this.shouldScroll = nextProps.chat.data.length > this.state.size;\n        this._scrollHeight = this._el.scrollHeight\n        this._isScrolledUp = isScrolledUp(this._el)\n    }\n    componentDidUpdate(){\n        /* if the list is scrolled all the way up and new items are added, preserve the current scroll position */\n        if(this._isScrolledUp && this._scrollHeight !== null){\n            /* the scroll height increased by this much during the update */\n            const difference = this._el.scrollHeight - this._scrollHeight\n            this._scrollHeight = null\n            scrollDownBy(difference, this._el)\n        }\n        else this.scrollDownIfNeeded()\n    }\n    render(){\n        const { onScrolled, onScrolledTop, ...rest } = this.props\n        return <Component\n            {...rest}\n            ref={ el => this._el = ReactDOM.findDOMNode(el) }\n            onScroll={ e => this.handleScroll(e) }\n        />\n    }\n}","import MessageItem from \"./MessageItem\";\nimport React from \"react\";\nimport autoscroll from '../../helpers/autoscroll';\n\n\nclass MessageList extends React.Component<any> {\n    render() {\n        return (\n            <div className=\"messages-wrap\" {...this.props}>\n                <div>\n                    {(this.props.chat.data || []).map((elem: any) =>\n                        <MessageItem\n                            key={elem.id}\n                            message={elem}\n                            user={this.props.user}/>\n                    )}\n                </div>\n            </div>)\n    }\n};\n\n\nexport default autoscroll(MessageList);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {Header, Loader} from 'semantic-ui-react'\nimport './styles.sass'\nimport MessageInput from \"../Message/Input\";\nimport MessageList from \"../Message/MessageList\";\n\n\nconst ChatPage = (props: any) => {\n\n\n    return (\n        <div className=\"chat-page-wrapper\">\n            {props.chat.isOpen ? (\n                props.chat.isFetching ?\n                    (<div className=\"loader-wrap\">\n                        <Loader active inline='centered'/>\n                    </div>) :\n                    (\n                        <>\n\n                                <MessageList\n                                    chat={props.chat}\n                                    user={props.user.data}/>\n                            <div className=\"input-wrap\">\n                                <MessageInput/>\n                            </div>\n                        </>\n                    )\n            ) : (\n                <div style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", height: \"100%\" }}>\n                    <Header as={'h3'} textAlign={\"center\"}>\n                        Select chat to start texting\n                    </Header>\n                </div>\n            )}\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatPage);\n","import React, {useEffect} from 'react';\nimport './styles.sass';\nimport Header from \"../Header\";\nimport ChatList from \"../ChatList\";\nimport ChatPage from \"../ChatPage\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport socket from '../../services/socket/socket';\nimport {Dimmer, Loader} from \"semantic-ui-react\";\n\nconst Chat = (props: any) => {\n    useEffect(() => {\n        if(props.actions && props.user.data) {\n            console.log('init');\n            socket.connect(props.actions, props.state)\n        }\n    }, [props.actions, props.user]);\n\n    useEffect(() => {\n        props.actions.fetchUser();\n    }, [props.actions]);\n    return (\n        props.user.data && !props.user.isFetching ? (\n        <div className=\"main-wrapper\">\n            <div style={ {background: \"white\"} }>\n                    <Header />\n                <div className=\"content-wrap\">\n                    {props.showPanel &&\n                    <ChatList {...props} />}\n                    <ChatPage />\n                </div>\n            </div>\n        </div>) : (\n            <Dimmer active inverted>\n                <Loader inverted />\n            </Dimmer>\n        )\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    state,\n    showPanel: state.showPanel,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Chat);","import React, {useEffect, useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst LoginForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.loginUser(login, password);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"30%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Login to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                            error={props.loginPage && !!props.loginPage.error}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.loginPage && props.loginPage.isFetching}>\n                            Login\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.loginPage && !!props.loginPage.error && (<Message\n                    error\n                    content={props.loginPage.error}\n                />)}\n                <Message>\n                    New to us? <a href=\"#\" onClick={() => props.actions.changePage(\"reg\")}>Sign Up</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    loginPage: state.loginPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginForm);","import React, {useEffect, useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment, Image } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport ImagePicker from 'react-image-picker'\nimport 'react-image-picker/dist/index.css'\nimport { getAvatars} from \"../../helpers\";\n\nconst imageList = [...getAvatars(14)];\n\nconst RegForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.regUser(login, password, avatar);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"20%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Create an account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='User name' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                        />\n                        <Header as='h4' textAlign='left'>\n                            Choose a photo\n                        </Header>\n                        <ImagePicker\n                            images={imageList.map((image, i) => ({src: image, value: i}))}\n                            onPick={(data: any) => setAvatar(data.src)}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.regPage && props.regPage.isFetching}>\n                            Sign up\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.regPage && !!props.regPage.error && (<Message\n                    error\n                    content={props.regPage.error}\n                />)}\n                <Message>\n                    Already has account? <a href='#'  onClick={() => props.actions.changePage(\"login\")}>Login</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    regPage: state.regPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegForm);","import './styles.sass'\n\n\nconst initParticles = () => {\n    //@ts-ignore\n    // eslint-disable-next-line no-undef\n    particlesJS('particles-js',\n\n        {\n            \"particles\": {\n                \"number\": {\n                    \"value\": 80,\n                    \"density\": {\n                        \"enable\": true,\n                        \"value_area\": 800\n                    }\n                },\n                \"color\": {\n                    \"value\": \"#ffffff\"\n                },\n                \"shape\": {\n                    \"type\": \"circle\",\n                    \"stroke\": {\n                        \"width\": 0,\n                        \"color\": \"#000000\"\n                    },\n                    \"polygon\": {\n                        \"nb_sides\": 5\n                    },\n                    \"image\": {\n                        \"src\": \"img/github.svg\",\n                        \"width\": 100,\n                        \"height\": 100\n                    }\n                },\n                \"opacity\": {\n                    \"value\": 0.5,\n                    \"random\": false,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 1,\n                        \"opacity_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"size\": {\n                    \"value\": 5,\n                    \"random\": true,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 40,\n                        \"size_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"line_linked\": {\n                    \"enable\": true,\n                    \"distance\": 150,\n                    \"color\": \"#ffffff\",\n                    \"opacity\": 0.4,\n                    \"width\": 1\n                },\n                \"move\": {\n                    \"enable\": true,\n                    \"speed\": 2,\n                    \"direction\": \"none\",\n                    \"random\": false,\n                    \"straight\": false,\n                    \"out_mode\": \"out\",\n                    \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 1200\n                    }\n                }\n            },\n            \"interactivity\": {\n                \"detect_on\": \"canvas\",\n                \"events\": {\n                    \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                    },\n                    \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"push\"\n                    },\n                    \"resize\": true\n                },\n                \"modes\": {\n                    \"grab\": {\n                        \"distance\": 400,\n                        \"line_linked\": {\n                            \"opacity\": 1\n                        }\n                    },\n                    \"bubble\": {\n                        \"distance\": 400,\n                        \"size\": 40,\n                        \"duration\": 2,\n                        \"opacity\": 8,\n                        \"speed\": 3\n                    },\n                    \"repulse\": {\n                        \"distance\": 200\n                    },\n                    \"push\": {\n                        \"particles_nb\": 4\n                    },\n                    \"remove\": {\n                        \"particles_nb\": 2\n                    }\n                }\n            },\n            \"retina_detect\": true,\n            \"config_demo\": {\n                \"hide_card\": false,\n                \"background_color\": \"#b61924\",\n                \"background_image\": \"\",\n                \"background_position\": \"50% 50%\",\n                \"background_repeat\": \"no-repeat\",\n                \"background_size\": \"cover\"\n            }\n        }\n\n    );\n};\nexport default initParticles;","import React, {useEffect} from 'react';\nimport LoginForm from \"./LoginForm\";\nimport RegForm from \"./RegForm\";\nimport initParticles from \"./Particles/particles\";\nimport './Particles/styles.sass'\n\n\nconst LoginPage = (props: any) => {\n    useEffect(() => {initParticles()}, [])\n\n    return (\n        <>\n            <div id=\"particles-js\" />\n            {props.page === \"login\" ? <LoginForm/> : <RegForm/>}\n        </>\n    )\n};\n\n\nexport default LoginPage;","import {fetchHeaderConfig} from \"./index\";\n\nconst request: typeof fetch = async (input: RequestInfo, init?: RequestInit | undefined) => {\n    let headers: HeadersInit = init && init.headers ? {...fetchHeaderConfig().headers, ...init.headers } : fetchHeaderConfig().headers as HeadersInit;\n    if(init && init.body) {\n        headers = new Headers({'Content-Type': 'application/json', ...headers});\n    }\n\n    let promise = await fetch(input, { ...(init || {}), headers});\n\n    if(!promise.ok){\n        console.error(promise);\n\n        const message = await promise.json();\n\n        console.log(message);\n\n        if(message.message === \"Token has expired\") {\n            localStorage.removeItem(\"token\");\n\n            return window.location.reload();\n        }\n        // @ts-ignore\n        throw new Error(message.message || message[0]);\n    }\n    return await promise.json();\n};\nexport default request;","import {Dimmer, Icon, Loader, Header} from \"semantic-ui-react\";\nimport React, {useEffect, useState} from 'react';\n\nimport './styles.sass';\nimport request from \"../../helpers/webApi\";\nimport {CONFIRM_EMAIL_DONE} from \"../../var/routers\";\n\nconst ConfirmPage = (props: { token: string }) => {\n    const [isFetching, setLoad] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        request(\n            CONFIRM_EMAIL_DONE,\n            {\n                method: \"POST\",\n                body: JSON.stringify({\n                    token: props.token\n                })\n            }\n        )\n            .then(res => {\n                if (!res) {\n                    setError(true);\n                }\n                setLoad(false);\n            })\n            .catch(err => {\n                console.log(err);\n                setError(true);\n                setLoad(false);\n            })\n    }, []);\n\n    return <div className={\"confirm-wrap\"}> {!isFetching ? (\n        <Dimmer active>\n            <Header as='h2' icon color={\"black\"}>\n                <Icon name={!error ? 'check circle' : 'close'} color={!error ? \"green\" : \"red\"}/>\n                Email doesn't confirmed!\n                <Header.Subheader><span onClick={() => window.location.replace(\"/\")}>Go to app</span></Header.Subheader>\n            </Header>\n        </Dimmer>\n    ) : (\n        <Dimmer inverted>\n            <Loader inverted/>\n        </Dimmer>\n    )\n    }\n    </div>\n};\n\n\nexport default ConfirmPage;","import React from \"react\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport 'semantic-ui-css/semantic.min.css'\nimport LoginPage from \"./components/LoginPage\";\nimport IApp from \"./model/IApp\";\nimport {connect} from \"react-redux\";\nimport {NotificationContainer} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport ConfirmPage from \"./components/ConfirmPage\";\n\nconst App: React.FC = (props: any) => {\n    switch (props.page) {\n        case \"login\":\n        case 'reg':\n            return <LoginPage page={props.page}/>;\n        default:\n            if(window.location.href.indexOf(\"/email\") === -1) {\n                return (\n                    <div className=\"App\">\n                        <Chat/>\n                        <NotificationContainer/>\n                    </div>\n                )\n            } else {\n              const [,,type, ...token] = window.location.pathname.split(\"/\");\n              if(type === \"confirm\"){\n                  return <ConfirmPage token={token.join(\"/\")}/>;\n              }else if(type === \"reset\"){\n                  return (<span>reset</span>);\n              }\n            }\n            return <span>not found</span>;\n    }\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    page: state.page\n});\n\nexport default connect(\n    mapStateToProps,\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {takeLatest, put} from \"redux-saga/effects\";\nimport * as types from \"./constants\";\nimport * as url from \"../var/routers\";\nimport {fetchHeaderConfig} from \"../helpers\";\nimport request from \"../helpers/webApi\";\nimport {NotificationManager} from \"react-notifications\";\n\nfunction* fetchChats(action: any) {\n    try {\n        const res = yield request(url.CHAT_LIST);\n        yield put({type: types.FETCH_CHATS_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* fetchMessages(action: any) {\n    try {\n        const res = yield request(url.CHAT_MESSAGES + action.payload.id, {headers: fetchHeaderConfig().headers});\n        yield put({type: types.FETCH_MESSAGES_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* loginUser(action: any) {\n\n    try {\n        const res = yield request(url.LOGIN, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: action.payload.login,\n                password: action.payload.password\n            }),\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            }\n        });\n        localStorage.setItem('token', res.token);\n        yield put({\n            type: types.CHANGE_PAGE,\n            payload: \"chat\"\n        })\n    } catch (e) {\n        yield put({\n            type: types.LOGIN_FAIL,\n            payload: {error: e.message}\n        });\n        console.error(e);\n    }\n}\n\nfunction* fetchUser(action: any) {\n    try {\n        const res = yield request(url.USER, {\n            method: \"GET\",\n            headers: fetchHeaderConfig().headers\n        });\n\n        yield put({\n            type: types.FETCH_USER_DONE,\n            payload: {\n                user: res\n            }\n        })\n    } catch (e) {\n        localStorage.removeItem('token');\n        yield put({\n            type: types.REMOVE_STORE\n        })\n    }\n}\n\nfunction* regUser(action: any) {\n    const {login, password, avatar} = action.payload;\n    try {\n        yield request(url.REG, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: login,\n                password,\n                avatar\n            })\n        });\n        yield put({\n            type: types.LOGIN,\n            payload: {\n                login, password\n            }\n        })\n    } catch (error) {\n        yield put({\n            type: types.REG_FAIL,\n            payload: {error: error.message}\n        });\n    }\n}\n\nfunction* search(action: any) {\n    try {\n        const res = yield request(url.SEARCH + `?search=${action.payload.search}`);\n        yield put({\n            type: types.SEARCH_DONE,\n            payload: res\n        })\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* newChat(action: any) {\n    try {\n        const res = yield request(url.NEW_CHAT, {\n            method: \"PUT\",\n            body: JSON.stringify({\n                userId: action.payload.userId\n            })\n        });\n        yield put({\n            type: types.CREATE_CHAT_DONE,\n            payload: {\n                chatId: res.chatId\n            }\n        })\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* deleteMessage(action: any) {\n    try {\n        yield request(url.DELETE_MESSAGE + `/${action.payload.messageId}`, {\n            method: \"DELETE\",\n            body: JSON.stringify({\n                chatId: action.payload.chatId\n            })\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* editMessage(action: any) {\n    try {\n        yield request(url.DELETE_MESSAGE + `/${action.payload.messageId}`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                chatId: action.payload.chatId,\n                message: action.payload.message\n            })\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* updateAvatar(action: any) {\n    try {\n        const res = yield request(url.UPDATE_AVATAR, {\n            method: \"POST\",\n            body: JSON.stringify({\n                src: action.payload.src\n            })\n        });\n        if (res) {\n            yield put({\n                type: types.UPDATE_AVATAR_DONE,\n                payload: {\n                    src: res\n                }\n            })\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* updateAbout(action: any) {\n    try {\n        const res = yield request(url.UPDATE_ABOUT, {\n            method: \"POST\",\n            body: JSON.stringify({\n                message: action.payload.message\n            })\n        });\n        yield put({\n            type: types.UPDATE_ABOUT_DONE,\n            payload: {\n                message: res\n            }\n        })\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* updateEmail(action: any) {\n    try {\n        const res = yield request(url.UPDATE_EMAIL, {\n            method: \"POST\",\n            body: JSON.stringify({\n                email: action.payload.email\n            })\n        });\n        yield put({\n            type: types.UPDATE_EMAIL_DONE,\n            payload: {\n                email: res\n            }\n        })\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* confirmMessage(action: any) {\n    try {\n        const res = yield request(url.CONFIRM_EMAIL, {\n            method: \"POST\",\n            body: JSON.stringify({\n                email: action.payload.email\n            })\n        });\n        if (res) {\n            NotificationManager.info(\"Confirm email send\");\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* sendOptions(action: any) {\n    try {\n        const res = yield request(url.SEND_OPTIONS, {\n            method: \"POST\",\n            body: JSON.stringify({\n                ...action.payload.options\n            })\n        });\n        if (res) {\n            yield put({\n                type: types.SEND_OPTIONS_DONE,\n                payload: {\n                    options: action.payload.options\n                }\n            })\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* sendEmail(action: any){\n    try{\n        yield request(url.SEND_EMAIL, {\n            method: \"POST\",\n            body: JSON.stringify({\n                messageId: action.payload.message.id\n            })\n        });\n        NotificationManager.info(\"Email was send\");\n    }catch (e) {\n        console.log(e);\n        NotificationManager.error(\"Something go wrong with email\");\n    }\n}\n\nexport function* watchSaga() {\n    yield takeLatest(types.FETCH_CHATS, fetchChats);\n    yield takeLatest(types.FETCH_MESSAGES, fetchMessages);\n    yield takeLatest(types.LOGIN, loginUser);\n    yield takeLatest(types.FETCH_USER, fetchUser);\n    yield takeLatest(types.REG, regUser);\n    yield takeLatest(types.SEARCH, search);\n    yield takeLatest(types.CREATE_CHAT, newChat);\n    yield takeLatest(types.DELETE_MESSAGE, deleteMessage);\n    yield takeLatest(types.EDIT_MESSAGE, editMessage);\n    yield takeLatest(types.UPDATE_AVATAR, updateAvatar);\n    yield takeLatest(types.UPDATE_ABOUT, updateAbout);\n    yield takeLatest(types.UPDATE_EMAIL, updateEmail);\n    yield takeLatest(types.SEND_CONFIRM_MESSAGE, confirmMessage);\n    yield takeLatest(types.SEND_OPTIONS, sendOptions);\n    yield takeLatest(types.SEND_EMAIL, sendEmail);\n}","import IApp, {IMessage} from './../model/IApp'\nimport IAction from './../model/IAction'\nimport * as types from './constants';\nimport {sortChatList} from \"../helpers\";\n\nconst initialState: IApp = {\n    chatList: {\n        data: null,\n        isFetching: false\n    },\n    user: {\n        isFetching: false,\n        data: null\n    },\n    chat: {\n        id: null,\n        isFetching: false,\n        isOpen: false,\n        data: [],\n        user: null\n    },\n    showPanel: true,\n    page: localStorage.getItem('token') && localStorage.getItem('token') !== \"undefined\" ? \"chat\" : \"login\",\n    search: {\n        isFetching: false,\n        isOpen: false\n    }\n};\n\nexport function reducer(state: IApp = initialState, action: IAction): IApp {\n    let data, message: IMessage, chatList, messageList;\n    switch (action.type) {\n        case types.FETCH_CHATS:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    isFetching: true\n                }\n            };\n        case types.TOGGLE_PANEL:\n            return {\n                ...state,\n                showPanel: !state.showPanel\n            };\n        case types.TOGGLE_SEARCH:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isOpen: !state.search.isOpen\n                },\n                showPanel: true\n            };\n        case types.FETCH_CHATS_DONE:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data: sortChatList(action.payload),\n                    isFetching: false,\n                }\n            };\n        case types.FETCH_MESSAGES:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.id,\n                    isFetching: true,\n                    isOpen: true,\n                    user: action.payload.user\n                }\n            };\n        case types.FETCH_MESSAGES_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: action.payload,\n                    isFetching: false\n                }\n            };\n        case types.ADD_NEW_MESSAGE:\n            message = action.payload.message;\n            data = ([...(state.chatList.data || [])]).map(elem => {\n                if (elem.chat.id === message.chat.id) {\n                    elem.message = message;\n                }\n                return elem;\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    // @ts-ignore\n                    data: sortChatList(data)\n                },\n                chat: {\n                    ...state.chat,\n                    data: state.chat.id === message.chat.id ? [...(state.chat.data || []), action.payload.message] : state.chat.data\n                }\n            };\n        case types.CHANGE_PAGE:\n            return {\n                ...state,\n                page: action.payload\n            };\n        case types.REMOVE_STORE:\n            return {\n                ...initialState,\n                page: \"login\"\n            };\n        case types.FETCH_USER:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: true\n                }\n            };\n        case types.FETCH_USER_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: false,\n                    data: action.payload.user\n                }\n            };\n        case types.LOGIN:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.LOGIN_FAIL:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.REG:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.REG_FAIL:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.SEARCH:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: true\n                }\n            };\n        case types.SEARCH_DONE:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: false,\n                    data: action.payload\n                }\n            };\n        case types.CREATE_CHAT:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    isFetching: true,\n                    isOpen: true,\n                    user: action.payload.user\n                }\n            };\n        case types.CREATE_CHAT_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.chatId,\n                    isFetching: false,\n                    data: []\n                }\n            };\n        case types.ADD_CHAT_TO_LIST:\n            data = [...(state.chatList.data || [])];\n            data.push({\n                chat: {id: action.payload.chatId},\n                message: null as unknown as IMessage,\n                user: action.payload.user\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    // @ts-ignore\n                    data: sortChatList(data)\n                }\n            };\n        case types.DELETE_MESSAGE_DONE:\n            message = action.payload.message;\n            if (message.chat.id !== state.chat.id)\n                return state;\n            messageList = [...(state.chat.data || [])]\n                .map(m => m.id === message.id ? undefined : m)\n                .filter(m => m);\n\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: messageList as IMessage[]\n                }\n            };\n        case types.EDIT_MESSAGE_DONE:\n            message = action.payload.message;\n            if (message.chat.id !== state.chat.id)\n                return state;\n            messageList = [...(state.chat.data || [])]\n                .map(m => m.id === message.id ? message : m);\n\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: messageList as IMessage[]\n                }\n            };\n        case types.CLOSE_CHAT:\n            return {\n                ...state,\n                chat: initialState.chat\n            };\n        case types.UPDATE_AVATAR_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    // @ts-ignore\n                    data: {\n                        ...(state.user.data || {}),\n                        avatar: action.payload.src\n                    }\n                }\n            };\n        case types.UPDATE_ABOUT_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    // @ts-ignore\n                    data: {\n                        ...(state.user.data || {}),\n                        about: action.payload.message\n                    }\n                }\n            };\n        case types.UPDATE_EMAIL_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    // @ts-ignore\n                    data: {\n                        ...(state.user.data || {}),\n                        email: action.payload.email,\n                        confirm: false\n                    }\n                }\n            };\n        case types.SEND_OPTIONS_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    // @ts-ignore\n                    data: {\n                        ...(state.user.data || {}),\n                        options: action.payload.options\n                    }\n                }\n            };\n        case types.CLEAR_LOGIN:\n            return {\n                ...state,\n                loginPage: initialState.loginPage\n            };\n         case types.CLEAR_REG:\n            return {\n                ...state,\n                regPage: initialState.regPage\n            };\n        default:\n            return state;\n    }\n} ","import { createStore, applyMiddleware } from \"redux\";\nimport { watchSaga } from \"./redux/saga\";\nimport { reducer } from \"./redux/reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = () => {\n  const middlewareSaga = createSagaMiddleware();\n  const store = createStore(reducer, composeWithDevTools(\n    applyMiddleware(middlewareSaga)\n  ));\n  middlewareSaga.run(watchSaga);\n  return store;\n};\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./configStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}