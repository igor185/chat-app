{"version":3,"sources":["redux/constants.ts","redux/actions.ts","components/Search/Search.tsx","components/Header/index.tsx","helpers/index.ts","components/ChatList/ChatElem/index.tsx","components/ChatList/index.tsx","var/routers.ts","services/socket/socket.ts","components/Message/Input/index.tsx","components/Message/MessageItem.tsx","components/Message/MessageList.tsx","components/ChatPage/index.tsx","components/Chat/index.tsx","components/LoginPage/LoginForm.tsx","components/LoginPage/RegForm.tsx","components/LoginPage/Particles/particles.tsx","components/LoginPage/index.tsx","App.tsx","serviceWorker.ts","helpers/webApi.tsx","redux/saga.ts","redux/reducer.ts","configStore.ts","index.tsx"],"names":["FETCH_CHATS","FETCH_CHATS_DONE","FETCH_MESSAGES","FETCH_MESSAGES_DONE","TOGGLE_PANEL","ADD_NEW_MESSAGE","LOGIN","LOGIN_FAIL","REG","REG_FAIL","CHANGE_PAGE","REMOVE_STORE","FETCH_USER","FETCH_USER_DONE","SEARCH","SEARCH_DONE","CREATE_CHAT","CREATE_CHAT_DONE","ADD_CHAT_TO_LIST","DELETE_MESSAGE","DELETE_MESSAGE_DONE","EDIT_MESSAGE","EDIT_MESSAGE_DONE","clearStore","type","types","fetchChats","fetchMessages","chatId","payload","id","togglePanel","newMessage","message","loginUser","login","password","regUser","avatar","changePage","page","fetchUser","search","newChat","userId","addChatToList","user","deleteMessage","messageId","deleteMessageDone","editMessage","editMessageDone","options","key","text","value","connect","state","chatList","dispatch","actions","bindActionCreators","props","_useState","useState","_useState2","Object","slicedToArray","setValue","_useState3","_useState4","open","setOpen","react_default","a","createElement","Modal","trigger","className","onClick","index_es","icon","faSearch","Header","Content","scrolling","Form","onSubmit","Input","label","Dropdown","defaultValue","labelPosition","placeholder","fluid","loading","isFetching","onChange","e","data","length","Fragment","Header_Header","as","map","Comment","Group","Avatar","src","Author","username","Actions","Action","chat","find","elem","onText","faBars","components_Search_Search","localStorage","removeItem","faSignOutAlt","dayjs","extend","relativeTime","fetchHeaderConfig","headers","Authorization","concat","getItem","fromNow","date","sortChatList","toConsumableArray","sort","el1","el2","time1","time","ChatElem","name","Image","react_ellipsis_text_default","useEffect","ChatList_ChatElem","prefix","SOCKET_URL","CHAT_LIST","CHAT_MESSAGES","USER","NEW_CHAT","stompClient","socket","destination","body","send","action","store","connected","console","log","Stomp","over","SockJS","url","subscribe","_ref","JSON","parse","_ref2","user1","user2","_ref3","_ref4","stringify","fromMe","openDelete","setClose","openEdit","setCloseEdit","_useState5","_useState6","messageEdit","changeMessage","style","alignItems","Icon","size","onClose","basic","textAlign","Button","color","inverted","TextArea","minHeight","MessageList","Message_MessageItem","isOpen","Loader","active","inline","Message_MessageList","Message_Input","showPanel","background","components_Header","components_ChatList","components_ChatPage","Dimmer","loginPage","setLogin","setPassword","Grid","position","top","left","verticalAlign","Column","width","Segment","stacked","iconPosition","event","error","Message","content","href","imageList","amount","res","i","randomProfile","getAvatars","regPage","setAvatar","react_image_picker_dist_default","images","image","onPick","initParticles","particlesJS","particles","number","density","enable","value_area","shape","stroke","polygon","nb_sides","height","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","config_demo","hide_card","background_color","background_image","background_position","background_repeat","background_size","LoginPage","LoginPage_LoginForm","LoginPage_RegForm","components_LoginPage","components_Chat","Boolean","window","location","hostname","match","request","asyncToGenerator","regenerator_default","mark","_callee","input","init","promise","wrap","_context","prev","next","objectSpread2","Headers","Content-Type","fetch","sent","ok","json","Error","abrupt","stop","_x","_x2","apply","this","arguments","watchSaga","put","t0","_marked","_context2","_marked2","_context3","method","X-Requested-With","setItem","token","_marked3","_context4","_marked4","_action$payload","_context5","axios","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","takeLatest","_marked10","initialState","reducer","messageList","undefined","m","filter","middlewareSaga","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ymCAAaA,EAAc,cACdC,EAAmB,mBAEnBC,EAAiB,iBACjBC,EAAsB,sBAEtBC,EAAe,eAEfC,EAAkB,kBAGlBC,EAAQ,QAERC,EAAa,aAEbC,EAAM,MAENC,EAAW,WAEXC,EAAc,cACdC,EAAe,eAEfC,EAAa,aACbC,EAAkB,kBAGlBC,EAAS,SACTC,EAAc,cAGdC,EAAc,cACdC,EAAmB,mBAGnBC,EAAmB,mBAEnBC,EAAiB,iBACjBC,EAAsB,sBAEtBC,EAAe,eACfC,EAAoB,oBCrCpBC,EAAa,iBAAO,CAC/BC,KAAMC,IAIKC,EAAa,iBAAO,CAC7BF,KAAMC,IAGGE,EAAgB,SAACC,GAAD,MAAqB,CAC9CJ,KAAMC,EACNI,QAAS,CACLC,GAAIF,KAICG,EAAc,iBAAO,CAC9BP,KAAMC,IAGGO,EAAa,SAACC,GACvB,MAAO,CACHT,KAAMC,EACNI,QAAS,CACLI,aAKCC,EAAY,SAACC,EAAeC,GAAhB,MAAsC,CAC3DZ,KAAMC,EACNI,QAAS,CACLM,QACAC,cAIKC,EAAU,SAACF,EAAeC,EAAkBE,GAAlC,MAAsD,CACzEd,KAAMC,EACNI,QAAS,CACLM,QACAC,WACAE,YAIKC,EAAa,SAACC,GAAD,MAAmB,CACzChB,KAAMC,EACNI,QAASW,IAGAC,EAAY,iBAAO,CAC5BjB,KAAMC,IAGGiB,EAAS,SAACA,GAAD,MAAqB,CACxClB,KAAMC,EACNI,QAAS,CAAEa,YAGDC,EAAU,SAACC,GAAD,MAAqB,CACxCpB,KAAMC,EACNI,QAAS,CACLe,YAIKC,EAAgB,SAACjB,EAAgBkB,GAAjB,MAAkC,CAC3DtB,KAAMC,EACNI,QAAS,CACLD,SACAkB,UAIKC,EAAgB,SAACC,EAAmBpB,GAApB,MAAwC,CACjEJ,KAAMC,EACNI,QAAS,CACLmB,YACApB,YAIKqB,EAAoB,SAAChB,GAAD,MAAwB,CACrDT,KAAMC,EACNI,QAAS,CACLI,aAIKiB,EAAc,SAACF,EAAmBpB,EAAgBK,GAApC,MAAyD,CAChFT,KAAMC,EACNI,QAAS,CACLmB,YACApB,SACAK,aAIKkB,EAAkB,SAAClB,GAAD,MAAwB,CACnDT,KAAMC,EACNI,QAAS,CACLI,uFC9FFmB,WAAU,CACZ,CAACC,IAAK,OAAQC,KAAM,OAAQC,MAAO,UA8ExBC,eAVS,SAACC,GAAD,MAAuB,CAC3Cf,OAAQe,EAAMf,OACdgB,SAAUD,EAAMC,WAGO,SAACC,GAAD,MAAoB,CAC3CC,QAASC,6BAAmBD,EAASD,KAI1BH,CA3EA,SAACM,GAAe,IAAAC,EACDC,mBAAS,IADRC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBR,EADoBU,EAAA,GACbG,EADaH,EAAA,GAAAI,EAEHL,oBAAS,GAFNM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEpBE,EAFoBD,EAAA,GAEdE,EAFcF,EAAA,GAmB3B,OACIG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIL,KAAMA,EACNM,QAASJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAAYC,QAAS,kBAAMP,GAAQ,KACvDC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBC,KAAMC,QAC3BT,EAAAC,EAAAC,cAACC,EAAA,EAAMO,OAAP,eACAV,EAAAC,EAAAC,cAACC,EAAA,EAAMQ,QAAP,CACIC,WAAS,GACTZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,SAvBD,WACbzB,EAAMF,QAAQlB,OAAOa,KAsBakB,EAAAC,EAAAC,cAACa,GAAA,EAAD,CACtBC,MAAOhB,EAAAC,EAAAC,cAACe,GAAA,EAAD,CAAUC,aAAcvC,GAAQ,GAAGG,MAAOH,QAASA,KAC1DwC,cAAc,OACdC,YAAY,YACZC,OAAK,EACLC,QAASjC,EAAMpB,OAAOsD,WACtBzC,MAAOA,EACP0C,SAAU,SAACC,EAAGC,GAAJ,OAAa/B,EAAS+B,EAAK5C,UAEpCO,EAAMpB,OAAOyD,MAAQrC,EAAMpB,OAAOyD,KAAKC,OAAS,GAC7C3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACI5B,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,CAAQC,GAAI,MAAZ,WACCzC,EAAMpB,OAAOyD,KAAKK,IAAI,SAAC1D,GAAD,OACnB2B,EAAAC,EAAAC,cAAC8B,GAAA,EAAQC,MAAT,KACIjC,EAAAC,EAAAC,cAAC8B,GAAA,EAAD,KACIhC,EAAAC,EAAAC,cAAC8B,GAAA,EAAQE,OAAT,CAAgBJ,GAAG,IAAIK,IAAK9D,EAAKR,SACjCmC,EAAAC,EAAAC,cAAC8B,GAAA,EAAQrB,QAAT,KACIX,EAAAC,EAAAC,cAAC8B,GAAA,EAAQI,OAAT,KAAiB/D,EAAKgE,UAKtBrC,EAAAC,EAAAC,cAAC8B,GAAA,EAAQM,QAAT,KACItC,EAAAC,EAAAC,cAAC8B,GAAA,EAAQO,OAAT,KAAgBvC,EAAAC,EAAAC,cAAA,QAAMI,QAAS,YA1C5D,SAACjC,GACZ0B,GAAQ,GAER,IAAMyC,EAAOnD,EAAMJ,SAASyC,KAAKe,KAAM,SAACC,GAAD,OAAcA,EAAKrE,KAAKhB,KAAOgB,EAAKhB,KAC3E,GAAGmF,EACC,OAAOnD,EAAMF,QAAQjC,cAAcsF,EAAKA,KAAKnF,IAEjDgC,EAAMF,QAAQjB,QAAQG,EAAKhB,IAmCmDsF,CAAOtE,KAA7B,qBCtBjDU,eAPS,SAACC,GAAD,MAAuB,IAEpB,SAACE,GAAD,MAAoB,CAC3CC,QAASC,6BAAmBD,EAASD,KAI1BH,CAjCA,SAACM,GAOZ,OACIW,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAAYC,QAAS,kBAAMjB,EAAMF,QAAQ7B,gBACpD0C,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBC,KAAMoC,OAE3B5C,EAAAC,EAAAC,cAAC2C,GAAD,OAEJ7C,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAAYC,QAftB,WACbwC,aAAaC,WAAW,SACxB1D,EAAMF,QAAQrC,eAcFkD,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAiBC,KAAMwC,qGCvB3CC,KAAMC,OAAOC,MAGN,IAAMC,GAAoB,iBAAO,CACpCC,QAAS,CACLC,cAAa,UAAAC,OAAYT,aAAaU,QAAQ,aAWzCC,GAAU,SAACC,GAAD,OAA2BT,KAAMS,GAAMD,WAEjDE,GAAe,SAACjC,GAGzB,OAFSjC,OAAAmE,GAAA,EAAAnE,CAAQiC,GAAQ,IAEdmC,KAAK,SAACC,EAAKC,GAClB,IAAMC,EAAgBF,EAAItG,QAAUsG,EAAItG,QAAQyG,KAAO,EAEvD,OADsBF,EAAIvG,QAAUuG,EAAIvG,QAAQyG,KAAO,GACzCD,0BCKPE,GAnBE,SAAC7E,GAAe,IACtB8E,EAAmC9E,EAAnC8E,KAAMT,EAA6BrE,EAA7BqE,KAAMlG,EAAuB6B,EAAvB7B,QAASH,EAAcgC,EAAdhC,GAAIQ,EAAUwB,EAAVxB,OAChC,OACImC,EAAAC,EAAAC,cAAA,OAAKG,UAAS,kBAAAkD,OAAoBlE,EAAMlC,SAAWE,EAAK,UAAY,IAAMiD,QAAS,kBAAMjB,EAAMiB,QAAQjD,KACnG2C,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAACkE,GAAA,EAAD,CAAOvG,QAAM,EAACsE,IAAKtE,KAEvBmC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QAAQ8D,GACvBnE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QAAQoD,GAAQC,KAEnC1D,EAAAC,EAAAC,cAACmE,GAAApE,EAAD,CAAcpB,KAAMrB,EAAUA,EAAQA,QAAU,GAAImE,OAAQ,QCuB7D5C,uBAxCS,SAACC,GAAD,MAAuB,CAC3CC,SAAUD,EAAMC,SAChBuD,KAAMxD,EAAMwD,OAGW,SAACtD,GAAD,MAAoB,CAC3CC,QAASC,6BAAmBD,EAASD,KAkC1BH,CAzBE,SAACM,GAMd,OALAiF,oBAAU,WACDjF,EAAMJ,SAASyC,MAChBrC,EAAMF,QAAQlC,cACnB,CAACoC,EAAMF,UAGNa,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KAEI5B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACVhB,EAAMJ,SAASyC,MAAQrC,EAAMJ,SAASyC,KAAKK,IAAI,SAAAW,GAAI,OAAIA,GAAQA,EAAKlF,SACjEwC,EAAAC,EAAAC,cAACqE,GAAD,CAAU3F,IAAK8D,EAAKF,KAAKnF,GAAIA,GAAIqF,EAAKF,KAAKnF,GACjCF,OAAQkC,EAAMmD,KAAKnF,GACnB8G,KAAMzB,EAAKrE,KAAKgE,SAChBqB,KAAMhB,EAAKlF,QAAQyG,KACnBzG,QAASkF,EAAKlF,QACdK,OAAQ6E,EAAKrE,KAAKR,OAClByC,QAAS,SAACjD,GAAD,OAAgBgC,EAAMF,QAAQjC,cAAcwF,EAAKF,KAAKnF,2ECzCvFmH,GAAS,6CAIFC,GAAU,GAAAlB,OAAMiB,GAAN,OACVE,GAAS,GAAAnB,OAAMiB,GAAN,cACTG,GAAa,GAAApB,OAAMiB,GAAN,cACb3I,GAAK,GAAA0H,OAAMiB,GAAN,mBACLI,GAAI,GAAArB,OAAMiB,GAAN,WACJzI,GAAG,GAAAwH,OAAMiB,GAAN,QACHnI,GAAM,GAAAkH,OAAMiB,GAAN,cACNK,GAAQ,GAAAtB,OAAMiB,GAAN,aACR9H,GAAc,GAAA6G,OAAMiB,GAAN,gBCNvBM,GAAc,GAkDHC,GAJF,SAACC,EAAqB3B,EAAc4B,GAC7C,OAAOH,GAAYI,KAAKF,EAAa3B,EAAS4B,IAGnCF,GA9CC,SAACI,EAAwBC,GACrC,GAAGN,GAAYO,UACXC,QAAQC,IAAI,yBADhB,CAMA,IAAMlH,EAAO+G,EAAM/G,KAAKqD,MAExBoD,GAAcU,KAAMC,KAAK,IAAIC,KAAOC,MACxB5G,QAAQ,GAAI,WACpBuG,QAAQC,IAAI,YAAaH,EAAM/G,MAI/ByG,GAAYc,UAAZ,oBAAArC,OAA0ClF,EAAKhB,IAAM,SAAAwI,GAAA,IAAGZ,EAAHY,EAAGZ,KAAH,OAAcE,EAAO5H,WAAWuI,KAAKC,MAAMd,MAEhGH,GAAYc,UAAZ,iBAAArC,OAAuClF,EAAKhB,IAAM,SAAA2I,GAA+B,IAA5Bf,EAA4Be,EAA5Bf,KAC3C/G,EAAyD4H,KAAKC,MAAMd,GAE1EE,EAAO/G,cAAcF,EAAQf,OAAQe,EAAQ+H,MAAM5I,KAAOgB,EAAKhB,GAAKa,EAAQ+H,MAAQ/H,EAAQgI,SAIhGpB,GAAYc,UAAZ,uBAAArC,OAA6ClF,EAAKhB,IAAM,SAAA8I,GAA+B,IAA5BlB,EAA4BkB,EAA5BlB,KACjDzH,EAAoBsI,KAAKC,MAAMd,GAErCK,QAAQC,IAAI/H,GAEZ2H,EAAO3G,kBAAkBhB,GACzB2H,EAAOlI,eAGX6H,GAAYc,UAAZ,qBAAArC,OAA2ClF,EAAKhB,IAAM,SAAA+I,GAA+B,IAA5BnB,EAA4BmB,EAA5BnB,KAC/CzH,EAAoBsI,KAAKC,MAAMd,GAErCE,EAAOzG,gBAAgBlB,GACvB2H,EAAOlI,mBCTJ8B,eAVS,SAACC,GAAD,MAAuB,CAC3CX,KAAMW,EAAMX,KACZmE,KAAMxD,EAAMwD,OAGW,SAACtD,GAAD,MAAoB,CAC3CC,QAASC,6BAAmBD,EAASD,KAI1BH,CA7Ba,SAACM,GAAe,IAAAC,EACdC,mBAAS,IADKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjCR,EADiCU,EAAA,GAC1BG,EAD0BH,EAAA,GAYxC,OAAOQ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,SAAU,SAACW,GAThB3C,IAEJiG,GAAY,mBAAoB,GAAIe,KAAKO,UAAU,CAC/ClJ,OAAQkC,EAAMmD,KAAKnF,GACnBc,OAAQkB,EAAMhB,KAAKqD,KAAKrE,GACxBG,QAASsB,KAEba,EAAS,OAGTK,EAAAC,EAAAC,cAACa,GAAA,EAAD,CAAOK,YAAY,oBAAoBC,OAAK,EAACvC,MAAOA,EAAO0C,SAAU,SAACC,EAAGC,GAAJ,OAAa/B,EAAS+B,EAAK5C,iDCZxGmE,KAAMC,OAAOC,MAGN,IAiFQpE,eACX,iBAAO,IAJgB,SAACG,GAAD,MAAoB,CAC3CC,QAASC,6BAAmBkD,EAASpD,KAE1BH,CAjFY,SAACM,GAAsE,IACtF7B,EAA2B6B,EAA3B7B,QAASa,EAAkBgB,EAAlBhB,KAAMc,EAAYE,EAAZF,QACjBmH,EAAS9I,EAAQa,KAAKhB,KAAOgB,EAAKhB,GAFsDiC,EAI/DC,oBAAS,GAJsDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIvFiH,EAJuF/G,EAAA,GAI3EgH,EAJ2EhH,EAAA,GAAAI,EAK7DL,oBAAS,GALoDM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAKvF6G,EALuF5G,EAAA,GAK7E6G,EAL6E7G,EAAA,GAAA8G,EAMzDpH,mBAAc/B,EAAQA,SANmCoJ,EAAAnH,OAAAC,EAAA,EAAAD,CAAAkH,EAAA,GAMvFE,EANuFD,EAAA,GAM1EE,EAN0EF,EAAA,GAiB9F,OACI5G,EAAAC,EAAAC,cAAA,OAAKG,UAAS,gBAAAkD,OAAkBgD,EAAa,YAAc,IAAMQ,MAAO,CAAEC,WAAYV,EAAS,WAAa,eAC5GtG,EAAAC,EAAAC,cAAA,KAAGG,UAAWiG,EAAS,UAAY,aAC9B9I,EAAQA,QACTwC,EAAAC,EAAAC,cAAA,QAAMG,UAAU,cACZL,EAAAC,EAAAC,cAAA,QAAMG,UAAW,QAASoD,GAAQjG,EAAQyG,OACzCqC,GAAWtG,EAAAC,EAAAC,cAAA,QAAMG,UAAW,SACzBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,QAAUJ,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAM9C,KAAM,QAAS+C,KAAM,QAAS5G,QAAS,kBAAMkG,GAAS,MACtE1G,KAAMyG,EACNY,QAAS,kBAAMX,GAAS,IACxBY,OAAK,EACLF,KAAK,SAETlH,EAAAC,EAAAC,cAACC,EAAA,EAAMQ,QAAP,KACEX,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,CAAQC,GAAI,KAAMuF,UAAU,SAAShH,UAAW,gBAAhD,iDAEFL,EAAAC,EAAAC,cAACC,EAAA,EAAMmC,QAAP,CAAejC,UAAW,cACxBL,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAQC,MAAM,MAAMjH,QA3BrB,WACbkG,GAAS,GACTrH,EAAQb,cAAcd,EAAQH,GAAIG,EAAQgF,KAAKnF,KAyBMmK,UAAQ,GAC7CxH,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAM9C,KAAK,UADb,WAGEnE,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAQC,MAAM,QAAQjH,QAAS,kBAAMkG,GAAS,IAAQgB,UAAQ,GAC9DxH,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAM9C,KAAK,WADX,aAKHnE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,QAASJ,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAM9C,KAAM,OAAQ+C,KAAM,QAAS5G,QAAS,kBAAMoG,GAAa,MACxE5G,KAAM2G,EACNU,QAAS,kBAAMT,GAAa,IAC5BU,OAAK,EACLF,KAAK,SAEVlH,EAAAC,EAAAC,cAACC,EAAA,EAAMQ,QAAP,KACEX,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,CAAQC,GAAI,KAAMuF,UAAU,SAAShH,UAAW,gBAAhD,gBACEL,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACuH,GAAA,EAAD,CACI3I,MAAO+H,EACPrF,SAAU,SAACC,EAAGC,GAAJ,OAAaoF,EAAcpF,EAAK5C,QAC1CiI,MAAO,CAAEW,UAAW,SAIhC1H,EAAAC,EAAAC,cAACC,EAAA,EAAMmC,QAAP,CAAejC,UAAW,cACxBL,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAQC,MAAM,QAAQjH,QAhDzB,WACXoG,GAAa,GACbvH,EAAQV,YAAYjB,EAAQH,GAAIG,EAAQgF,KAAKnF,GAAIwJ,IA8CIW,UAAQ,GAC7CxH,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAM9C,KAAK,SADb,SAGEnE,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAQC,MAAM,OAAOjH,QAAS,kBAAMoG,GAAa,IAAQc,UAAQ,GACjExH,EAAAC,EAAAC,cAAC+G,GAAA,EAAD,CAAM9C,KAAK,WADX,gBAQZnE,EAAAC,EAAAC,cAACkE,GAAA,EAAD,CAAOvG,QAAM,EAACsE,IAAK3E,EAAQa,KAAKR,YCzE7B8J,GAPY,SAACtI,GAExB,OAAOW,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,UAAKvC,EAAMmD,KAAKd,MAAQ,IAAIK,IAAI,SAACW,GAAD,OAAoB1C,EAAAC,EAAAC,cAAC0H,GAAD,CAAahJ,IAAK8D,EAAKrF,GAAIG,QAASkF,EAAMrE,KAAMgB,EAAMhB,WC4CtGU,eAVS,SAACC,GAAD,MAAuB,CAC3CwD,KAAMxD,EAAMwD,KACZnE,KAAMW,EAAMX,OAGW,SAACa,GAAD,MAAoB,CAC3CC,QAASC,6BAAmBD,EAASD,KAI1BH,CAxCE,SAACM,GAGd,OACIW,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACVhB,EAAMmD,KAAKqF,OACRxI,EAAMmD,KAAKjB,WACNvB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACZL,EAAAC,EAAAC,cAAC4H,GAAA,EAAD,CAAQC,QAAM,EAACC,OAAO,cAGtBhI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACI5B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACPL,EAAAC,EAAAC,cAAC+H,GAAD,CACAzF,KAAMnD,EAAMmD,KACZnE,KAAMgB,EAAMhB,KAAKqD,QAEzB1B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAACgI,GAAD,QAKhB,qBCmBDnJ,eAXS,SAACC,GAAD,MAAuB,CAC3CA,QACAmJ,UAAWnJ,EAAMmJ,UACjB9J,KAAMW,EAAMX,OAGW,SAACa,GAAD,MAAoB,CAC3CC,QAASC,6BAAmBD,EAASD,KAI1BH,CAzCF,SAACM,GAWV,OAVAiF,oBAAU,WACHjF,EAAMF,SAAWE,EAAMhB,KAAKqD,OAC3B4D,QAAQC,IAAI,QACZR,GAAe1F,EAAMF,QAASE,EAAML,SAEzC,CAACK,EAAMF,QAASE,EAAMhB,OAEzBiG,oBAAU,WACNjF,EAAMF,QAAQnB,aACf,CAACqB,EAAMF,UAENE,EAAMhB,KAAKqD,OAASrC,EAAMhB,KAAKkD,WAC/BvB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,OAAK6G,MAAQ,CAACqB,WAAY,UAClBpI,EAAAC,EAAAC,cAACmI,GAAD,MACJrI,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACVhB,EAAM8I,WACPnI,EAAAC,EAAAC,cAACoI,GAAajJ,GACdW,EAAAC,EAAAC,cAACqI,GAAD,SAIRvI,EAAAC,EAAAC,cAACsI,GAAA,EAAD,CAAQT,QAAM,EAACP,UAAQ,GACnBxH,EAAAC,EAAAC,cAAC4H,GAAA,EAAD,CAAQN,UAAQ,8CCwBjBzI,eAVS,SAACC,GAAD,MAAuB,CAC3CmJ,UAAWnJ,EAAMmJ,UACjBM,UAAWzJ,EAAMyJ,YAGM,SAACvJ,GAAD,MAAoB,CAC3CC,QAASC,6BAAmBD,EAASD,KAI1BH,CArDG,SAACM,GAAe,IAAAC,EACJC,mBAAS,IADLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvB5B,EADuB8B,EAAA,GAChBkJ,EADgBlJ,EAAA,GAAAI,EAEEL,mBAAS,IAFXM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEvBjC,EAFuBkC,EAAA,GAEb8I,EAFa9I,EAAA,GAO9B,OACIG,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAMvB,UAAU,SAASN,MAAO,CAAG8B,SAAU,WAAYC,IAAK,MAAOC,KAAM,OAASC,cAAc,UAC9FhJ,EAAAC,EAAAC,cAAC0I,GAAA,EAAKK,OAAN,CAAalC,MAAO,CAAEmC,MAAO,IAAKd,WAAY,UAC1CpI,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,CAAQC,GAAG,KAAKuF,UAAU,UAA1B,yBAGArH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMqG,KAAK,SACPlH,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAASC,SAAO,GACZpJ,EAAAC,EAAAC,cAACW,EAAA,EAAKE,MAAN,CAAYM,OAAK,EAACb,KAAK,OAAO6I,aAAa,OAAOjI,YAAY,iBAAiBtC,MAAOpB,EAAO8D,SAAU,SAAC8H,EAAO5H,GAAR,OAAiBgH,EAAShH,EAAK5C,UACtIkB,EAAAC,EAAAC,cAACW,EAAA,EAAKE,MAAN,CACIM,OAAK,EACLb,KAAK,OACL6I,aAAa,OACbjI,YAAY,WACZrE,KAAK,WACL+B,MAAOnB,EACP6D,SAAU,SAAC8H,EAAO5H,GAAR,OAAiBiH,EAAYjH,EAAK5C,QAC5CyK,MAAOlK,EAAMoJ,aAAepJ,EAAMoJ,UAAUc,QAEhDvJ,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAQjH,UAAW,YAAagB,OAAK,EAAC6F,KAAK,QAAQ5G,QArBtD,kBAAMjB,EAAMF,QAAQ1B,UAAUC,EAAOC,IAqBoC2D,QAASjC,EAAMoJ,WAAapJ,EAAMoJ,UAAUlH,YAAlH,WAKPlC,EAAMoJ,aAAepJ,EAAMoJ,UAAUc,OAAUvJ,EAAAC,EAAAC,cAACsJ,GAAA,EAAD,CAC5CD,OAAK,EACLE,QAASpK,EAAMoJ,UAAUc,QAE7BvJ,EAAAC,EAAAC,cAACsJ,GAAA,EAAD,mBACexJ,EAAAC,EAAAC,cAAA,KAAGwJ,KAAK,IAAIpJ,QAAS,kBAAMjB,EAAMF,QAAQrB,WAAW,SAApD,qCCjCzB6L,WAASlK,OAAAmE,GAAA,EAAAnE,CXGW,SAACmK,GAEvB,IADA,IAAIC,EAAM,GACFC,EAAI,EAAGA,EAAEF,EAAQE,IACrBD,EAAIC,GAAKC,KAAclM,SAC3B,OAAOgM,EWPWG,CAAW,MAgElBjL,eAVS,SAACC,GAAD,MAAuB,CAC3CmJ,UAAWnJ,EAAMmJ,UACjB8B,QAASjL,EAAMiL,UAGQ,SAAC/K,GAAD,MAAoB,CAC3CC,QAASC,6BAAmBD,EAASD,KAI1BH,CA9DC,SAACM,GAAe,IAAAC,EACFC,mBAAS,IADPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrB5B,EADqB8B,EAAA,GACdkJ,EADclJ,EAAA,GAAAI,EAEIL,mBAAS,IAFbM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAErBjC,EAFqBkC,EAAA,GAEX8I,EAFW9I,EAAA,GAAA8G,EAGApH,mBAAS,IAHTqH,EAAAnH,OAAAC,EAAA,EAAAD,CAAAkH,EAAA,GAGrB9I,EAHqB+I,EAAA,GAGbsD,EAHatD,EAAA,GAU5B,OAFAtB,QAAQC,IAAIlG,EAAM4K,SAAW5K,EAAM4K,QAAQV,OAGvCvJ,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAMvB,UAAU,SAASN,MAAO,CAAG8B,SAAU,WAAYC,IAAK,MAAOC,KAAM,OAASC,cAAc,UAC9FhJ,EAAAC,EAAAC,cAAC0I,GAAA,EAAKK,OAAN,CAAalC,MAAO,CAAEmC,MAAO,IAAKd,WAAY,UAC1CpI,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,CAAQC,GAAG,KAAKuF,UAAU,UAA1B,2BAGArH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMqG,KAAK,SACPlH,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAASC,SAAO,GACZpJ,EAAAC,EAAAC,cAACW,EAAA,EAAKE,MAAN,CAAYM,OAAK,EAACb,KAAK,OAAO6I,aAAa,OAAOjI,YAAY,iBAAiBtC,MAAOpB,EAAO8D,SAAU,SAAC8H,EAAO5H,GAAR,OAAiBgH,EAAShH,EAAK5C,UACtIkB,EAAAC,EAAAC,cAACW,EAAA,EAAKE,MAAN,CACIM,OAAK,EACLb,KAAK,OACL6I,aAAa,OACbjI,YAAY,WACZrE,KAAK,WACL+B,MAAOnB,EACP6D,SAAU,SAAC8H,EAAO5H,GAAR,OAAiBiH,EAAYjH,EAAK5C,UAEhDkB,EAAAC,EAAAC,cAAC2B,GAAA,EAAD,CAAQC,GAAG,KAAKuF,UAAU,QAA1B,kBAGArH,EAAAC,EAAAC,cAACiK,GAAAlK,EAAD,CACImK,OAAQT,GAAU5H,IAAI,SAACsI,EAAOP,GAAR,MAAe,CAAC3H,IAAKkI,EAAOvL,MAAOgL,KACzDQ,OAAQ,SAAC5I,GAAD,OAAewI,EAAUxI,EAAKS,QAE1CnC,EAAAC,EAAAC,cAACoH,GAAA,EAAD,CAAQjH,UAAW,YAAagB,OAAK,EAAC6F,KAAK,QAAQ5G,QA7BtD,kBAAMjB,EAAMF,QAAQvB,QAAQF,EAAOC,EAAUE,IA6B4ByD,QAASjC,EAAM4K,SAAW5K,EAAM4K,QAAQ1I,YAA9G,aAKPlC,EAAM4K,WAAa5K,EAAM4K,QAAQV,OAAUvJ,EAAAC,EAAAC,cAACsJ,GAAA,EAAD,CACxCD,OAAK,EACLE,QAASpK,EAAM4K,QAAQV,QAE3BvJ,EAAAC,EAAAC,cAACsJ,GAAA,EAAD,6BACyBxJ,EAAAC,EAAAC,cAAA,KAAGwJ,KAAK,IAAKpJ,QAAS,kBAAMjB,EAAMF,QAAQrB,WAAW,WAArD,cCsE1ByM,WA5HO,WAGlBC,YAAY,eAER,CACIC,UAAa,CACTC,OAAU,CACN5L,MAAS,GACT6L,QAAW,CACPC,QAAU,EACVC,WAAc,MAGtBtD,MAAS,CACLzI,MAAS,WAEbgM,MAAS,CACL/N,KAAQ,SACRgO,OAAU,CACN7B,MAAS,EACT3B,MAAS,WAEbyD,QAAW,CACPC,SAAY,GAEhBZ,MAAS,CACLlI,IAAO,iBACP+G,MAAS,IACTgC,OAAU,MAGlBC,QAAW,CACPrM,MAAS,GACTsM,QAAU,EACVC,KAAQ,CACJT,QAAU,EACVU,MAAS,EACTC,YAAe,GACfC,MAAQ,IAGhBtE,KAAQ,CACJpI,MAAS,EACTsM,QAAU,EACVC,KAAQ,CACJT,QAAU,EACVU,MAAS,GACTG,SAAY,GACZD,MAAQ,IAGhBE,YAAe,CACXd,QAAU,EACVe,SAAY,IACZpE,MAAS,UACT4D,QAAW,GACXjC,MAAS,GAEb0C,KAAQ,CACJhB,QAAU,EACVU,MAAS,EACTO,UAAa,OACbT,QAAU,EACVU,UAAY,EACZC,SAAY,MACZC,QAAW,CACPpB,QAAU,EACVqB,QAAW,IACXC,QAAW,QAIvBC,cAAiB,CACbC,UAAa,SACbC,OAAU,CACNC,QAAW,CACP1B,QAAU,EACV2B,KAAQ,WAEZC,QAAW,CACP5B,QAAU,EACV2B,KAAQ,QAEZE,QAAU,GAEdC,MAAS,CACLC,KAAQ,CACJhB,SAAY,IACZD,YAAe,CACXP,QAAW,IAGnByB,OAAU,CACNjB,SAAY,IACZzE,KAAQ,GACR2F,SAAY,EACZ1B,QAAW,EACXG,MAAS,GAEbwB,QAAW,CACPnB,SAAY,KAEhBoB,KAAQ,CACJC,aAAgB,GAEpBC,OAAU,CACND,aAAgB,KAI5BE,eAAiB,EACjBC,YAAe,CACXC,WAAa,EACbC,iBAAoB,UACpBC,iBAAoB,GACpBC,oBAAuB,UACvBC,kBAAqB,YACrBC,gBAAmB,aCtGpBC,GAZG,SAACrO,GAGf,OAFAiF,oBAAU,WAAOiG,MAAkB,IAG/BvK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACI5B,EAAAC,EAAAC,cAAA,OAAK7C,GAAG,iBACQ,UAAfgC,EAAMtB,KAAmBiC,EAAAC,EAAAC,cAACyN,GAAD,MAAe3N,EAAAC,EAAAC,cAAC0N,GAAD,QCatC7O,eAJS,SAACC,GAAD,MAAuB,CAC3CjB,KAAMiB,EAAMjB,OAGDgB,CAlBO,SAACM,GACnB,OAAQA,EAAMtB,MACV,IAAK,QACL,IAAK,MACD,OAAOiC,EAAAC,EAAAC,cAAC2N,GAAD,CAAW9P,KAAMsB,EAAMtB,OAClC,QACI,OACIiC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAC4N,GAAD,UCJAC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,oICKSC,GArBY,eAAAvI,EAAApG,OAAA4O,GAAA,EAAA5O,CAAA6O,GAAArO,EAAAsO,KAAG,SAAAC,EAAOC,EAAoBC,GAA3B,IAAArL,EAAAsL,EAAAnR,EAAA,OAAA8Q,GAAArO,EAAA2O,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtB1L,EAAuBqL,GAAQA,EAAKrL,QAAb5D,OAAAuP,GAAA,EAAAvP,CAAA,GAA2B2D,KAAoBC,QAA/C,GAA2DqL,EAAKrL,SAAYD,KAAoBC,QACxHqL,GAAQA,EAAKzJ,OACZ5B,EAAU,IAAI4L,QAAJxP,OAAAuP,GAAA,EAAAvP,CAAA,CAAayP,eAAgB,oBAAuB7L,KAHxCwL,EAAAE,KAAA,EAMNI,MAAMV,EAADhP,OAAAuP,GAAA,EAAAvP,CAAA,GAAciP,GAAQ,GAAtB,CAA2BrL,aAN1B,UAMtBsL,EANsBE,EAAAO,KAO1B9J,QAAQC,IAAIoJ,GAKRA,EAAQU,GAZc,CAAAR,EAAAE,KAAA,gBAatBzJ,QAAQiE,MAAMoF,GAbQE,EAAAE,KAAA,GAcAJ,EAAQW,OAdR,cAchB9R,EAdgBqR,EAAAO,KAetB9J,QAAQC,IAAI/H,GAEN,IAAI+R,MAAM/R,EAAQA,SAjBF,eAAAqR,EAAAE,KAAA,GAmBbJ,EAAQW,OAnBK,eAAAT,EAAAW,OAAA,SAAAX,EAAAO,MAAA,yBAAAP,EAAAY,SAAAjB,MAAH,gBAAAkB,EAAAC,GAAA,OAAA9J,EAAA+J,MAAAC,KAAAC,YAAA,gBCMjB7S,iBASAC,iBASAO,iBA2BAO,iBAsBAJ,iBA4BAK,iBAYAC,iBAmBAI,iBAaAG,iBAcOsR,IAzJjB,SAAU9S,GAAWkI,GAArB,IAAA0E,EAAA,OAAAyE,GAAArO,EAAA2O,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEoB,OAFpBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE0BX,GAAQzI,IAFlC,OAGQ,OADMkE,EAFdgF,EAAAO,KAAAP,EAAAE,KAAA,EAGciB,aAAI,CAACjT,KAAMC,EAAwBI,QAASyM,IAH1D,OAAAgF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoB,GAAApB,EAAA,SAKQvJ,QAAQC,IAARsJ,EAAAoB,IALR,yBAAApB,EAAAY,SAAAS,GAAA,cASA,SAAUhT,GAAciI,GAAxB,IAAA0E,EAAA,OAAAyE,GAAArO,EAAA2O,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAEoB,OAFpBoB,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAE0BX,GAAQzI,GAAoBR,EAAO/H,QAAQC,GAAI,CAACgG,QAASD,KAAoBC,UAFvG,OAGQ,OADMwG,EAFdsG,EAAAf,KAAAe,EAAApB,KAAA,EAGciB,aAAI,CAACjT,KAAMC,EAA2BI,QAASyM,IAH7D,OAAAsG,EAAApB,KAAA,gBAAAoB,EAAArB,KAAA,EAAAqB,EAAAF,GAAAE,EAAA,SAKQ7K,QAAQC,IAAR4K,EAAAF,IALR,yBAAAE,EAAAV,SAAAW,GAAA,cASA,SAAU3S,GAAU0H,GAApB,IAAA0E,EAAA,OAAAyE,GAAArO,EAAA2O,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OAGoB,OAHpBsB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAG0BX,GAAQzI,GAAW,CACjC2K,OAAQ,OACRrL,KAAMa,KAAKO,UAAU,CACjBhE,SAAU8C,EAAO/H,QAAQM,MACzBC,SAAUwH,EAAO/H,QAAQO,WAE7B0F,QAAS,CACLkN,mBAAoB,oBAVpC,OAcQ,OAXM1G,EAHdwG,EAAAjB,KAaQtM,aAAa0N,QAAQ,QAAS3G,EAAI4G,OAb1CJ,EAAAtB,KAAA,EAcciB,aAAI,CACNjT,KAAMC,EACNI,QAAS,SAhBrB,OAAAiT,EAAAtB,KAAA,gBAmBQ,OAnBRsB,EAAAvB,KAAA,EAAAuB,EAAAJ,GAAAI,EAAA,SAAAA,EAAAtB,KAAA,GAmBciB,aAAI,CACNjT,KAAMC,EACNI,QAAS,CAAEmM,MAAO8G,EAAAJ,GAAEzS,WArBhC,QAuBQ8H,QAAQiE,MAAR8G,EAAAJ,IAvBR,yBAAAI,EAAAZ,SAAAiB,GAAA,cA2BA,SAAU1S,GAAUmH,GAApB,IAAA0E,EAAA,OAAAyE,GAAArO,EAAA2O,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,OAEoB,OAFpB4B,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAE0BX,GAAQzI,GAAU,CAChC2K,OAAQ,MACRjN,QAASD,KAAoBC,UAJzC,OAOQ,OALMwG,EAFd8G,EAAAvB,KAAAuB,EAAA5B,KAAA,EAOciB,aAAI,CACNjT,KAAMC,EACNI,QAAS,CACLiB,KAAMwL,KAVtB,OAAA8G,EAAA5B,KAAA,gBAgBQ,OAhBR4B,EAAA7B,KAAA,EAAA6B,EAAAV,GAAAU,EAAA,SAcQrL,QAAQiE,MAARoH,EAAAV,IACAnN,aAAaC,WAAW,SAfhC4N,EAAA5B,KAAA,GAgBciB,aAAI,CACNjT,KAAMC,IAjBlB,yBAAA2T,EAAAlB,SAAAmB,GAAA,cAsBA,SAAUhT,GAAQuH,GAAlB,IAAA0L,EAAAnT,EAAAC,EAAAE,EAAA,OAAAyQ,GAAArO,EAAA2O,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,OAIoB,OAJpB8B,EACsC1L,EAAO/H,QAAlCM,EADXmT,EACWnT,MAAOC,EADlBkT,EACkBlT,SAAUE,EAD5BgT,EAC4BhT,OAD5BiT,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAI0BgC,KAAM,CACpBT,OAAQ,OACR3K,IAAKA,GACLjE,KAAM,CACFW,SAAU3E,EACVC,WACAE,YAVhB,OAaQ,OAbRiT,EAAA1B,KAAA0B,EAAA/B,KAAA,EAaciB,aAAI,CACNjT,KAAMC,EACNI,QAAS,CACLM,QAAOC,cAhBvB,OAAAmT,EAAA/B,KAAA,gBAoBQ,OApBR+B,EAAAhC,KAAA,EAAAgC,EAAAb,GAAAa,EAAA,SAAAA,EAAA/B,KAAA,GAoBciB,aAAI,CACNjT,KAAMC,EACNI,QAAS,CAACmM,MAAOuH,EAAAb,GAAMzS,WAtBnC,QAwBQ8H,QAAQiE,MAARuH,EAAAb,IAxBR,yBAAAa,EAAArB,SAAAuB,GAAA,cA4BA,SAAU/S,GAAOkH,GAAjB,IAAA0E,EAAA,OAAAyE,GAAArO,EAAA2O,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OAEoB,OAFpBkC,EAAAnC,KAAA,EAAAmC,EAAAlC,KAAA,EAE0BX,GAAQzI,GAAA,WAAApC,OAAwB4B,EAAO/H,QAAQa,SAFzE,OAGQ,OADM4L,EAFdoH,EAAA7B,KAAA6B,EAAAlC,KAAA,EAGciB,aAAI,CACNjT,KAAMC,EACNI,QAASyM,IALrB,OAAAoH,EAAAlC,KAAA,gBAAAkC,EAAAnC,KAAA,EAAAmC,EAAAhB,GAAAgB,EAAA,SAQQ3L,QAAQiE,MAAR0H,EAAAhB,IARR,yBAAAgB,EAAAxB,SAAAyB,GAAA,cAYA,SAAUhT,GAAQiH,GAAlB,IAAA0E,EAAA,OAAAyE,GAAArO,EAAA2O,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,OAEoB,OAFpBoC,EAAArC,KAAA,EAAAqC,EAAApC,KAAA,EAE0BX,GAAQzI,GAAc,CACpC2K,OAAQ,MACRrL,KAAMa,KAAKO,UAAU,CACjBlI,OAAQgH,EAAO/H,QAAQe,WALvC,OAQQ,OANM0L,EAFdsH,EAAA/B,KAAA+B,EAAApC,KAAA,EAQciB,aAAI,CACNjT,KAAMC,EACNI,QAAS,CACLD,OAAQ0M,EAAI1M,UAX5B,OAAAgU,EAAApC,KAAA,gBAAAoC,EAAArC,KAAA,EAAAqC,EAAAlB,GAAAkB,EAAA,SAeQ7L,QAAQiE,MAAR4H,EAAAlB,IAfR,yBAAAkB,EAAA1B,SAAA2B,GAAA,cAmBA,SAAU9S,GAAc6G,GAAxB,OAAAmJ,GAAArO,EAAA2O,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OAEQ,OAFRsC,EAAAvC,KAAA,EAAAuC,EAAAtC,KAAA,EAEcX,GAAQzI,GAAA,IAAApC,OAAyB4B,EAAO/H,QAAQmB,WAAa,CAC/D+R,OAAQ,SACRrL,KAAMa,KAAKO,UAAU,CACjBlJ,OAAQgI,EAAO/H,QAAQD,WALvC,OAAAkU,EAAAtC,KAAA,eAAAsC,EAAAvC,KAAA,EAAAuC,EAAApB,GAAAoB,EAAA,SASQ/L,QAAQC,IAAR8L,EAAApB,IATR,wBAAAoB,EAAA5B,SAAA6B,GAAA,cAaA,SAAU7S,GAAY0G,GAAtB,OAAAmJ,GAAArO,EAAA2O,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OAEQ,OAFRwC,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,EAEcX,GAAQzI,GAAA,IAAApC,OAAyB4B,EAAO/H,QAAQmB,WAAa,CAC/D+R,OAAQ,OACRrL,KAAMa,KAAKO,UAAU,CACjBlJ,OAAQgI,EAAO/H,QAAQD,OACvBK,QAAS2H,EAAO/H,QAAQI,YANxC,OAAA+T,EAAAxC,KAAA,eAAAwC,EAAAzC,KAAA,EAAAyC,EAAAtB,GAAAsB,EAAA,SAUQjM,QAAQC,IAARgM,EAAAtB,IAVR,wBAAAsB,EAAA9B,SAAA+B,GAAA,cAcO,SAAUzB,KAAV,OAAAzB,GAAArO,EAAA2O,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OACH,OADG0C,EAAA1C,KAAA,EACG2C,aAAW1U,EAAmBC,IADjC,OAEH,OAFGwU,EAAA1C,KAAA,EAEG2C,aAAW1U,EAAsBE,IAFpC,OAGH,OAHGuU,EAAA1C,KAAA,EAGG2C,aAAW1U,EAAaS,IAH3B,OAIH,OAJGgU,EAAA1C,KAAA,EAIG2C,aAAW1U,EAAkBgB,IAJhC,OAKH,OALGyT,EAAA1C,KAAA,GAKG2C,aAAW1U,EAAWY,IALzB,QAMH,OANG6T,EAAA1C,KAAA,GAMG2C,aAAW1U,EAAciB,IAN5B,QAOH,OAPGwT,EAAA1C,KAAA,GAOG2C,aAAW1U,EAAmBkB,IAPjC,QAQH,OARGuT,EAAA1C,KAAA,GAQG2C,aAAW1U,EAAsBsB,IARpC,QASH,OATGmT,EAAA1C,KAAA,GASG2C,aAAW1U,EAAoByB,IATlC,yBAAAgT,EAAAhC,SAAAkC,IC5JP,IAAMC,GAAqB,CACvB3S,SAAU,CACNyC,KAAM,KACNH,YAAY,GAEhBlD,KAAM,CACFkD,YAAY,EACZG,KAAM,MAEVc,KAAM,CACFnF,GAAI,KACJkE,YAAY,EACZsG,QAAQ,EACRnG,KAAM,IAEVyG,WAAW,EACXpK,KAAM+E,aAAaU,QAAQ,UAA8C,cAAlCV,aAAaU,QAAQ,SAA2B,OAAS,QAChGvF,OAAQ,CACJsD,YAAY,IAIb,SAASsQ,KAA2D,IACnEnQ,EAAMlE,EAA6BsU,EADnB9S,EAAmD8Q,UAAAnO,OAAA,QAAAoQ,IAAAjC,UAAA,GAAAA,UAAA,GAArC8B,GAAczM,EAAuB2K,UAAAnO,OAAA,EAAAmO,UAAA,QAAAiC,EAEvE,OAAQ5M,EAAOpI,MACX,KAAKC,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIC,SAASQ,OAAAuP,GAAA,EAAAvP,CAAA,GACFT,EAAMC,SADL,CAEJsC,YAAY,MAGxB,KAAKvE,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEImJ,WAAYnJ,EAAMmJ,YAE1B,KAAKnL,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIC,SAASQ,OAAAuP,GAAA,EAAAvP,CAAA,GACFT,EAAMC,SADL,CAEJyC,KAAMiC,GAAawB,EAAO/H,SAC1BmE,YAAY,MAGxB,KAAKvE,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIwD,KAAK/C,OAAAuP,GAAA,EAAAvP,CAAA,GACET,EAAMwD,KADT,CAEAnF,GAAI8H,EAAO/H,QAAQC,GACnBkE,YAAY,EACZsG,QAAQ,MAGpB,KAAK7K,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIwD,KAAK/C,OAAAuP,GAAA,EAAAvP,CAAA,GACET,EAAMwD,KADT,CAEAd,KAAMyD,EAAO/H,QACbmE,YAAY,MAGxB,KAAKvE,EAQD,OAPAQ,EAAU2H,EAAO/H,QAAQI,QACzBkE,EAAOjC,OAAAmE,GAAA,EAAAnE,CAAMT,EAAMC,SAASyC,MAAQ,IAAMK,IAAI,SAAAW,GAI1C,OAHIA,EAAKF,KAAKnF,KAAOG,EAAQgF,KAAKnF,KAC9BqF,EAAKlF,QAAUA,GAEZkF,IAEJjD,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIC,SAASQ,OAAAuP,GAAA,EAAAvP,CAAA,GACFT,EAAMC,SADL,CAGJyC,KAAMiC,GAAajC,KAEvBc,KAAK/C,OAAAuP,GAAA,EAAAvP,CAAA,GACET,EAAMwD,KADT,CAEAd,KAAM1C,EAAMwD,KAAKnF,KAAOG,EAAQgF,KAAKnF,GAA/B,GAAAkG,OAAA9D,OAAAmE,GAAA,EAAAnE,CAAyCT,EAAMwD,KAAKd,MAAQ,IAA5D,CAAiEyD,EAAO/H,QAAQI,UAAWwB,EAAMwD,KAAKd,SAGxH,KAAK1E,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIjB,KAAMoH,EAAO/H,UAErB,KAAKJ,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAmS,GADP,CAEI7T,KAAM,UAEd,KAAKf,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIX,KAAKoB,OAAAuP,GAAA,EAAAvP,CAAA,GACET,EAAMX,KADT,CAEAkD,YAAY,MAGxB,KAAKvE,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIX,KAAKoB,OAAAuP,GAAA,EAAAvP,CAAA,GACET,EAAMX,KADT,CAEAkD,YAAY,EACZG,KAAMyD,EAAO/H,QAAQiB,SAGjC,KAAKrB,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIyJ,UAAW,CACPlH,YAAY,EACZgI,MAAO,QAGnB,KAAKvM,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIyJ,UAAW,CACPlH,YAAY,EACZgI,MAAOpE,EAAO/H,QAAQmM,SAGlC,KAAKvM,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIiL,QAAS,CACL1I,YAAY,EACZgI,MAAO,QAGnB,KAAKvM,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIiL,QAAS,CACL1I,YAAY,EACZgI,MAAOpE,EAAO/H,QAAQmM,SAGlC,KAAKvM,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIf,OAAOwB,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EAAMf,OADP,CAEFsD,YAAY,MAGxB,KAAKvE,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIf,OAAOwB,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EAAMf,OADP,CAEFsD,YAAY,EACZG,KAAMyD,EAAO/H,YAGzB,KAAKJ,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIwD,KAAK/C,OAAAuP,GAAA,EAAAvP,CAAA,GACET,EAAMwD,KADT,CAEAjB,YAAY,EACZsG,QAAQ,MAGpB,KAAK7K,EACD,OAAOyC,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIwD,KAAK/C,OAAAuP,GAAA,EAAAvP,CAAA,GACET,EAAMwD,KADT,CAEAnF,GAAI8H,EAAO/H,QAAQD,OACnBoE,YAAY,EACZG,KAAM,OAGlB,KAAK1E,EAOD,OANA0E,EAAIjC,OAAAmE,GAAA,EAAAnE,CAAQT,EAAMC,SAASyC,MAAQ,KAC9BqL,KAAK,CACNvK,KAAM,CAACnF,GAAI8H,EAAO/H,QAAQD,QAC1BK,QAAS,KACTa,KAAM8G,EAAO/H,QAAQiB,OAElBoB,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIC,SAASQ,OAAAuP,GAAA,EAAAvP,CAAA,GACFT,EAAMC,SADL,CAGJyC,KAAMiC,GAAajC,OAG/B,KAAK1E,EAED,OADAQ,EAAU2H,EAAO/H,QAAQI,SACdgF,KAAKnF,KAAO2B,EAAMwD,KAAKnF,GACvB2B,GACX8S,EAAcrS,OAAAmE,GAAA,EAAAnE,CAAKT,EAAMwD,KAAKd,MAAQ,IACjCK,IAAI,SAAAiQ,GAAC,OAAIA,EAAE3U,KAAOG,EAAQH,QAAK0U,EAAYC,IAC3CC,OAAO,SAAAD,GAAC,OAAIA,IAEVvS,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIwD,KAAK/C,OAAAuP,GAAA,EAAAvP,CAAA,GACET,EAAMwD,KADT,CAEAd,KAAMoQ,OAGlB,KAAK9U,EAED,OADAQ,EAAU2H,EAAO/H,QAAQI,SACdgF,KAAKnF,KAAO2B,EAAMwD,KAAKnF,GACvB2B,GACX8S,EAAcrS,OAAAmE,GAAA,EAAAnE,CAAKT,EAAMwD,KAAKd,MAAQ,IACjCK,IAAI,SAAAiQ,GAAC,OAAIA,EAAE3U,KAAOG,EAAQH,GAAKG,EAAUwU,IAEvCvS,OAAAuP,GAAA,EAAAvP,CAAA,GACAT,EADP,CAEIwD,KAAK/C,OAAAuP,GAAA,EAAAvP,CAAA,GACET,EAAMwD,KADT,CAEAd,KAAMoQ,OAGlB,QACI,OAAO9S,2BCxNJoG,GATD,WACZ,IAAM8M,EAAiBC,eACjB/M,EAAQgN,sBAAYP,GAASQ,+BACjCC,0BAAgBJ,KAGlB,OADAA,EAAeK,IAAIxC,IACZ3K,EAGMA,GCPfoN,IAASC,OACLzS,EAAAC,EAAAC,cAACwS,EAAA,EAAD,CAAUtN,MAAOA,IACjBpF,EAAAC,EAAAC,cAACyS,GAAD,OAEAC,SAASC,eAAe,SL6HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9daf078a.chunk.js","sourcesContent":["export const FETCH_CHATS = \"FETCH_CHATS\";\nexport const FETCH_CHATS_DONE = \"FETCH_CHATS_DONE\";\n\nexport const FETCH_MESSAGES = \"FETCH_MESSAGES\";\nexport const FETCH_MESSAGES_DONE = \"FETCH_MESSAGES_DONE\";\n\nexport const TOGGLE_PANEL = \"TOGGLE_PANEL\";\n\nexport const ADD_NEW_MESSAGE = \"ADD_NEW_MESSAGE\";\n\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGIN_DONE = \"LOGIN_DONE\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\n\nexport const REG = \"REG\";\nexport const REG_DONE = \"REG_DONE\";\nexport const REG_FAIL = \"REG_FAIL\";\n\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const REMOVE_STORE = \"REMOVE_STORE\";\n\nexport const FETCH_USER = \"FETCH_USER\";\nexport const FETCH_USER_DONE = \"FETCH_USER_DONE\";\nexport const FETCH_USER_FAIL = \"FETCH_USER_FAIL\";\n\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_DONE = \"SEARCH_DONE\";\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\n\nexport const CREATE_CHAT = \"CREATE_CHAT\";\nexport const CREATE_CHAT_DONE = \"CREATE_CHAT_DONE\";\nexport const CREATE_CHAT_FAIL = \"CREATE_CHAT_FAIL\";\n\nexport const ADD_CHAT_TO_LIST = \"ADD_CHAT_TO_LIST\";\n\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const DELETE_MESSAGE_DONE = \"DELETE_MESSAGE_DONE\";\n\nexport const EDIT_MESSAGE = \"EDIT_MESSAGE\";\nexport const EDIT_MESSAGE_DONE = \"EDIT_MESSAGE_DONE\";","import * as types from \"./constants\";\nimport {IMessage, IUser} from \"../model/IApp\";\n\nexport const clearStore = () => ({\n  type: types.REMOVE_STORE\n});\n\n\nexport const fetchChats = () => ({\n    type: types.FETCH_CHATS\n});\n\nexport const fetchMessages = (chatId: number) => ({\n    type: types.FETCH_MESSAGES,\n    payload: {\n        id: chatId\n    }\n});\n\nexport const togglePanel = () => ({\n    type: types.TOGGLE_PANEL\n});\n\nexport const newMessage = (message: IMessage) => {\n    return {\n        type: types.ADD_NEW_MESSAGE,\n        payload: {\n            message\n        }\n    }\n};\n\nexport const loginUser = (login: string, password: string) => ({\n    type: types.LOGIN,\n    payload: {\n        login,\n        password\n    }\n});\n\nexport const regUser = (login: string, password: string, avatar: string) => ({\n    type: types.REG,\n    payload: {\n        login,\n        password,\n        avatar\n    }\n});\n\nexport const changePage = (page: string) => ({\n    type: types.CHANGE_PAGE,\n    payload: page\n});\n\nexport const fetchUser = () => ({\n    type: types.FETCH_USER\n});\n\nexport const search = (search: string) => ({\n   type: types.SEARCH,\n   payload: { search }\n});\n\nexport const newChat = (userId: number) => ({\n    type: types.CREATE_CHAT,\n    payload: {\n        userId\n    }\n});\n\nexport const addChatToList = (chatId: number, user: IUser) => ({\n    type: types.ADD_CHAT_TO_LIST,\n    payload: {\n        chatId,\n        user\n    }\n});\n\nexport const deleteMessage = (messageId: number, chatId: number) => ({\n    type: types.DELETE_MESSAGE,\n    payload: {\n        messageId,\n        chatId\n    }\n});\n\nexport const deleteMessageDone = (message: IMessage) => ({\n    type: types.DELETE_MESSAGE_DONE,\n    payload: {\n        message\n    }\n});\n\nexport const editMessage = (messageId: number, chatId: number, message: string) => ({\n    type: types.EDIT_MESSAGE,\n    payload: {\n        messageId,\n        chatId,\n        message\n    }\n});\n\nexport const editMessageDone = (message: IMessage) => ({\n    type: types.EDIT_MESSAGE_DONE,\n    payload: {\n        message\n    }\n});\n","import React, {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport {Dropdown, Form, Header, Icon, Input, Modal, Comment} from \"semantic-ui-react\";\n\nimport './styles.sass'\nimport IApp, {IUser} from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst options = [\n    {key: 'user', text: 'User', value: 'user'},\n];\n\nconst Search = (props: any) => {\n    const [value, setValue] = useState(\"\");\n    const [open, setOpen] = useState(false);\n\n    const onSearch = () => {\n        props.actions.search(value);\n    };\n\n    const onText = (user: IUser) => {\n        setOpen(false);\n\n        const chat = props.chatList.data.find( (elem: any) =>elem.user.id === user.id);\n        if(chat){\n            return props.actions.fetchMessages(chat.chat.id);\n        }\n        props.actions.newChat(user.id);\n    };\n\n\n    return (\n        <Modal\n            open={open}\n            trigger={<div className=\"icon-wrap\" onClick={() => setOpen(true)}>\n                <FontAwesomeIcon icon={faSearch}/></div>}>\n            <Modal.Header>Search</Modal.Header>\n            <Modal.Content\n                scrolling>\n                <Form onSubmit={onSearch}><Input\n                    label={<Dropdown defaultValue={options[0].value} options={options}/>}\n                    labelPosition='left'\n                    placeholder='Search...'\n                    fluid\n                    loading={props.search.isFetching}\n                    value={value}\n                    onChange={(e, data) => setValue(data.value)}\n                />\n                    {props.search.data && props.search.data.length > 0 && (\n                        <>\n                            <Header as={'h2'}>Results</Header>\n                            {props.search.data.map((user: IUser) => (\n                                <Comment.Group>\n                                    <Comment>\n                                        <Comment.Avatar as='a' src={user.avatar}/>\n                                        <Comment.Content>\n                                            <Comment.Author>{user.username}</Comment.Author>\n                                            {/*<Comment.Text>*/}\n                                            {/*    This will be great for business reports. I will definitely download*/}\n                                            {/*    this.*/}\n                                            {/*</Comment.Text>*/}\n                                            <Comment.Actions>\n                                                <Comment.Action><span onClick={() => {onText(user)}}>Text</span></Comment.Action>\n                                            </Comment.Actions>\n                                        </Comment.Content>\n                                    </Comment>\n                                </Comment.Group>\n                            ))}\n                        </>\n                    )}\n                </Form>\n            </Modal.Content>\n        </Modal>\n    );\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    search: state.search,\n    chatList: state.chatList\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Search);\n","import React from \"react\";\nimport \"./styles.sass\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faSearch, faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport Search from \"../Search/Search\";\n\nconst Header = (props: any) => {\n    const onLogOut = () => {\n        localStorage.removeItem('token');\n        props.actions.clearStore();\n    };\n\n\n    return (\n        <div className=\"header-wrap\">\n            <div className=\"left-side\">\n                <div className=\"icon-wrap\" onClick={() => props.actions.togglePanel()}>\n                    <FontAwesomeIcon icon={faBars}/>\n                </div>\n                <Search />\n            </div>\n            <div className=\"right-size\">\n                <div className=\"icon-wrap\" onClick={onLogOut}>\n                    <FontAwesomeIcon icon={faSignOutAlt}/>\n                </div>\n            </div>\n\n        </div>\n    )\n};\n\n// togglePanel\nconst mapStateToProps = (state: IApp): any => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n","import randomProfile from 'random-profile-generator';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {IMessageView} from \"../model/IApp\";\ndayjs.extend(relativeTime);\n\n\nexport const fetchHeaderConfig = () => ({\n    headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n});\n\nexport const getAvatars = (amount: number) => {\n    let res = [];\n    for(let i = 0; i<amount; i++)\n        res[i] = randomProfile.avatar();\n    return res;\n};\n\nexport const fromNow = (date: string | number) => dayjs(date).fromNow();\n\nexport const sortChatList = (data: IMessageView[]) => {\n    const res = [...(data || [])];\n\n    return res.sort((el1, el2) => {\n        const time1: number = el1.message ? el1.message.time : 0;\n        const time2: number = el2.message ? el2.message.time : 0;\n        return time2- time1;\n    })\n};","import React from 'react';\nimport \"./styles.sass\"\nimport {Comment, Image} from \"semantic-ui-react\";\nimport {fromNow} from \"../../../helpers\";\nimport EllipsisText from \"react-ellipsis-text\";\n\nexport interface IChatElem {\n    id: number;\n    name: string;\n    date: string;\n    message: string;\n    onClick: (id: number) => void;\n}\n\nconst ChatElem = (props: any) => {\n    const {name, date, message, id, avatar} = props;\n    return (\n        <div className={`chat-elem-wrap ${props.chatId === id ? 'toggled' : \"\"}`} onClick={() => props.onClick(id)}>\n            <div className=\"avatar\">\n                <Image avatar src={avatar}/>\n            </div>\n            <div className=\"info\">\n                <div className=\"name-wrap\">\n                    <div className=\"name\">{name}</div>\n                    <div className=\"date\">{fromNow(date)}</div>\n                </div>\n                <EllipsisText text={message ? message.message : \"\"} length={21}/>\n            </div>\n        </div>\n    )\n};\n\n\nexport default ChatElem;","import ChatElem from \"./ChatElem\";\nimport React, {useEffect} from \"react\";\nimport \"./styles.sass\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport IApp, {IChatList, IChatView} from \"../../model/IApp\";\nimport {Input, Divider, Header} from \"semantic-ui-react\";\n\nconst mapStateToProps = (state: IApp): any => ({\n    chatList: state.chatList,\n    chat: state.chat\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\ninterface IChatListProps {\n    actions: typeof actions;\n    chatList: IChatList;\n    chat: IChatView\n}\n\nconst ChatList = (props: IChatListProps) => {\n    useEffect(() => {\n        if (!props.chatList.data)\n            props.actions.fetchChats();\n    }, [props.actions]);\n\n    return (\n        <>\n\n            <div className=\"chat-list-wrap\">\n                {props.chatList.data && props.chatList.data.map(elem => elem && elem.message && (\n                    <ChatElem key={elem.chat.id} id={elem.chat.id}\n                              chatId={props.chat.id}\n                              name={elem.user.username}\n                              date={elem.message.time}\n                              message={elem.message}\n                              avatar={elem.user.avatar}\n                              onClick={(id: number) => props.actions.fetchMessages(elem.chat.id)}/>\n                ))}\n            </div>\n        </>\n    )\n};\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatList);","const prefix = \"https://igor-babin-chat-java.herokuapp.com\";\n// const prefix = \"http://localhost:8080\";\n\n\nexport const SOCKET_URL = `${prefix}/ws`;\nexport const CHAT_LIST = `${prefix}/api/chats`;\nexport const CHAT_MESSAGES = `${prefix}/api/chat/`;\nexport const LOGIN = `${prefix}/api/auth/login`;\nexport const USER = `${prefix}/api/me`;\nexport const REG = `${prefix}/req`;\nexport const SEARCH = `${prefix}/api/users`;\nexport const NEW_CHAT = `${prefix}/api/chat`;\nexport const DELETE_MESSAGE = `${prefix}/api/message`;","import SockJS from \"sockjs-client\";\nimport Stomp, {Client} from 'stompjs';\nimport * as actions from \"../../redux/actions\";\nimport * as url from '../../var/routers'\nimport IApp, {IMessage, IUser} from \"../../model/IApp\";\n\nlet stompClient = {} as Client;\n\n\n\nconst connect = (action: typeof actions, store: IApp) => {\n    if(stompClient.connected){\n        console.log(\"already connected\");\n        return;\n    }\n\n\n    const user = store.user.data as IUser;\n\n    stompClient = Stomp.over(new SockJS(url.SOCKET_URL));\n    stompClient.connect({}, () => {\n        console.log('Connected', store.user);\n\n\n\n        stompClient.subscribe(`/res/new-message/${user.id}`, ({ body }) => action.newMessage(JSON.parse(body)));\n\n        stompClient.subscribe(`/res/new-chat/${user.id}`, ({ body }: { body: string}) => {\n            const newChat: { chatId: number, user1: IUser, user2: IUser} = JSON.parse(body);\n\n            action.addChatToList(newChat.chatId, newChat.user1.id === user.id ? newChat.user1 : newChat.user2);\n\n        });\n\n        stompClient.subscribe(`/res/delete-message/${user.id}`, ({ body }: { body: string}) => {\n            const message: IMessage = JSON.parse(body);\n\n            console.log(message);\n\n            action.deleteMessageDone(message);\n            action.fetchChats();\n        })\n\n        stompClient.subscribe(`/res/edit-message/${user.id}`, ({ body }: { body: string}) => {\n            const message: IMessage = JSON.parse(body);\n\n            action.editMessageDone(message);\n            action.fetchChats();\n        })\n    });\n};\n\nconst send = (destination: string, headers?: {}, body?: string) => {\n    return stompClient.send(destination, headers, body);\n};\n\nexport default {\n    stompClient,\n    send,\n    connect\n};","import React, {useState} from 'react';\nimport {Form, Input} from 'semantic-ui-react'\nimport socket from \"../../../services/socket/socket\";\nimport IApp from \"../../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../../redux/actions\";\nimport {connect} from \"react-redux\";\n\n\nexport const MessageInput = (props: any) => {\n    const [value, setValue] = useState(\"\");\n    const sendMessage = () => {\n        if(!value)\n            return;\n        socket.send('/req/new-message', {}, JSON.stringify({\n            chatId: props.chat.id,\n            userId: props.user.data.id,\n            message: value\n        }));\n        setValue(\"\");\n    };\n    return <Form onSubmit={(e) => sendMessage()}>\n        <Input placeholder='Type a message...' fluid value={value} onChange={(e, data) => setValue(data.value)}/>\n    </Form>\n};\n\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    user: state.user,\n    chat: state.chat\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MessageInput);","import {Button, Form, Header, Icon, Image, Modal, TextArea} from \"semantic-ui-react\";\nimport React, {useState} from \"react\";\nimport IApp, {IMessage, IMessageView, IUser} from \"../../model/IApp\";\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport './styles.sass'\nimport {fromNow} from \"../../helpers\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../redux/actions\";\ndayjs.extend(relativeTime);\n\n\nexport const MessageItem = (props: { user: IUser, message: IMessage, actions: typeof Actions}) => {\n    const { message, user, actions } = props;\n    const fromMe = message.user.id === user.id;\n\n    const [openDelete, setClose] = useState(false);\n    const [openEdit, setCloseEdit] = useState(false);\n    const [messageEdit, changeMessage] = useState<any>(message.message);\n\n    const onDelete = () => {\n        setClose(false);\n        actions.deleteMessage(message.id, message.chat.id);\n    };\n\n    const onEdit = () => {\n        setCloseEdit(false);\n        actions.editMessage(message.id, message.chat.id, messageEdit);\n    };\n    return (\n        <div className={`message-item ${openDelete ? \"to-delete\" : \"\"}`} style={{ alignItems: fromMe ? \"flex-end\" : \"flex-start\"}}>\n        <p className={fromMe ? \"from-me\" : \"from-them\"}>\n            {message.message}\n            <span className=\"info-block\">\n                <span className={\"time\"}>{fromNow(message.time)}</span>\n                {fromMe && (<span className={\"icons\"}>\n                    <Modal\n                        trigger={ <Icon name={\"trash\"} size={\"small\"} onClick={() => setClose(true)}/>}\n                        open={openDelete}\n                        onClose={() => setClose(false)}\n                        basic\n                        size='small'\n                    >\n                    <Modal.Content>\n                      <Header as={'h3'} textAlign='center' className={\"white-header\"}>Are you sure you want to delete the message?</Header>\n                    </Modal.Content>\n                    <Modal.Actions className={\"action-btn\"}>\n                      <Button color='red' onClick={onDelete} inverted>\n                        <Icon name='trash' /> Delete\n                      </Button>\n                        <Button color='green' onClick={() => setClose(false)} inverted>\n                        <Icon name='cancel' /> Cancel\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                     <Modal\n                         trigger={<Icon name={\"edit\"} size={\"small\"} onClick={() => setCloseEdit(true)}/>}\n                         open={openEdit}\n                         onClose={() => setCloseEdit(false)}\n                         basic\n                         size='small'\n                     >\n                    <Modal.Content>\n                      <Header as={'h3'} textAlign='center' className={\"white-header\"}>Edit message</Header>\n                        <Form>\n                            <TextArea\n                                value={messageEdit}\n                                onChange={(e, data) => changeMessage(data.value)}\n                                style={{ minHeight: 200 }}\n                            />\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions className={\"action-btn\"}>\n                      <Button color='green' onClick={onEdit} inverted>\n                        <Icon name='edit' /> Edit\n                      </Button>\n                        <Button color='blue' onClick={() => setCloseEdit(false)} inverted>\n                        <Icon name='cancel' /> Cancel\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                </span>)}\n            </span>\n        </p>\n            <Image avatar src={message.user.avatar}/>\n        </div>\n    )\n};\n\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(Actions, dispatch)\n});\nexport default connect(\n    () => ({}),\n    mapDispatchToProps\n)(MessageItem);","import MessageItem from \"./MessageItem\";\nimport React from \"react\";\nimport {IChatList, IMessage, IMessageView, IUser} from \"../../model/IApp\";\n\n\nexport const MessageList = (props: { chat: IChatList, user: IUser}) => {\n    // @ts-ignore\n    return <> {(props.chat.data || []).map((elem: IMessage) => <MessageItem key={elem.id} message={elem} user={props.user}/>) }</>\n};\n\n\n\nexport default MessageList;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {Header, Loader, Comment} from 'semantic-ui-react'\nimport './styles.sass'\nimport MessageInput from \"../Message/Input\";\nimport MessageList from \"../Message/MessageList\";\n\n\nconst ChatPage = (props: any) => {\n\n\n    return (\n        <div className=\"chat-page-wrapper\">\n            {props.chat.isOpen ? (\n                props.chat.isFetching ?\n                    (<div className=\"loader-wrap\">\n                        <Loader active inline='centered'/>\n                    </div>) :\n                    (\n                        <>\n                            <div className=\"messages-wrap\">\n                                    <MessageList\n                                    chat={props.chat}\n                                    user={props.user.data}/>\n                            </div>\n                            <div className=\"input-wrap\">\n                                <MessageInput />\n                            </div>\n                        </>\n                    )\n            ) : (\n                \"close\"\n            )}\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatPage);\n","import React, {useEffect} from 'react';\nimport './styles.sass';\nimport Header from \"../Header\";\nimport ChatList from \"../ChatList\";\nimport ChatPage from \"../ChatPage\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport socket from '../../services/socket/socket';\nimport {Dimmer, Loader} from \"semantic-ui-react\";\n\nconst Chat = (props: any) => {\n    useEffect(() => {\n        if(props.actions && props.user.data) {\n            console.log('init');\n            socket.connect(props.actions, props.state)\n        }\n    }, [props.actions, props.user]);\n\n    useEffect(() => {\n        props.actions.fetchUser();\n    }, [props.actions]);\n    return (\n        props.user.data && !props.user.isFetching ? (\n        <div className=\"main-wrapper\">\n            <div style={ {background: \"white\"} }>\n                    <Header />\n                <div className=\"content-wrap\">\n                    {props.showPanel &&\n                    <ChatList {...props} />}\n                    <ChatPage />\n                </div>\n            </div>\n        </div>) : (\n            <Dimmer active inverted>\n                <Loader inverted />\n            </Dimmer>\n        )\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    state,\n    showPanel: state.showPanel,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Chat);","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst LoginForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.loginUser(login, password);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"30%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Login to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                            error={props.loginPage && !!props.loginPage.error}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.loginPage && props.loginPage.isFetching}>\n                            Login\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.loginPage && !!props.loginPage.error && (<Message\n                    error\n                    content={props.loginPage.error}\n                />)}\n                <Message>\n                    New to us? <a href=\"#\" onClick={() => props.actions.changePage(\"reg\")}>Sign Up</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    loginPage: state.loginPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginForm);","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment, Image } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport ImagePicker from 'react-image-picker'\nimport 'react-image-picker/dist/index.css'\nimport { getAvatars} from \"../../helpers\";\n\nconst imageList = [...getAvatars(14)];\n\nconst RegForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.regUser(login, password, avatar);\n\n    console.log(props.regPage && props.regPage.error);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"20%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Sign up to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                        />\n                        <Header as='h4' textAlign='left'>\n                            Choose a photo\n                        </Header>\n                        <ImagePicker\n                            images={imageList.map((image, i) => ({src: image, value: i}))}\n                            onPick={(data: any) => setAvatar(data.src)}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.regPage && props.regPage.isFetching}>\n                            Sign up\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.regPage && !!props.regPage.error && (<Message\n                    error\n                    content={props.regPage.error}\n                />)}\n                <Message>\n                    Already has account? <a href='#'  onClick={() => props.actions.changePage(\"login\")}>Login</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    regPage: state.regPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegForm);","import './styles.sass'\n\n\nconst initParticles = () => {\n    //@ts-ignore\n    // eslint-disable-next-line no-undef\n    particlesJS('particles-js',\n\n        {\n            \"particles\": {\n                \"number\": {\n                    \"value\": 80,\n                    \"density\": {\n                        \"enable\": true,\n                        \"value_area\": 800\n                    }\n                },\n                \"color\": {\n                    \"value\": \"#ffffff\"\n                },\n                \"shape\": {\n                    \"type\": \"circle\",\n                    \"stroke\": {\n                        \"width\": 0,\n                        \"color\": \"#000000\"\n                    },\n                    \"polygon\": {\n                        \"nb_sides\": 5\n                    },\n                    \"image\": {\n                        \"src\": \"img/github.svg\",\n                        \"width\": 100,\n                        \"height\": 100\n                    }\n                },\n                \"opacity\": {\n                    \"value\": 0.5,\n                    \"random\": false,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 1,\n                        \"opacity_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"size\": {\n                    \"value\": 5,\n                    \"random\": true,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 40,\n                        \"size_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"line_linked\": {\n                    \"enable\": true,\n                    \"distance\": 150,\n                    \"color\": \"#ffffff\",\n                    \"opacity\": 0.4,\n                    \"width\": 1\n                },\n                \"move\": {\n                    \"enable\": true,\n                    \"speed\": 2,\n                    \"direction\": \"none\",\n                    \"random\": false,\n                    \"straight\": false,\n                    \"out_mode\": \"out\",\n                    \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 1200\n                    }\n                }\n            },\n            \"interactivity\": {\n                \"detect_on\": \"canvas\",\n                \"events\": {\n                    \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                    },\n                    \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"push\"\n                    },\n                    \"resize\": true\n                },\n                \"modes\": {\n                    \"grab\": {\n                        \"distance\": 400,\n                        \"line_linked\": {\n                            \"opacity\": 1\n                        }\n                    },\n                    \"bubble\": {\n                        \"distance\": 400,\n                        \"size\": 40,\n                        \"duration\": 2,\n                        \"opacity\": 8,\n                        \"speed\": 3\n                    },\n                    \"repulse\": {\n                        \"distance\": 200\n                    },\n                    \"push\": {\n                        \"particles_nb\": 4\n                    },\n                    \"remove\": {\n                        \"particles_nb\": 2\n                    }\n                }\n            },\n            \"retina_detect\": true,\n            \"config_demo\": {\n                \"hide_card\": false,\n                \"background_color\": \"#b61924\",\n                \"background_image\": \"\",\n                \"background_position\": \"50% 50%\",\n                \"background_repeat\": \"no-repeat\",\n                \"background_size\": \"cover\"\n            }\n        }\n\n    );\n};\nexport default initParticles;","import React, {useEffect} from 'react';\nimport LoginForm from \"./LoginForm\";\nimport RegForm from \"./RegForm\";\nimport initParticles from \"./Particles/particles\";\nimport './Particles/styles.sass'\n\n\nconst LoginPage = (props: any) => {\n    useEffect(() => {initParticles()}, [])\n\n    return (\n        <>\n            <div id=\"particles-js\" />\n            {props.page === \"login\" ? <LoginForm/> : <RegForm/>}\n        </>\n    )\n};\n\n\nexport default LoginPage;","import React from \"react\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport 'semantic-ui-css/semantic.min.css'\nimport LoginPage from \"./components/LoginPage\";\nimport IApp from \"./model/IApp\";\nimport {connect} from \"react-redux\";\n\nconst App: React.FC = (props: any) => {\n    switch (props.page) {\n        case \"login\":\n        case 'reg':\n            return <LoginPage page={props.page}/>;\n        default:\n            return (\n                <div className=\"App\">\n                    <Chat/>\n                </div>\n            )\n    }\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    page: state.page\n});\n\nexport default connect(\n    mapStateToProps,\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {fetchHeaderConfig} from \"./index\";\n\nconst request: typeof fetch = async (input: RequestInfo, init?: RequestInit | undefined) => {\n    let headers: HeadersInit = init && init.headers ? {...fetchHeaderConfig().headers, ...init.headers } : fetchHeaderConfig().headers as HeadersInit;\n    if(init && init.body) {\n        headers = new Headers({'Content-Type': 'application/json', ...headers});\n    }\n\n    let promise = await fetch(input, { ...(init || {}), headers});\n    console.log(promise)\n    // if(promise.status === 401){\n    //     localStorage.removeItem(\"token\");\n    //     return window.location.reload();\n    // }\n    if(!promise.ok){\n        console.error(promise);\n        const message = await promise.json();\n        console.log(message);\n        // @ts-ignore\n        throw new Error(message.message);\n    }\n    return await promise.json();\n};\nexport default request;","import {takeLatest, put} from \"redux-saga/effects\";\nimport * as types from \"./constants\";\nimport * as url from \"../var/routers\";\nimport {fetchHeaderConfig} from \"../helpers\";\nimport axios from 'axios';\nimport request from \"../helpers/webApi\";\nimport socket from \"../services/socket/socket\";\n\nfunction* fetchChats(action: any) {\n    try {\n        const res = yield request(url.CHAT_LIST);\n        yield put({type: types.FETCH_CHATS_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* fetchMessages(action: any) {\n    try {\n        const res = yield request(url.CHAT_MESSAGES + action.payload.id, {headers: fetchHeaderConfig().headers});\n        yield put({type: types.FETCH_MESSAGES_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* loginUser(action: any) {\n\n    try {\n        const res = yield request(url.LOGIN, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: action.payload.login,\n                password: action.payload.password\n            }),\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            }\n        });\n        localStorage.setItem('token', res.token);\n        yield put({\n            type: types.CHANGE_PAGE,\n            payload: \"chat\"\n        })\n    } catch (e) {\n        yield put({\n            type: types.LOGIN_FAIL,\n            payload: { error: e.message }\n        });\n        console.error(e);\n    }\n}\n\nfunction* fetchUser(action: any) {\n    try {\n        const res = yield request(url.USER, {\n            method: \"GET\",\n            headers: fetchHeaderConfig().headers\n        });\n\n        yield put({\n            type: types.FETCH_USER_DONE,\n            payload: {\n                user: res\n            }\n        })\n    } catch (e) {\n        console.error(e);\n        localStorage.removeItem('token');\n        yield put({\n            type: types.REMOVE_STORE\n        })\n    }\n}\n\nfunction* regUser(action: any) {\n    const {login, password, avatar} = action.payload;\n    try {\n        // TODO doesn't work with fetch, even if hard-code correct content-type\n        const res = yield axios({\n            method: \"POST\",\n            url: url.REG,\n            data: {\n                username: login,\n                password,\n                avatar\n            }\n        });\n        yield put({\n            type: types.LOGIN,\n            payload: {\n                login, password\n            }\n        })\n    } catch (error) {\n        yield put({\n            type: types.REG_FAIL,\n            payload: {error: error.message}\n        });\n        console.error(error);\n    }\n}\n\nfunction* search(action: any) {\n    try {\n        const res = yield request(url.SEARCH + `?search=${action.payload.search}`);\n        yield put({\n            type: types.SEARCH_DONE,\n            payload: res\n        })\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* newChat(action: any) {\n    try{\n        const res = yield request(url.NEW_CHAT, {\n            method: \"PUT\",\n            body: JSON.stringify({\n                userId: action.payload.userId\n            })\n        });\n        yield put({\n            type: types.CREATE_CHAT_DONE,\n            payload: {\n                chatId: res.chatId\n            }\n        })\n    }catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* deleteMessage(action: any) {\n    try {\n        yield request(url.DELETE_MESSAGE + `/${action.payload.messageId}`, {\n            method: \"DELETE\",\n            body: JSON.stringify({\n                chatId: action.payload.chatId\n            })\n        });\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* editMessage(action: any) {\n    try {\n        yield request(url.DELETE_MESSAGE + `/${action.payload.messageId}`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                chatId: action.payload.chatId,\n                message: action.payload.message\n            })\n        });\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nexport function* watchSaga() {\n    yield takeLatest(types.FETCH_CHATS, fetchChats);\n    yield takeLatest(types.FETCH_MESSAGES, fetchMessages);\n    yield takeLatest(types.LOGIN, loginUser);\n    yield takeLatest(types.FETCH_USER, fetchUser);\n    yield takeLatest(types.REG, regUser);\n    yield takeLatest(types.SEARCH, search);\n    yield takeLatest(types.CREATE_CHAT, newChat);\n    yield takeLatest(types.DELETE_MESSAGE, deleteMessage);\n    yield takeLatest(types.EDIT_MESSAGE, editMessage);\n}","import IApp, {IMessage} from './../model/IApp'\nimport IAction from './../model/IAction'\nimport * as types from './constants';\nimport {sortChatList} from \"../helpers\";\n\nconst initialState: IApp = {\n    chatList: {\n        data: null,\n        isFetching: false\n    },\n    user: {\n        isFetching: false,\n        data: null\n    },\n    chat: {\n        id: null,\n        isFetching: false,\n        isOpen: false,\n        data: []\n    },\n    showPanel: true,\n    page: localStorage.getItem('token') && localStorage.getItem('token') !== \"undefined\" ? \"chat\" : \"login\",\n    search: {\n        isFetching: false\n    }\n};\n\nexport function reducer(state: IApp = initialState, action: IAction): IApp {\n    let data, message: IMessage, chatList, messageList;\n    switch (action.type) {\n        case types.FETCH_CHATS:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    isFetching: true\n                }\n            };\n        case types.TOGGLE_PANEL:\n            return {\n                ...state,\n                showPanel: !state.showPanel\n            };\n        case types.FETCH_CHATS_DONE:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data: sortChatList(action.payload),\n                    isFetching: false,\n                }\n            };\n        case types.FETCH_MESSAGES:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.id,\n                    isFetching: true,\n                    isOpen: true\n                }\n            };\n        case types.FETCH_MESSAGES_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: action.payload,\n                    isFetching: false\n                }\n            };\n        case types.ADD_NEW_MESSAGE:\n            message = action.payload.message;\n            data = ([...(state.chatList.data || [])]).map(elem => {\n                if (elem.chat.id === message.chat.id) {\n                    elem.message = message;\n                }\n                return elem;\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    // @ts-ignore\n                    data: sortChatList(data)\n                },\n                chat: {\n                    ...state.chat,\n                    data: state.chat.id === message.chat.id ? [...(state.chat.data || []), action.payload.message] : state.chat.data\n                }\n            };\n        case types.CHANGE_PAGE:\n            return {\n                ...state,\n                page: action.payload\n            };\n        case types.REMOVE_STORE:\n            return {\n                ...initialState,\n                page: \"login\"\n            };\n        case types.FETCH_USER:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: true\n                }\n            };\n        case types.FETCH_USER_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: false,\n                    data: action.payload.user\n                }\n            };\n        case types.LOGIN:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.LOGIN_FAIL:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.REG:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.REG_FAIL:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.SEARCH:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: true\n                }\n            };\n        case types.SEARCH_DONE:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: false,\n                    data: action.payload\n                }\n            };\n        case types.CREATE_CHAT:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    isFetching: true,\n                    isOpen: true\n                }\n            };\n        case types.CREATE_CHAT_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.chatId,\n                    isFetching: false,\n                    data: []\n                }\n            };\n        case types.ADD_CHAT_TO_LIST:\n            data = [...(state.chatList.data || [])];\n            data.push({\n                chat: {id: action.payload.chatId},\n                message: null as unknown as IMessage,\n                user: action.payload.user\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    // @ts-ignore\n                    data: sortChatList(data)\n                }\n            };\n        case types.DELETE_MESSAGE_DONE:\n            message = action.payload.message;\n            if(message.chat.id !== state.chat.id)\n                return state;\n            messageList = [...(state.chat.data || [])]\n                .map(m => m.id === message.id ? undefined : m)\n                .filter(m => m);\n\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: messageList as IMessage[]\n                }\n            };\n        case types.EDIT_MESSAGE_DONE:\n            message = action.payload.message;\n            if(message.chat.id !== state.chat.id)\n                return state;\n            messageList = [...(state.chat.data || [])]\n                .map(m => m.id === message.id ? message : m);\n\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: messageList as IMessage[]\n                }\n            };\n        default:\n            return state;\n    }\n} ","import { createStore, applyMiddleware } from \"redux\";\nimport { watchSaga } from \"./redux/saga\";\nimport { reducer } from \"./redux/reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = () => {\n  const middlewareSaga = createSagaMiddleware();\n  const store = createStore(reducer, composeWithDevTools(\n    applyMiddleware(middlewareSaga)\n  ));\n  middlewareSaga.run(watchSaga);\n  return store;\n};\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./configStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}