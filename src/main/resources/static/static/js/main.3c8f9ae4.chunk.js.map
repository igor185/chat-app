{"version":3,"sources":["redux/constants.ts","redux/actions.ts","components/UserView/index.tsx","components/Header/index.tsx","var/routers.ts","helpers/index.ts","components/ChatList/ChatElem/index.tsx","components/ChatList/Search/index.tsx","components/ChatList/index.tsx","services/socket/socket.ts","components/Message/Input/index.tsx","components/Message/MessageItem.tsx","components/Message/MessageList.tsx","components/ChatPage/index.tsx","components/Chat/index.tsx","components/LoginPage/LoginForm.tsx","components/LoginPage/RegForm.tsx","components/LoginPage/Particles/particles.tsx","components/LoginPage/index.tsx","App.tsx","serviceWorker.ts","helpers/webApi.tsx","redux/saga.ts","redux/reducer.ts","configStore.ts","index.tsx"],"names":["FETCH_CHATS","FETCH_CHATS_DONE","FETCH_MESSAGES","FETCH_MESSAGES_DONE","CLOSE_CHAT","TOGGLE_PANEL","TOGGLE_SEARCH","ADD_NEW_MESSAGE","LOGIN","LOGIN_FAIL","REG","REG_FAIL","CHANGE_PAGE","REMOVE_STORE","FETCH_USER","FETCH_USER_DONE","SEARCH","SEARCH_DONE","CREATE_CHAT","CREATE_CHAT_DONE","ADD_CHAT_TO_LIST","DELETE_MESSAGE","DELETE_MESSAGE_DONE","EDIT_MESSAGE","EDIT_MESSAGE_DONE","clearStore","type","types","fetchChats","fetchMessages","chatId","user","payload","id","closeChat","togglePanel","newMessage","message","loginUser","login","password","regUser","avatar","changePage","page","fetchUser","search","toggleSearch","newChat","userId","addChatToList","deleteMessage","messageId","deleteMessageDone","editMessage","editMessageDone","connect","state","dispatch","actions","bindActionCreators","props","react_default","a","createElement","Modal","open","close","closeOnDimmerClick","onClose","setClose","centered","Header","className","username","isEdit","onClick","onLogOut","index_es","icon","faSignOutAlt","Content","image","Image","wrapped","size","src","circular","Description","Header_Header","chat","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","userView","setUserView","faBars","faSearch","data","components_UserView","localStorage","removeItem","prefix","SOCKET_URL","concat","CHAT_LIST","CHAT_MESSAGES","USER","NEW_CHAT","UPLOAD_FILE","dayjs","extend","relativeTime","fetchHeaderConfig","headers","Authorization","getItem","fromNow","date","sortChatList","toConsumableArray","sort","el1","el2","time1","time","uploadFile","_ref","asyncToGenerator","regenerator_default","mark","_callee","file","formData","res","wrap","_context","prev","next","FormData","append","fetch","url","method","body","sent","console","log","json","abrupt","stop","_x","apply","this","arguments","humanFileSize","bytes","si","length","undefined","thresh","Math","abs","units","u","toFixed","ChatElem","name","_props$show","show","text","react_ellipsis_text_default","Search","value","setValue","Fragment","Form","onSubmit","Input","loading","isFetching","placeholder","iconPosition","onChange","e","map","elem","ChatList_ChatElem","key","chatList","find","onText","as","textAlign","Icon","useEffect","isOpen","ChatList_Search","stompClient","socket","destination","send","action","store","connected","Stomp","over","SockJS","subscribe","JSON","parse","_ref2","user1","user2","_ref3","_ref4","setLoading","_useState5","_useState6","openModal","setOpenModal","_useState7","_useState8","setFile","handleUploadFile","target","files","then","catch","sendMessage","stringify","fluid","Button","color","hidden","basic","Message","fileName","TextArea","style","minHeight","Actions","inverted","disabled","fromMe","openDelete","openEdit","setCloseEdit","messageEdit","changeMessage","alignItems","fileType","indexOf","compact","info","window","fileDownloadUri","marginBottom","href","trigger","MessageList","Message_MessageItem","Loader","active","inline","Message_MessageList","Message_Input","display","justifyContent","flexDirection","height","showPanel","background","components_Header","components_ChatList","components_ChatPage","Dimmer","loginPage","setLogin","setPassword","Grid","position","top","left","verticalAlign","Column","width","Segment","stacked","event","error","content","imageList","amount","i","randomProfile","getAvatars","regPage","setAvatar","react_image_picker_dist_default","images","onPick","initParticles","particlesJS","particles","number","density","enable","value_area","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","config_demo","hide_card","background_color","background_image","background_position","background_repeat","background_size","LoginPage","LoginPage_LoginForm","LoginPage_RegForm","components_LoginPage","components_Chat","Boolean","location","hostname","match","request","input","init","promise","objectSpread2","Headers","Content-Type","ok","reload","Error","_x2","watchSaga","put","t0","_marked","_context2","_marked2","_context3","X-Requested-With","setItem","token","_marked3","_context4","_marked4","_action$payload","_context5","axios","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","takeLatest","_marked10","initialState","reducer","messageList","m","filter","middlewareSaga","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c8f9ae4.chunk.js","sourcesContent":["export const FETCH_CHATS = \"FETCH_CHATS\";\nexport const FETCH_CHATS_DONE = \"FETCH_CHATS_DONE\";\n\nexport const FETCH_MESSAGES = \"FETCH_MESSAGES\";\nexport const FETCH_MESSAGES_DONE = \"FETCH_MESSAGES_DONE\";\nexport const CLOSE_CHAT = \"CLOSE_CHAT\";\n\nexport const TOGGLE_PANEL = \"TOGGLE_PANEL\";\nexport const TOGGLE_SEARCH = \"TOGGLE_SEARCH\";\n\nexport const ADD_NEW_MESSAGE = \"ADD_NEW_MESSAGE\";\n\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGIN_DONE = \"LOGIN_DONE\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\n\nexport const REG = \"REG\";\nexport const REG_DONE = \"REG_DONE\";\nexport const REG_FAIL = \"REG_FAIL\";\n\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const REMOVE_STORE = \"REMOVE_STORE\";\n\nexport const FETCH_USER = \"FETCH_USER\";\nexport const FETCH_USER_DONE = \"FETCH_USER_DONE\";\nexport const FETCH_USER_FAIL = \"FETCH_USER_FAIL\";\n\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_DONE = \"SEARCH_DONE\";\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\n\nexport const CREATE_CHAT = \"CREATE_CHAT\";\nexport const CREATE_CHAT_DONE = \"CREATE_CHAT_DONE\";\nexport const CREATE_CHAT_FAIL = \"CREATE_CHAT_FAIL\";\n\nexport const ADD_CHAT_TO_LIST = \"ADD_CHAT_TO_LIST\";\n\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const DELETE_MESSAGE_DONE = \"DELETE_MESSAGE_DONE\";\n\nexport const EDIT_MESSAGE = \"EDIT_MESSAGE\";\nexport const EDIT_MESSAGE_DONE = \"EDIT_MESSAGE_DONE\";","import * as types from \"./constants\";\nimport {IMessage, IUser} from \"../model/IApp\";\n\nexport const clearStore = () => ({\n  type: types.REMOVE_STORE\n});\n\n\nexport const fetchChats = () => ({\n    type: types.FETCH_CHATS\n});\n\nexport const fetchMessages = (chatId: number, user: IUser) => ({\n    type: types.FETCH_MESSAGES,\n    payload: {\n        id: chatId,\n        user\n    }\n});\n\nexport const closeChat = () => ({\n    type: types.CLOSE_CHAT\n});\n\nexport const togglePanel = () => ({\n    type: types.TOGGLE_PANEL\n});\n\nexport const newMessage = (message: IMessage) => {\n    return {\n        type: types.ADD_NEW_MESSAGE,\n        payload: {\n            message\n        }\n    }\n};\n\nexport const loginUser = (login: string, password: string) => ({\n    type: types.LOGIN,\n    payload: {\n        login,\n        password\n    }\n});\n\nexport const regUser = (login: string, password: string, avatar: string) => ({\n    type: types.REG,\n    payload: {\n        login,\n        password,\n        avatar\n    }\n});\n\nexport const changePage = (page: string) => ({\n    type: types.CHANGE_PAGE,\n    payload: page\n});\n\nexport const fetchUser = () => ({\n    type: types.FETCH_USER\n});\n\nexport const search = (search: string) => ({\n   type: types.SEARCH,\n   payload: { search }\n});\n\nexport const toggleSearch = () => ({\n    type: types.TOGGLE_SEARCH\n});\n\nexport const newChat = (userId: number, user: IUser) => ({\n    type: types.CREATE_CHAT,\n    payload: {\n        userId,\n        user\n    }\n});\n\nexport const addChatToList = (chatId: number, user: IUser) => ({\n    type: types.ADD_CHAT_TO_LIST,\n    payload: {\n        chatId,\n        user\n    }\n});\n\nexport const deleteMessage = (messageId: number, chatId: number) => ({\n    type: types.DELETE_MESSAGE,\n    payload: {\n        messageId,\n        chatId\n    }\n});\n\nexport const deleteMessageDone = (message: IMessage) => ({\n    type: types.DELETE_MESSAGE_DONE,\n    payload: {\n        message\n    }\n});\n\nexport const editMessage = (messageId: number, chatId: number, message: string) => ({\n    type: types.EDIT_MESSAGE,\n    payload: {\n        messageId,\n        chatId,\n        message\n    }\n});\n\nexport const editMessageDone = (message: IMessage) => ({\n    type: types.EDIT_MESSAGE_DONE,\n    payload: {\n        message\n    }\n});\n","import React from 'react';\nimport IApp, {IUser} from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {Modal, Image, Header} from \"semantic-ui-react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\n\nexport interface IProps {\n    close: boolean;\n    setClose: (status: boolean) => void;\n    actions: typeof actions\n    user: IUser\n    onLogOut: () => void\n    isEdit: boolean\n}\n\nconst UserView = (props: IProps) => {\n    return (\n        <Modal\n            open={props.close}\n            closeOnDimmerClick={true}\n            onClose={() => props.setClose(false)}\n            centered={false}\n        >\n            <Modal.Header>\n                <div className={\"header-wrap-view\"}>\n                    {props.user.username}\n                    {props.isEdit && <div className=\"icon-wrap\" onClick={props.onLogOut}>\n                        <FontAwesomeIcon icon={faSignOutAlt}/>\n                    </div>}\n                </div>\n            </Modal.Header>\n            <Modal.Content image>\n                <Image wrapped size='medium' src={props.user.avatar} circular/>\n                <Modal.Description>\n                    <Header>Default Profile Image</Header>\n                    <p>\n                        We've found the following gravatar image associated with your e-mail\n                        address.\n                    </p>\n                    <p>Is it okay to use this photo?</p>\n                </Modal.Description>\n            </Modal.Content>\n        </Modal>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserView);","import React, {useState} from \"react\";\nimport \"./styles.sass\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faSearch, faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport IApp, {IUser} from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {Image} from \"semantic-ui-react\";\nimport UserView from \"../UserView\";\n\nconst Header = (props: any) => {\n    const onLogOut = () => {\n        localStorage.removeItem('token');\n        props.actions.clearStore();\n    };\n    const [close, setClose] = useState(false);\n    const [userView, setUserView] = useState<IUser | null>(null);\n\n    const onClick = (user: IUser) => {\n        if (user) {\n            setClose(true);\n            setUserView(user);\n        }\n    };\n\n    const user = props.chat.user;\n\n    return (\n        <div className=\"header-wrap\">\n            <div className=\"left-side\">\n                <div className=\"icon-wrap\" onClick={() => props.actions.togglePanel()}>\n                    <FontAwesomeIcon icon={faBars}/>\n                </div>\n                <div className=\"icon-wrap\" onClick={() => props.actions.toggleSearch()}>\n                    <FontAwesomeIcon icon={faSearch}/></div>\n            </div>\n            {user &&\n            <div className={\"header-user\"} onClick={() => onClick(user)}>\n                <div className=\"avatar\">\n                    <Image avatar src={user.avatar}/>\n                </div>\n                <div className=\"name\">{user.username}</div>\n            </div>}\n            <div className=\"right-size\" onClick={() => onClick(props.user.data)}>\n                <Image avatar src={props.user.data.avatar}/>\n            </div>\n            {userView && <UserView\n                isEdit={userView.id === props.user.data.id}\n                close={close}\n                setClose={setClose}\n                user={userView}\n                actions={props.actions}\n                onLogOut={onLogOut}\n            />\n            }\n        </div>\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n","const prefix = \"https://igor-babin-chat-java.herokuapp.com\";\n// const prefix = \"http://localhost:8080\";\n\n\nexport const SOCKET_URL = `${prefix}/ws`;\nexport const CHAT_LIST = `${prefix}/api/chats`;\nexport const CHAT_MESSAGES = `${prefix}/api/chat/`;\nexport const LOGIN = `${prefix}/api/auth/login`;\nexport const USER = `${prefix}/api/me`;\nexport const REG = `${prefix}/req`;\nexport const SEARCH = `${prefix}/api/users`;\nexport const NEW_CHAT = `${prefix}/api/chat`;\nexport const DELETE_MESSAGE = `${prefix}/api/message`;\nexport const UPLOAD_FILE = `${prefix}/api/uploadFile`;","import randomProfile from 'random-profile-generator';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {IFile, IMessageView} from \"../model/IApp\";\nimport * as url from '../var/routers';\n\ndayjs.extend(relativeTime);\n\n\nexport const fetchHeaderConfig = () => ({\n    headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n});\n\nexport const getAvatars = (amount: number) => {\n    let res = [];\n    for (let i = 0; i < amount; i++)\n        res[i] = randomProfile.avatar();\n    return res;\n};\n\nexport const fromNow = (date: string | number) => dayjs(date).fromNow();\n\nexport const sortChatList = (data: IMessageView[]) => {\n    const res = [...(data || [])];\n\n    return res.sort((el1, el2) => {\n        const time1: number = el1.message ? el1.message.time : 0;\n        const time2: number = el2.message ? el2.message.time : 0;\n        return time2 - time1;\n    })\n};\n\nexport const uploadFile = async (file: any): Promise<IFile> => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    let res = await fetch(url.UPLOAD_FILE, {\n        headers: {Authorization: `Bearer ${localStorage.getItem('token')}`},\n        method: \"POST\",\n        body: formData\n    });\n    console.log(res);\n    res = await res.json();\n    return res as unknown as IFile;\n};\n\n\nexport const humanFileSize = (bytes: number, si: boolean = false) => {\n    const thresh = si ? 1000 : 1024;\n    if (Math.abs(bytes) < thresh) {\n        return bytes + ' B';\n    }\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    do {\n        bytes /= thresh;\n        ++u;\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n    return bytes.toFixed(1) + ' ' + units[u];\n};","import React from 'react';\nimport \"./styles.sass\"\nimport {Image} from \"semantic-ui-react\";\nimport {fromNow} from \"../../../helpers\";\nimport EllipsisText from \"react-ellipsis-text\";\n\nexport interface IChatElem {\n    id: number;\n    name: string;\n    date: string;\n    message: string;\n    onClick: () => void;\n}\n\nconst ChatElem = (props: any) => {\n    const {name, date, message, id, avatar, show = false} = props;\n    const text = message ? (message.message || (message.file ? <span className=\"file\">file</span> : \"\"))   : \"\";\n    return (\n        <div className={`chat-elem-wrap ${props.chatId === id ? 'toggled' : \"\"}`} onClick={() => props.onClick()}>\n            <div className=\"avatar\">\n                <Image avatar src={avatar}/>\n            </div>\n            <div className=\"info\">\n                <div className=\"name-wrap\">\n                    <div className=\"name\">{name}</div>\n                    <div className=\"date\">{date && fromNow(date)}</div>\n                </div>\n                {!show && typeof text === \"string\"? (<EllipsisText text={text} length={21}/>) : text}\n            </div>\n        </div>\n    )\n};\n\n\nexport default ChatElem;","import React, {useState} from 'react';\nimport {Form, Header, Icon, Input} from \"semantic-ui-react\";\nimport ChatElem from \"../ChatElem\";\nimport {IMessageView, IUser} from \"../../../model/IApp\";\n\n\nconst Search = (props: any) => {\n    const [value, setValue] = useState(\"\");\n    const onText = (user: IUser) => {\n\n        const chat = props.chatList.data.find( (elem: any) =>elem.user.id === user.id);\n        if(chat){\n            return props.actions.fetchMessages(chat.chat.id, user);\n        }\n        props.actions.newChat(user.id);\n    };\n\n    const getNotFound = () => (\n        <Header as='h4' icon textAlign={\"center\"}>\n            <Icon name='window close outline' size={\"mini\"}/>\n            Not found\n        </Header>\n    );\n    const getUserList = () => (\n        <>\n            {props.search.data.map((elem: IUser) =>\n                <ChatElem\n                    key={elem.id}\n                    id={elem.id}\n                    name={elem.username}\n                    avatar={elem.avatar}\n                    onClick={() => onText(elem)}\n                    show\n                />\n            )}\n        </>\n    );\n\n\n    return (\n        <>\n            <Form onSubmit={() => props.actions.search(value)}>\n                <Input\n                    loading={props.search.isFetching}\n                    value={value}\n                    icon='user'\n                    placeholder='Search...'\n                    iconPosition='left'\n                    onChange={(e, data) => setValue(data.value)}\n                />\n            </Form>\n            <>\n                {props.search.data && (props.search.data.length > 0 ? getUserList() : getNotFound())}\n            </>\n        </>\n    )\n};\n\n\nexport default Search;","import ChatElem from \"./ChatElem\";\nimport React, {useEffect} from \"react\";\nimport \"./styles.sass\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport IApp, {IChatList, IChatView, IMessageView} from \"../../model/IApp\";\nimport {Input, Divider, Header} from \"semantic-ui-react\";\nimport Search from \"./Search\";\n\n\ninterface IChatListProps {\n    actions: typeof actions;\n    chatList: IChatList;\n    chat: IChatView\n    search: any\n}\n\nconst ChatList = (props: IChatListProps) => {\n    useEffect(() => {\n        if (!props.chatList.data)\n            props.actions.fetchChats();\n    }, [props.actions]);\n\n    const onClick = (elem: IMessageView) => {\n        if (elem.chat.id !== props.chat.id) {\n            props.actions.fetchMessages(elem.chat.id, elem.user)\n        } else {\n            props.actions.closeChat();\n        }\n    };\n\n    return (\n        (<div className=\"chat-list-wrap\">\n                {props.search.isOpen ? <Search {...props}/> :\n                    <>\n                        {props.chatList.data && props.chatList.data.map(elem => elem && elem.message && (\n                            <ChatElem key={elem.chat.id} id={elem.chat.id}\n                                      chatId={props.chat.id}\n                                      name={elem.user.username}\n                                      date={elem.message.time}\n                                      message={elem.message}\n                                      avatar={elem.user.avatar}\n                                      onClick={() => onClick(elem)}/>\n                        ))}\n                    </>}\n            </div>\n        ))\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    chatList: state.chatList,\n    chat: state.chat,\n    search: state.search\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatList);","import SockJS from \"sockjs-client\";\nimport Stomp, {Client} from 'stompjs';\nimport * as actions from \"../../redux/actions\";\nimport * as url from '../../var/routers'\nimport IApp, {IMessage, IUser} from \"../../model/IApp\";\n\nlet stompClient = {} as Client;\n\n\n\nconst connect = (action: typeof actions, store: IApp) => {\n    if(stompClient.connected){\n        console.log(\"already connected\");\n        return;\n    }\n\n\n    const user = store.user.data as IUser;\n\n    stompClient = Stomp.over(new SockJS(url.SOCKET_URL));\n    stompClient.connect({}, () => {\n        console.log('Connected', store.user);\n\n\n\n        stompClient.subscribe(`/res/new-message/${user.id}`, ({ body }) => action.newMessage(JSON.parse(body)));\n\n        stompClient.subscribe(`/res/new-chat/${user.id}`, ({ body }: { body: string}) => {\n            const newChat: { chatId: number, user1: IUser, user2: IUser} = JSON.parse(body);\n\n            action.addChatToList(newChat.chatId, newChat.user1.id === user.id ? newChat.user1 : newChat.user2);\n\n        });\n\n        stompClient.subscribe(`/res/delete-message/${user.id}`, ({ body }: { body: string}) => {\n            const message: IMessage = JSON.parse(body);\n\n            console.log(message);\n\n            action.deleteMessageDone(message);\n            action.fetchChats();\n        })\n\n        stompClient.subscribe(`/res/edit-message/${user.id}`, ({ body }: { body: string}) => {\n            const message: IMessage = JSON.parse(body);\n\n            action.editMessageDone(message);\n            action.fetchChats();\n        })\n    });\n};\n\nconst send = (destination: string, headers?: {}, body?: string) => {\n    return stompClient.send(destination, headers, body);\n};\n\nexport default {\n    stompClient,\n    send,\n    connect\n};","import React, {useState} from 'react';\nimport {Button, Form, Header, Icon, Input, Message, Modal, TextArea} from 'semantic-ui-react'\nimport socket from \"../../../services/socket/socket\";\nimport IApp, {IFile} from \"../../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {uploadFile, humanFileSize} from \"../../../helpers\";\n\n\nexport const MessageInput = (props: any) => {\n    const [value, setValue] = useState<any>(\"\");\n    const [loading, setLoading] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [file, setFile] = useState<IFile | null>(null);\n\n    const handleUploadFile = async ({ target }: any) => {\n        setOpenModal(true);\n        setLoading(true);\n        uploadFile(target.files[0])\n            .then((file: IFile) => {\n                console.log(file);\n                setFile(file);\n                setLoading(false);\n            })\n            .catch(console.log);\n    };\n\n    const sendMessage = () => {\n        setOpenModal(false);\n        if (!value && !file)\n            return;\n        socket.send('/req/new-message', {}, JSON.stringify({\n            chatId: props.chat.id,\n            userId: props.user.data.id,\n            message: value,\n            file,\n        }));\n        setValue(\"\");\n    };\n\n\n    return <Form onSubmit={(e) => sendMessage()} className={\"input-wrapper\"}>\n        <Input placeholder='Type a message...' fluid value={value} onChange={(e, data) => setValue(data.value)}/>\n        <Button color=\"teal\" icon as=\"label\">\n            <Icon name=\"paperclip\"/>\n            <input name=\"image\" type=\"file\" onChange={handleUploadFile} hidden />\n        </Button>\n        <Modal\n            open={openModal}\n            basic\n            size='small'\n        >\n            <Modal.Content>\n                <Header as={'h3'} textAlign='center' className={\"white-header\"}>Message with attached</Header>\n                <Message icon >\n                    {loading ? <Icon name='circle notched' loading /> :\n                    <Icon name='file' />}\n                    <Message.Content>\n                        <Message.Header>{file && file.fileName}</Message.Header>\n                        {file && humanFileSize(file.size)}\n                    </Message.Content>\n                </Message>\n                <Form>\n                    <TextArea\n                        value={value}\n                        onChange={(e, data) => setValue(data.value)}\n                        style={{ minHeight: 200 }}\n                    />\n                </Form>\n            </Modal.Content>\n            <Modal.Actions className={\"action-btn\"}>\n                <Button color='green' inverted onClick={() => loading || sendMessage()}>\n                    <Icon name='save' disabled={loading}/> Save\n                </Button>\n                <Button color='blue' inverted onClick={() => setOpenModal(false)}>\n                    {/* TODOOOOOO remove file*/}\n                    <Icon name='cancel' /> Cancel\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    </Form>\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    user: state.user,\n    chat: state.chat\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MessageInput);","import {Button, Form, Header, Icon, Image, Message, Modal, TextArea} from \"semantic-ui-react\";\nimport React, {useState} from \"react\";\nimport IApp, {IMessage, IMessageView, IUser} from \"../../model/IApp\";\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport './styles.sass'\nimport {fromNow, humanFileSize} from \"../../helpers\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../redux/actions\";\n\ndayjs.extend(relativeTime);\n\n\nexport const MessageItem = (props: { user: IUser, message: IMessage, actions: typeof Actions }) => {\n    const {message, user, actions} = props;\n    const fromMe = message.user.id === user.id;\n\n    const [openDelete, setClose] = useState(false);\n    const [openEdit, setCloseEdit] = useState(false);\n    const [messageEdit, changeMessage] = useState<any>(message.message);\n\n    const onDelete = () => {\n        setClose(false);\n        actions.deleteMessage(message.id, message.chat.id);\n    };\n\n    const onEdit = () => {\n        setCloseEdit(false);\n        actions.editMessage(message.id, message.chat.id, messageEdit);\n    };\n    return (\n        <div className={`message-item ${openDelete ? \"to-delete\" : \"\"}`}\n             style={{alignItems: fromMe ? \"flex-end\" : \"flex-start\"}}>\n            <p className={fromMe ? \"from-me\" : \"from-them\"}>\n                {message.file && (\n                        message.file.fileType.indexOf('image') === -1 ? (\n                            <Message icon compact size={\"mini\"} info>\n                                <Icon name='file'\n                                      onClick={() => message.file && window.open(message.file.fileDownloadUri, '_blank')}/>\n                                <Message.Content>\n                                    <Message.Header>{message.file && message.file.fileName}</Message.Header>\n                                    {message.file && humanFileSize(message.file.size)}\n                                </Message.Content>\n                            </Message>) :\n                            <>\n                                <div style={{ marginBottom: 10 }}>\n                            <Image src={message.file.fileDownloadUri}\n                                   size='medium'\n                                   wrapped\n                                   as={'a'}\n                                   href={message.file.fileDownloadUri}\n                                   target='_blank'/>\n                                </div>\n                            </>\n\n                   )}\n                {message.message}\n                <span className=\"info-block\">\n                <span className={\"time\"}>{fromNow(message.time)}</span>\n                    {fromMe && (<span className={\"icons\"}>\n                    <Modal\n                        trigger={<Icon name={\"trash\"} size={\"small\"} onClick={() => setClose(true)}/>}\n                        open={openDelete}\n                        onClose={() => setClose(false)}\n                        basic\n                        size='small'\n                    >\n                    <Modal.Content>\n                      <Header as={'h3'} textAlign='center' className={\"white-header\"}>Are you sure you want to delete the message?</Header>\n                    </Modal.Content>\n                    <Modal.Actions className={\"action-btn\"}>\n                      <Button color='red' onClick={onDelete} inverted>\n                        <Icon name='trash'/> Delete\n                      </Button>\n                        <Button color='green' onClick={() => setClose(false)} inverted>\n                        <Icon name='cancel'/> Cancel\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                     <Modal\n                         trigger={<Icon name={\"edit\"} size={\"small\"} onClick={() => setCloseEdit(true)}/>}\n                         open={openEdit}\n                         onClose={() => setCloseEdit(false)}\n                         basic\n                         size='small'\n                     >\n                    <Modal.Content>\n                      <Header as={'h3'} textAlign='center' className={\"white-header\"}>Edit message</Header>\n                        <Form>\n                            <TextArea\n                                value={messageEdit}\n                                onChange={(e, data) => changeMessage(data.value)}\n                                style={{minHeight: 200}}\n                            />\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions className={\"action-btn\"}>\n                      <Button color='green' onClick={onEdit} inverted>\n                        <Icon name='edit'/> Edit\n                      </Button>\n                        <Button color='blue' onClick={() => setCloseEdit(false)} inverted>\n                        <Icon name='cancel'/> Cancel\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                </span>)}\n            </span>\n            </p>\n            <Image avatar src={message.user.avatar}/>\n        </div>\n    )\n};\n\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(Actions, dispatch)\n});\nexport default connect(\n    () => ({}),\n    mapDispatchToProps\n)(MessageItem);","import MessageItem from \"./MessageItem\";\nimport React from \"react\";\nimport {IChatList, IMessage, IMessageView, IUser} from \"../../model/IApp\";\n\n\nexport const MessageList = (props: { chat: IChatList, user: IUser}) => {\n    // @ts-ignore\n    return <> {(props.chat.data || []).map((elem: IMessage) => <MessageItem key={elem.id} message={elem} user={props.user}/>) }</>\n};\n\n\n\nexport default MessageList;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {Header, Loader, Comment} from 'semantic-ui-react'\nimport './styles.sass'\nimport MessageInput from \"../Message/Input\";\nimport MessageList from \"../Message/MessageList\";\n\n\nconst ChatPage = (props: any) => {\n\n\n    return (\n        <div className=\"chat-page-wrapper\">\n            {props.chat.isOpen ? (\n                props.chat.isFetching ?\n                    (<div className=\"loader-wrap\">\n                        <Loader active inline='centered'/>\n                    </div>) :\n                    (\n                        <>\n                            <div className=\"messages-wrap\">\n                                <MessageList\n                                    chat={props.chat}\n                                    user={props.user.data}/>\n                            </div>\n                            <div className=\"input-wrap\">\n                                <MessageInput/>\n                            </div>\n                        </>\n                    )\n            ) : (\n                <div style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", height: \"100%\" }}>\n                    <Header as={'h3'} textAlign={\"center\"}>\n                        Select chat to start texting\n                    </Header>\n                </div>\n            )}\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatPage);\n","import React, {useEffect} from 'react';\nimport './styles.sass';\nimport Header from \"../Header\";\nimport ChatList from \"../ChatList\";\nimport ChatPage from \"../ChatPage\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport socket from '../../services/socket/socket';\nimport {Dimmer, Loader} from \"semantic-ui-react\";\n\nconst Chat = (props: any) => {\n    useEffect(() => {\n        if(props.actions && props.user.data) {\n            console.log('init');\n            socket.connect(props.actions, props.state)\n        }\n    }, [props.actions, props.user]);\n\n    useEffect(() => {\n        props.actions.fetchUser();\n    }, [props.actions]);\n    return (\n        props.user.data && !props.user.isFetching ? (\n        <div className=\"main-wrapper\">\n            <div style={ {background: \"white\"} }>\n                    <Header />\n                <div className=\"content-wrap\">\n                    {props.showPanel &&\n                    <ChatList {...props} />}\n                    <ChatPage />\n                </div>\n            </div>\n        </div>) : (\n            <Dimmer active inverted>\n                <Loader inverted />\n            </Dimmer>\n        )\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    state,\n    showPanel: state.showPanel,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Chat);","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst LoginForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.loginUser(login, password);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"30%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Login to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                            error={props.loginPage && !!props.loginPage.error}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.loginPage && props.loginPage.isFetching}>\n                            Login\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.loginPage && !!props.loginPage.error && (<Message\n                    error\n                    content={props.loginPage.error}\n                />)}\n                <Message>\n                    New to us? <a href=\"#\" onClick={() => props.actions.changePage(\"reg\")}>Sign Up</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    loginPage: state.loginPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginForm);","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment, Image } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport ImagePicker from 'react-image-picker'\nimport 'react-image-picker/dist/index.css'\nimport { getAvatars} from \"../../helpers\";\n\nconst imageList = [...getAvatars(14)];\n\nconst RegForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.regUser(login, password, avatar);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"20%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Sign up to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                        />\n                        <Header as='h4' textAlign='left'>\n                            Choose a photo\n                        </Header>\n                        <ImagePicker\n                            images={imageList.map((image, i) => ({src: image, value: i}))}\n                            onPick={(data: any) => setAvatar(data.src)}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.regPage && props.regPage.isFetching}>\n                            Sign up\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.regPage && !!props.regPage.error && (<Message\n                    error\n                    content={props.regPage.error}\n                />)}\n                <Message>\n                    Already has account? <a href='#'  onClick={() => props.actions.changePage(\"login\")}>Login</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    regPage: state.regPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegForm);","import './styles.sass'\n\n\nconst initParticles = () => {\n    //@ts-ignore\n    // eslint-disable-next-line no-undef\n    particlesJS('particles-js',\n\n        {\n            \"particles\": {\n                \"number\": {\n                    \"value\": 80,\n                    \"density\": {\n                        \"enable\": true,\n                        \"value_area\": 800\n                    }\n                },\n                \"color\": {\n                    \"value\": \"#ffffff\"\n                },\n                \"shape\": {\n                    \"type\": \"circle\",\n                    \"stroke\": {\n                        \"width\": 0,\n                        \"color\": \"#000000\"\n                    },\n                    \"polygon\": {\n                        \"nb_sides\": 5\n                    },\n                    \"image\": {\n                        \"src\": \"img/github.svg\",\n                        \"width\": 100,\n                        \"height\": 100\n                    }\n                },\n                \"opacity\": {\n                    \"value\": 0.5,\n                    \"random\": false,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 1,\n                        \"opacity_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"size\": {\n                    \"value\": 5,\n                    \"random\": true,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 40,\n                        \"size_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"line_linked\": {\n                    \"enable\": true,\n                    \"distance\": 150,\n                    \"color\": \"#ffffff\",\n                    \"opacity\": 0.4,\n                    \"width\": 1\n                },\n                \"move\": {\n                    \"enable\": true,\n                    \"speed\": 2,\n                    \"direction\": \"none\",\n                    \"random\": false,\n                    \"straight\": false,\n                    \"out_mode\": \"out\",\n                    \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 1200\n                    }\n                }\n            },\n            \"interactivity\": {\n                \"detect_on\": \"canvas\",\n                \"events\": {\n                    \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                    },\n                    \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"push\"\n                    },\n                    \"resize\": true\n                },\n                \"modes\": {\n                    \"grab\": {\n                        \"distance\": 400,\n                        \"line_linked\": {\n                            \"opacity\": 1\n                        }\n                    },\n                    \"bubble\": {\n                        \"distance\": 400,\n                        \"size\": 40,\n                        \"duration\": 2,\n                        \"opacity\": 8,\n                        \"speed\": 3\n                    },\n                    \"repulse\": {\n                        \"distance\": 200\n                    },\n                    \"push\": {\n                        \"particles_nb\": 4\n                    },\n                    \"remove\": {\n                        \"particles_nb\": 2\n                    }\n                }\n            },\n            \"retina_detect\": true,\n            \"config_demo\": {\n                \"hide_card\": false,\n                \"background_color\": \"#b61924\",\n                \"background_image\": \"\",\n                \"background_position\": \"50% 50%\",\n                \"background_repeat\": \"no-repeat\",\n                \"background_size\": \"cover\"\n            }\n        }\n\n    );\n};\nexport default initParticles;","import React, {useEffect} from 'react';\nimport LoginForm from \"./LoginForm\";\nimport RegForm from \"./RegForm\";\nimport initParticles from \"./Particles/particles\";\nimport './Particles/styles.sass'\n\n\nconst LoginPage = (props: any) => {\n    useEffect(() => {initParticles()}, [])\n\n    return (\n        <>\n            <div id=\"particles-js\" />\n            {props.page === \"login\" ? <LoginForm/> : <RegForm/>}\n        </>\n    )\n};\n\n\nexport default LoginPage;","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport 'semantic-ui-css/semantic.min.css'\nimport LoginPage from \"./components/LoginPage\";\nimport IApp from \"./model/IApp\";\nimport {connect} from \"react-redux\";\n\nconst App: React.FC = (props: any) => {\n    switch (props.page) {\n        case \"login\":\n        case 'reg':\n            return <LoginPage page={props.page}/>;\n        default:\n            return (\n                <div className=\"App\">\n                    <Chat/>\n                </div>\n            )\n    }\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    page: state.page\n});\n\nexport default connect(\n    mapStateToProps,\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {fetchHeaderConfig} from \"./index\";\n\nconst request: typeof fetch = async (input: RequestInfo, init?: RequestInit | undefined) => {\n    let headers: HeadersInit = init && init.headers ? {...fetchHeaderConfig().headers, ...init.headers } : fetchHeaderConfig().headers as HeadersInit;\n    if(init && init.body) {\n        headers = new Headers({'Content-Type': 'application/json', ...headers});\n    }\n\n    let promise = await fetch(input, { ...(init || {}), headers});\n    console.log(promise)\n\n    if(!promise.ok){\n        console.error(promise);\n\n        const message = await promise.json();\n\n        console.log(message);\n\n        if(message.message === \"Token has expired\") {\n            localStorage.removeItem(\"token\");\n\n            return window.location.reload();\n        }\n        // @ts-ignore\n        throw new Error(message.message);\n    }\n    return await promise.json();\n};\nexport default request;","import {takeLatest, put} from \"redux-saga/effects\";\nimport * as types from \"./constants\";\nimport * as url from \"../var/routers\";\nimport {fetchHeaderConfig} from \"../helpers\";\nimport axios from 'axios';\nimport request from \"../helpers/webApi\";\nimport socket from \"../services/socket/socket\";\n\nfunction* fetchChats(action: any) {\n    try {\n        const res = yield request(url.CHAT_LIST);\n        yield put({type: types.FETCH_CHATS_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* fetchMessages(action: any) {\n    try {\n        const res = yield request(url.CHAT_MESSAGES + action.payload.id, {headers: fetchHeaderConfig().headers});\n        yield put({type: types.FETCH_MESSAGES_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* loginUser(action: any) {\n\n    try {\n        const res = yield request(url.LOGIN, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: action.payload.login,\n                password: action.payload.password\n            }),\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            }\n        });\n        localStorage.setItem('token', res.token);\n        yield put({\n            type: types.CHANGE_PAGE,\n            payload: \"chat\"\n        })\n    } catch (e) {\n        yield put({\n            type: types.LOGIN_FAIL,\n            payload: { error: e.message }\n        });\n        console.error(e);\n    }\n}\n\nfunction* fetchUser(action: any) {\n    try {\n        const res = yield request(url.USER, {\n            method: \"GET\",\n            headers: fetchHeaderConfig().headers\n        });\n\n        yield put({\n            type: types.FETCH_USER_DONE,\n            payload: {\n                user: res\n            }\n        })\n    } catch (e) {\n        console.error(e);\n        localStorage.removeItem('token');\n        yield put({\n            type: types.REMOVE_STORE\n        })\n    }\n}\n\nfunction* regUser(action: any) {\n    const {login, password, avatar} = action.payload;\n    try {\n        // TODO doesn't work with fetch, even if hard-code correct content-type\n        const res = yield axios({\n            method: \"POST\",\n            url: url.REG,\n            data: {\n                username: login,\n                password,\n                avatar\n            }\n        });\n        yield put({\n            type: types.LOGIN,\n            payload: {\n                login, password\n            }\n        })\n    } catch (error) {\n        yield put({\n            type: types.REG_FAIL,\n            payload: {error: error.message}\n        });\n        console.error(error);\n    }\n}\n\nfunction* search(action: any) {\n    try {\n        const res = yield request(url.SEARCH + `?search=${action.payload.search}`);\n        yield put({\n            type: types.SEARCH_DONE,\n            payload: res\n        })\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* newChat(action: any) {\n    try{\n        const res = yield request(url.NEW_CHAT, {\n            method: \"PUT\",\n            body: JSON.stringify({\n                userId: action.payload.userId\n            })\n        });\n        yield put({\n            type: types.CREATE_CHAT_DONE,\n            payload: {\n                chatId: res.chatId\n            }\n        })\n    }catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* deleteMessage(action: any) {\n    try {\n        yield request(url.DELETE_MESSAGE + `/${action.payload.messageId}`, {\n            method: \"DELETE\",\n            body: JSON.stringify({\n                chatId: action.payload.chatId\n            })\n        });\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* editMessage(action: any) {\n    try {\n        yield request(url.DELETE_MESSAGE + `/${action.payload.messageId}`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                chatId: action.payload.chatId,\n                message: action.payload.message\n            })\n        });\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nexport function* watchSaga() {\n    yield takeLatest(types.FETCH_CHATS, fetchChats);\n    yield takeLatest(types.FETCH_MESSAGES, fetchMessages);\n    yield takeLatest(types.LOGIN, loginUser);\n    yield takeLatest(types.FETCH_USER, fetchUser);\n    yield takeLatest(types.REG, regUser);\n    yield takeLatest(types.SEARCH, search);\n    yield takeLatest(types.CREATE_CHAT, newChat);\n    yield takeLatest(types.DELETE_MESSAGE, deleteMessage);\n    yield takeLatest(types.EDIT_MESSAGE, editMessage);\n}","import IApp, {IMessage} from './../model/IApp'\nimport IAction from './../model/IAction'\nimport * as types from './constants';\nimport {sortChatList} from \"../helpers\";\n\nconst initialState: IApp = {\n    chatList: {\n        data: null,\n        isFetching: false\n    },\n    user: {\n        isFetching: false,\n        data: null\n    },\n    chat: {\n        id: null,\n        isFetching: false,\n        isOpen: false,\n        data: [],\n        user: null\n    },\n    showPanel: true,\n    page: localStorage.getItem('token') && localStorage.getItem('token') !== \"undefined\" ? \"chat\" : \"login\",\n    search: {\n        isFetching: false,\n        isOpen: false\n    }\n};\n\nexport function reducer(state: IApp = initialState, action: IAction): IApp {\n    let data, message: IMessage, chatList, messageList;\n    switch (action.type) {\n        case types.FETCH_CHATS:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    isFetching: true\n                }\n            };\n        case types.TOGGLE_PANEL:\n            return {\n                ...state,\n                showPanel: !state.showPanel\n            };\n        case types.TOGGLE_SEARCH:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isOpen: !state.search.isOpen\n                },\n                showPanel: true\n            };\n        case types.FETCH_CHATS_DONE:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data: sortChatList(action.payload),\n                    isFetching: false,\n                }\n            };\n        case types.FETCH_MESSAGES:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.id,\n                    isFetching: true,\n                    isOpen: true,\n                    user: action.payload.user\n                }\n            };\n        case types.FETCH_MESSAGES_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: action.payload,\n                    isFetching: false\n                }\n            };\n        case types.ADD_NEW_MESSAGE:\n            message = action.payload.message;\n            data = ([...(state.chatList.data || [])]).map(elem => {\n                if (elem.chat.id === message.chat.id) {\n                    elem.message = message;\n                }\n                return elem;\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    // @ts-ignore\n                    data: sortChatList(data)\n                },\n                chat: {\n                    ...state.chat,\n                    data: state.chat.id === message.chat.id ? [...(state.chat.data || []), action.payload.message] : state.chat.data\n                }\n            };\n        case types.CHANGE_PAGE:\n            return {\n                ...state,\n                page: action.payload\n            };\n        case types.REMOVE_STORE:\n            return {\n                ...initialState,\n                page: \"login\"\n            };\n        case types.FETCH_USER:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: true\n                }\n            };\n        case types.FETCH_USER_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: false,\n                    data: action.payload.user\n                }\n            };\n        case types.LOGIN:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.LOGIN_FAIL:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.REG:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.REG_FAIL:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.SEARCH:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: true\n                }\n            };\n        case types.SEARCH_DONE:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: false,\n                    data: action.payload\n                }\n            };\n        case types.CREATE_CHAT:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    isFetching: true,\n                    isOpen: true,\n                    user: action.payload.user\n                }\n            };\n        case types.CREATE_CHAT_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.chatId,\n                    isFetching: false,\n                    data: []\n                }\n            };\n        case types.ADD_CHAT_TO_LIST:\n            data = [...(state.chatList.data || [])];\n            data.push({\n                chat: {id: action.payload.chatId},\n                message: null as unknown as IMessage,\n                user: action.payload.user\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    // @ts-ignore\n                    data: sortChatList(data)\n                }\n            };\n        case types.DELETE_MESSAGE_DONE:\n            message = action.payload.message;\n            if (message.chat.id !== state.chat.id)\n                return state;\n            messageList = [...(state.chat.data || [])]\n                .map(m => m.id === message.id ? undefined : m)\n                .filter(m => m);\n\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: messageList as IMessage[]\n                }\n            };\n        case types.EDIT_MESSAGE_DONE:\n            message = action.payload.message;\n            if (message.chat.id !== state.chat.id)\n                return state;\n            messageList = [...(state.chat.data || [])]\n                .map(m => m.id === message.id ? message : m);\n\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: messageList as IMessage[]\n                }\n            };\n        case types.CLOSE_CHAT:\n            return {\n                ...state,\n                chat: initialState.chat\n            };\n        default:\n            return state;\n    }\n} ","import { createStore, applyMiddleware } from \"redux\";\nimport { watchSaga } from \"./redux/saga\";\nimport { reducer } from \"./redux/reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = () => {\n  const middlewareSaga = createSagaMiddleware();\n  const store = createStore(reducer, composeWithDevTools(\n    applyMiddleware(middlewareSaga)\n  ));\n  middlewareSaga.run(watchSaga);\n  return store;\n};\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./configStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}