{"version":3,"sources":["redux/constants.ts","redux/actions.ts","var/routers.ts","helpers/index.ts","components/Cropper/index.jsx","components/UserView/index.tsx","components/Header/index.tsx","components/ChatList/ChatElem/index.tsx","components/ChatList/Search/index.tsx","components/ChatList/index.tsx","services/socket/socket.ts","components/Message/Input/index.tsx","components/Message/MessageItem.tsx","components/Message/MessageList.tsx","components/ChatPage/index.tsx","components/Chat/index.tsx","components/LoginPage/LoginForm.tsx","components/LoginPage/RegForm.tsx","components/LoginPage/Particles/particles.tsx","components/LoginPage/index.tsx","App.tsx","serviceWorker.ts","helpers/webApi.tsx","redux/saga.ts","redux/reducer.ts","configStore.ts","index.tsx"],"names":["FETCH_CHATS","FETCH_CHATS_DONE","FETCH_MESSAGES","FETCH_MESSAGES_DONE","CLOSE_CHAT","TOGGLE_PANEL","TOGGLE_SEARCH","ADD_NEW_MESSAGE","LOGIN","LOGIN_FAIL","REG","REG_FAIL","CHANGE_PAGE","REMOVE_STORE","FETCH_USER","FETCH_USER_DONE","SEARCH","SEARCH_DONE","CREATE_CHAT","CREATE_CHAT_DONE","ADD_CHAT_TO_LIST","DELETE_MESSAGE","DELETE_MESSAGE_DONE","EDIT_MESSAGE","EDIT_MESSAGE_DONE","UPDATE_AVATAR","UPDATE_AVATAR_DONE","clearStore","type","types","fetchChats","fetchMessages","chatId","user","payload","id","closeChat","togglePanel","newMessage","message","loginUser","login","password","regUser","avatar","changePage","page","fetchUser","search","toggleSearch","newChat","userId","addChatToList","deleteMessage","messageId","deleteMessageDone","editMessage","editMessageDone","updateAvatar","src","prefix","SOCKET_URL","concat","CHAT_LIST","CHAT_MESSAGES","USER","NEW_CHAT","UPLOAD_FILE","dayjs","extend","relativeTime","fetchHeaderConfig","headers","Authorization","localStorage","getItem","fromNow","date","sortChatList","data","Object","toConsumableArray","sort","el1","el2","time1","time","uploadFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","file","formData","res","wrap","_context","prev","next","FormData","append","fetch","url","method","body","sent","console","log","json","abrupt","stop","_x","apply","this","arguments","humanFileSize","bytes","si","length","undefined","thresh","Math","abs","units","u","toFixed","Cropper","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","preview","onCrop","bind","assertThisInitialized","onClose","setState","_this2","_this$state$preview$s","split","_this$state$preview$s2","slicedToArray","info","_info$split","encoding","dataurl","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLtoFile","then","fileDownloadUri","catch","_this3","react_default","createElement","Fragment","className","react_avatar_default","width","height","onBeforeFileLoad","alt","style","display","justifyContent","Button","color","onClick","onSave","React","Component","connect","dispatch","actions","bindActionCreators","_useState","useState","_useState2","crop","setCropper","_useState3","_useState4","setAvatar","Modal","open","close","closeOnDimmerClick","setClose","centered","Header","username","isEdit","onLogOut","index_es","icon","faSignOutAlt","Content","components_Cropper","Image","wrapped","size","circular","Description","Header_Header","chat","userView","setUserView","faBars","faSearch","components_UserView","removeItem","ChatElem","name","_props$show","show","text","react_ellipsis_text_default","Search","value","setValue","Form","onSubmit","Input","loading","isFetching","placeholder","iconPosition","onChange","e","map","elem","ChatList_ChatElem","key","chatList","find","onText","as","textAlign","Icon","useEffect","isOpen","ChatList_Search","stompClient","socket","destination","send","action","store","connected","Stomp","over","SockJS","subscribe","JSON","parse","_ref2","user1","user2","_ref3","_ref4","setLoading","_useState5","_useState6","openModal","setOpenModal","_useState7","_useState8","setFile","handleUploadFile","target","files","sendMessage","stringify","fluid","hidden","basic","Message","fileName","TextArea","minHeight","Actions","inverted","disabled","fromMe","openDelete","openEdit","setCloseEdit","messageEdit","changeMessage","alignItems","fileType","indexOf","compact","window","marginBottom","href","trigger","MessageList","Message_MessageItem","Loader","active","inline","Message_MessageList","Message_Input","flexDirection","showPanel","background","components_Header","components_ChatList","components_ChatPage","Dimmer","loginPage","setLogin","setPassword","Grid","position","top","left","verticalAlign","Column","Segment","stacked","event","error","content","imageList","amount","i","randomProfile","getAvatars","regPage","react_image_picker_dist_default","images","image","onPick","initParticles","particlesJS","particles","number","density","enable","value_area","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","config_demo","hide_card","background_color","background_image","background_position","background_repeat","background_size","LoginPage","LoginPage_LoginForm","LoginPage_RegForm","components_LoginPage","components_Chat","Boolean","location","hostname","request","input","init","promise","objectSpread2","Headers","Content-Type","ok","reload","Error","_x2","watchSaga","put","t0","_marked","_context2","_marked2","_context3","X-Requested-With","setItem","token","_marked3","_context4","_marked4","_action$payload","_context5","axios","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","takeLatest","_marked11","initialState","reducer","messageList","m","filter","middlewareSaga","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.370c0df0.chunk.js","sourcesContent":["export const FETCH_CHATS = \"FETCH_CHATS\";\nexport const FETCH_CHATS_DONE = \"FETCH_CHATS_DONE\";\n\nexport const FETCH_MESSAGES = \"FETCH_MESSAGES\";\nexport const FETCH_MESSAGES_DONE = \"FETCH_MESSAGES_DONE\";\nexport const CLOSE_CHAT = \"CLOSE_CHAT\";\n\nexport const TOGGLE_PANEL = \"TOGGLE_PANEL\";\nexport const TOGGLE_SEARCH = \"TOGGLE_SEARCH\";\n\nexport const ADD_NEW_MESSAGE = \"ADD_NEW_MESSAGE\";\n\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGIN_DONE = \"LOGIN_DONE\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\n\nexport const REG = \"REG\";\nexport const REG_DONE = \"REG_DONE\";\nexport const REG_FAIL = \"REG_FAIL\";\n\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const REMOVE_STORE = \"REMOVE_STORE\";\n\nexport const FETCH_USER = \"FETCH_USER\";\nexport const FETCH_USER_DONE = \"FETCH_USER_DONE\";\nexport const FETCH_USER_FAIL = \"FETCH_USER_FAIL\";\n\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_DONE = \"SEARCH_DONE\";\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\n\nexport const CREATE_CHAT = \"CREATE_CHAT\";\nexport const CREATE_CHAT_DONE = \"CREATE_CHAT_DONE\";\nexport const CREATE_CHAT_FAIL = \"CREATE_CHAT_FAIL\";\n\nexport const ADD_CHAT_TO_LIST = \"ADD_CHAT_TO_LIST\";\n\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const DELETE_MESSAGE_DONE = \"DELETE_MESSAGE_DONE\";\n\nexport const EDIT_MESSAGE = \"EDIT_MESSAGE\";\nexport const EDIT_MESSAGE_DONE = \"EDIT_MESSAGE_DONE\";\n\nexport const UPDATE_AVATAR = \"UPDATE_AVATAR\";\nexport const UPDATE_AVATAR_DONE = \"UPDATE_AVATAR_DONE\";","import * as types from \"./constants\";\nimport {IMessage, IUser} from \"../model/IApp\";\n\nexport const clearStore = () => ({\n  type: types.REMOVE_STORE\n});\n\n\nexport const fetchChats = () => ({\n    type: types.FETCH_CHATS\n});\n\nexport const fetchMessages = (chatId: number, user: IUser) => ({\n    type: types.FETCH_MESSAGES,\n    payload: {\n        id: chatId,\n        user\n    }\n});\n\nexport const closeChat = () => ({\n    type: types.CLOSE_CHAT\n});\n\nexport const togglePanel = () => ({\n    type: types.TOGGLE_PANEL\n});\n\nexport const newMessage = (message: IMessage) => {\n    return {\n        type: types.ADD_NEW_MESSAGE,\n        payload: {\n            message\n        }\n    }\n};\n\nexport const loginUser = (login: string, password: string) => ({\n    type: types.LOGIN,\n    payload: {\n        login,\n        password\n    }\n});\n\nexport const regUser = (login: string, password: string, avatar: string) => ({\n    type: types.REG,\n    payload: {\n        login,\n        password,\n        avatar\n    }\n});\n\nexport const changePage = (page: string) => ({\n    type: types.CHANGE_PAGE,\n    payload: page\n});\n\nexport const fetchUser = () => ({\n    type: types.FETCH_USER\n});\n\nexport const search = (search: string) => ({\n   type: types.SEARCH,\n   payload: { search }\n});\n\nexport const toggleSearch = () => ({\n    type: types.TOGGLE_SEARCH\n});\n\nexport const newChat = (userId: number, user: IUser) => ({\n    type: types.CREATE_CHAT,\n    payload: {\n        userId,\n        user\n    }\n});\n\nexport const addChatToList = (chatId: number, user: IUser) => ({\n    type: types.ADD_CHAT_TO_LIST,\n    payload: {\n        chatId,\n        user\n    }\n});\n\nexport const deleteMessage = (messageId: number, chatId: number) => ({\n    type: types.DELETE_MESSAGE,\n    payload: {\n        messageId,\n        chatId\n    }\n});\n\nexport const deleteMessageDone = (message: IMessage) => ({\n    type: types.DELETE_MESSAGE_DONE,\n    payload: {\n        message\n    }\n});\n\nexport const editMessage = (messageId: number, chatId: number, message: string) => ({\n    type: types.EDIT_MESSAGE,\n    payload: {\n        messageId,\n        chatId,\n        message\n    }\n});\n\nexport const editMessageDone = (message: IMessage) => ({\n    type: types.EDIT_MESSAGE_DONE,\n    payload: {\n        message\n    }\n});\n\nexport const updateAvatar = (src: string) => ({\n    type: types.UPDATE_AVATAR,\n    payload: {\n        src\n    }\n});\n","const prefix = \"https://igor-babin-chat-java.herokuapp.com\";\n// const prefix = \"http://localhost:8080\";\n\n\nexport const SOCKET_URL = `${prefix}/ws`;\nexport const CHAT_LIST = `${prefix}/api/chats`;\nexport const CHAT_MESSAGES = `${prefix}/api/chat/`;\nexport const LOGIN = `${prefix}/api/auth/login`;\nexport const USER = `${prefix}/api/me`;\nexport const REG = `${prefix}/req`;\nexport const SEARCH = `${prefix}/api/users`;\nexport const NEW_CHAT = `${prefix}/api/chat`;\nexport const DELETE_MESSAGE = `${prefix}/api/message`;\nexport const UPLOAD_FILE = `${prefix}/api/uploadFile`;\nexport const UPDATE_AVATAR = `${prefix}/api/user/avatar`;","import randomProfile from 'random-profile-generator';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {IFile, IMessageView} from \"../model/IApp\";\nimport * as url from '../var/routers';\n\ndayjs.extend(relativeTime);\n\n\nexport const fetchHeaderConfig = () => ({\n    headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n});\n\nexport const getAvatars = (amount: number) => {\n    let res = [];\n    for (let i = 0; i < amount; i++)\n        res[i] = randomProfile.avatar();\n    return res;\n};\n\nexport const fromNow = (date: string | number) => dayjs(date).fromNow();\n\nexport const sortChatList = (data: IMessageView[]) => {\n    const res = [...(data || [])];\n\n    return res.sort((el1, el2) => {\n        const time1: number = el1.message ? el1.message.time : 0;\n        const time2: number = el2.message ? el2.message.time : 0;\n        return time2 - time1;\n    })\n};\n\nexport const uploadFile = async (file: any): Promise<IFile> => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    let res = await fetch(url.UPLOAD_FILE, {\n        headers: {Authorization: `Bearer ${localStorage.getItem('token')}`},\n        method: \"POST\",\n        body: formData\n    });\n    console.log(res);\n    res = await res.json();\n    return res as unknown as IFile;\n};\n\n\nexport const humanFileSize = (bytes: number, si: boolean = false) => {\n    const thresh = si ? 1000 : 1024;\n    if (Math.abs(bytes) < thresh) {\n        return bytes + ' B';\n    }\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    do {\n        bytes /= thresh;\n        ++u;\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n    return bytes.toFixed(1) + ' ' + units[u];\n};\n\nexport const dataURLtoFile = (dataurl: any, filename: any) => {\n    let arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n    while(n--){\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, {type:mime});\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Avatar from 'react-avatar-edit'\nimport './styles.sass'\nimport {Button} from \"semantic-ui-react\";\nimport {dataURLtoFile, uploadFile} from \"../../helpers\";\n\nclass Cropper extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            preview: null,\n            src: \"\"\n        };\n        this.onCrop = this.onCrop.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    onClose() {\n        this.setState({preview: null})\n    }\n\n    onCrop(preview) {\n        this.setState({preview})\n    }\n\n    onSave(){\n        const [info, data] = this.state.preview.split(',');\n        const [typeTemp] = info.split(\";\");\n        const encoding = typeTemp.split(\"/\")[1];\n        const file = dataURLtoFile(this.state.preview, `avatar.${encoding}`);\n        uploadFile(file)\n            .then(file => {\n                this.props.onClose(file.fileDownloadUri);\n            })\n            .catch(console.log);\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"cropper\">\n                    <Avatar\n                        width={320}\n                        height={200}\n                        onCrop={this.onCrop}\n                        onClose={this.onClose}\n                        onBeforeFileLoad={this.onBeforeFileLoad}\n                    />\n\n                    <div className=\"preview\">\n                        {this.state.preview && (\n                            <img src={this.state.preview} alt=\"Preview\"/>)\n                        }\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <Button color='blue' onClick={() => this.props.onClose()}>Close</Button>\n                    {this.state.preview && <Button color='blue' onClick={() => this.onSave()}>Save</Button>}\n                </div>\n            </>\n\n        )\n    }\n}\n\nexport default Cropper;","import React, {useState} from 'react';\nimport IApp, {IUser} from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {Modal, Image, Header, Button} from \"semantic-ui-react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport Cropper from \"../Cropper\";\n\nimport './styles.sass';\n\nexport interface IProps {\n    close: boolean;\n    setClose: (status: boolean) => void;\n    actions: typeof actions\n    user: IUser\n    onLogOut: () => void\n    isEdit: boolean\n}\n\nconst UserView = (props: IProps) => {\n    const [crop, setCropper] = useState(false);\n    const [avatar, setAvatar] = useState(props.user.avatar);\n    return (\n        <Modal\n            open={props.close}\n            closeOnDimmerClick={true}\n            onClose={() => props.setClose(false)}\n            centered={false}\n        >\n            <Modal.Header>\n                <div className={\"header-wrap-view\"}>\n                    {props.user.username}\n                    {props.isEdit && <div className=\"icon-wrap\" onClick={props.onLogOut}>\n                        <FontAwesomeIcon icon={faSignOutAlt}/>\n                    </div>}\n                </div>\n            </Modal.Header>\n            <Modal.Content>\n                <div className=\"content-wrapper\">\n                    {crop ? (\n                            <>\n                                    <Cropper\n                                        onClose={(src?: string) => {\n                                            setCropper(false);\n                                            if(src){\n                                                props.actions.updateAvatar(src);\n                                                setAvatar(avatar);\n                                            }\n                                        }}\n                                    />\n                            </>\n                        ) :\n                        (<div className={\"avatar\"}>\n                            <Image wrapped size='medium' src={avatar} circular/>\n                            <Button color='blue' onClick={() => setCropper(true)}>Upload photo</Button>\n                        </div>)\n                    }\n                    <Modal.Description>\n                        <Header>Default Profile Image</Header>\n                        <p>\n                            We've found the following gravatar image associated with your e-mail\n                            address.\n                        </p>\n                        <p>Is it okay to use this photo?</p>\n                    </Modal.Description>\n                </div>\n            </Modal.Content>\n        </Modal>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserView);","import React, {useState} from \"react\";\nimport \"./styles.sass\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faSearch, faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport IApp, {IUser} from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {Image} from \"semantic-ui-react\";\nimport UserView from \"../UserView\";\n\nconst Header = (props: any) => {\n    const onLogOut = () => {\n        localStorage.removeItem('token');\n        props.actions.clearStore();\n    };\n    const [close, setClose] = useState(false);\n    const [userView, setUserView] = useState<IUser | null>(null);\n\n    const onClick = (user: IUser) => {\n        if (user) {\n            setClose(true);\n            setUserView(user);\n        }\n    };\n\n    const user = props.chat.user;\n\n    return (\n        <div className=\"header-wrap\">\n            <div className=\"left-side\">\n                <div className=\"icon-wrap\" onClick={() => props.actions.togglePanel()}>\n                    <FontAwesomeIcon icon={faBars}/>\n                </div>\n                <div className=\"icon-wrap\" onClick={() => props.actions.toggleSearch()}>\n                    <FontAwesomeIcon icon={faSearch}/></div>\n            </div>\n            {user &&\n            <div className={\"header-user\"} onClick={() => onClick(user)}>\n                <div className=\"avatar\">\n                    <Image avatar src={user.avatar}/>\n                </div>\n                <div className=\"name\">{user.username}</div>\n            </div>}\n            <div className=\"right-size\" onClick={() => onClick(props.user.data)}>\n                <Image avatar src={props.user.data.avatar}/>\n            </div>\n            {userView && <UserView\n                isEdit={userView.id === props.user.data.id}\n                close={close}\n                setClose={setClose}\n                user={userView}\n                actions={props.actions}\n                onLogOut={onLogOut}\n            />\n            }\n        </div>\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n","import React from 'react';\nimport \"./styles.sass\"\nimport {Image} from \"semantic-ui-react\";\nimport {fromNow} from \"../../../helpers\";\nimport EllipsisText from \"react-ellipsis-text\";\n\nexport interface IChatElem {\n    id: number;\n    name: string;\n    date: string;\n    message: string;\n    onClick: () => void;\n}\n\nconst ChatElem = (props: any) => {\n    const {name, date, message, id, avatar, show = false} = props;\n    const text = message ? (message.message || (message.file ? <span className=\"file\">file</span> : \"\"))   : \"\";\n    return (\n        <div className={`chat-elem-wrap ${props.chatId === id ? 'toggled' : \"\"}`} onClick={() => props.onClick()}>\n            <div className=\"avatar\">\n                <Image avatar src={avatar}/>\n            </div>\n            <div className=\"info\">\n                <div className=\"name-wrap\">\n                    <div className=\"name\">{name}</div>\n                    <div className=\"date\">{date && fromNow(date)}</div>\n                </div>\n                {!show && typeof text === \"string\"? (<EllipsisText text={text} length={21}/>) : text}\n            </div>\n        </div>\n    )\n};\n\n\nexport default ChatElem;","import React, {useState} from 'react';\nimport {Form, Header, Icon, Input} from \"semantic-ui-react\";\nimport ChatElem from \"../ChatElem\";\nimport {IMessageView, IUser} from \"../../../model/IApp\";\n\n\nconst Search = (props: any) => {\n    const [value, setValue] = useState(\"\");\n    const onText = (user: IUser) => {\n\n        const chat = props.chatList.data.find( (elem: any) =>elem.user.id === user.id);\n        if(chat){\n            return props.actions.fetchMessages(chat.chat.id, user);\n        }\n        props.actions.newChat(user.id);\n    };\n\n    const getNotFound = () => (\n        <Header as='h4' icon textAlign={\"center\"}>\n            <Icon name='window close outline' size={\"mini\"}/>\n            Not found\n        </Header>\n    );\n    const getUserList = () => (\n        <>\n            {props.search.data.map((elem: IUser) =>\n                <ChatElem\n                    key={elem.id}\n                    id={elem.id}\n                    name={elem.username}\n                    avatar={elem.avatar}\n                    onClick={() => onText(elem)}\n                    show\n                />\n            )}\n        </>\n    );\n\n\n    return (\n        <>\n            <Form onSubmit={() => props.actions.search(value)}>\n                <Input\n                    loading={props.search.isFetching}\n                    value={value}\n                    icon='user'\n                    placeholder='Search...'\n                    iconPosition='left'\n                    onChange={(e, data) => setValue(data.value)}\n                />\n            </Form>\n            <>\n                {props.search.data && (props.search.data.length > 0 ? getUserList() : getNotFound())}\n            </>\n        </>\n    )\n};\n\n\nexport default Search;","import ChatElem from \"./ChatElem\";\nimport React, {useEffect} from \"react\";\nimport \"./styles.sass\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport IApp, {IChatList, IChatView, IMessageView} from \"../../model/IApp\";\nimport {Input, Divider, Header} from \"semantic-ui-react\";\nimport Search from \"./Search\";\n\n\ninterface IChatListProps {\n    actions: typeof actions;\n    chatList: IChatList;\n    chat: IChatView\n    search: any\n}\n\nconst ChatList = (props: IChatListProps) => {\n    useEffect(() => {\n        if (!props.chatList.data)\n            props.actions.fetchChats();\n    }, [props.actions]);\n\n    const onClick = (elem: IMessageView) => {\n        if (elem.chat.id !== props.chat.id) {\n            props.actions.fetchMessages(elem.chat.id, elem.user)\n        } else {\n            props.actions.closeChat();\n        }\n    };\n\n    return (\n        (<div className=\"chat-list-wrap\">\n                {props.search.isOpen ? <Search {...props}/> :\n                    <>\n                        {props.chatList.data && props.chatList.data.map(elem => elem && elem.message && (\n                            <ChatElem key={elem.chat.id} id={elem.chat.id}\n                                      chatId={props.chat.id}\n                                      name={elem.user.username}\n                                      date={elem.message.time}\n                                      message={elem.message}\n                                      avatar={elem.user.avatar}\n                                      onClick={() => onClick(elem)}/>\n                        ))}\n                    </>}\n            </div>\n        ))\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    chatList: state.chatList,\n    chat: state.chat,\n    search: state.search\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatList);","import SockJS from \"sockjs-client\";\nimport Stomp, {Client} from 'stompjs';\nimport * as actions from \"../../redux/actions\";\nimport * as url from '../../var/routers'\nimport IApp, {IMessage, IUser} from \"../../model/IApp\";\n\nlet stompClient = {} as Client;\n\n\n\nconst connect = (action: typeof actions, store: IApp) => {\n    if(stompClient.connected){\n        console.log(\"already connected\");\n        return;\n    }\n\n\n    const user = store.user.data as IUser;\n\n    stompClient = Stomp.over(new SockJS(url.SOCKET_URL));\n    stompClient.connect({}, () => {\n        console.log('Connected', store.user);\n\n\n\n        stompClient.subscribe(`/res/new-message/${user.id}`, ({ body }) => action.newMessage(JSON.parse(body)));\n\n        stompClient.subscribe(`/res/new-chat/${user.id}`, ({ body }: { body: string}) => {\n            const newChat: { chatId: number, user1: IUser, user2: IUser} = JSON.parse(body);\n\n            action.addChatToList(newChat.chatId, newChat.user1.id === user.id ? newChat.user1 : newChat.user2);\n\n        });\n\n        stompClient.subscribe(`/res/delete-message/${user.id}`, ({ body }: { body: string}) => {\n            const message: IMessage = JSON.parse(body);\n\n            console.log(message);\n\n            action.deleteMessageDone(message);\n            action.fetchChats();\n        })\n\n        stompClient.subscribe(`/res/edit-message/${user.id}`, ({ body }: { body: string}) => {\n            const message: IMessage = JSON.parse(body);\n\n            action.editMessageDone(message);\n            action.fetchChats();\n        })\n    });\n};\n\nconst send = (destination: string, headers?: {}, body?: string) => {\n    return stompClient.send(destination, headers, body);\n};\n\nexport default {\n    stompClient,\n    send,\n    connect\n};","import React, {useState} from 'react';\nimport {Button, Form, Header, Icon, Input, Message, Modal, TextArea} from 'semantic-ui-react'\nimport socket from \"../../../services/socket/socket\";\nimport IApp, {IFile} from \"../../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {uploadFile, humanFileSize} from \"../../../helpers\";\n\n\nexport const MessageInput = (props: any) => {\n    const [value, setValue] = useState<any>(\"\");\n    const [loading, setLoading] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [file, setFile] = useState<IFile | null>(null);\n\n    const handleUploadFile = async ({ target }: any) => {\n        setOpenModal(true);\n        setLoading(true);\n        uploadFile(target.files[0])\n            .then((file: IFile) => {\n                console.log(file);\n                setFile(file);\n                setLoading(false);\n            })\n            .catch(console.log);\n    };\n\n    const sendMessage = () => {\n        setOpenModal(false);\n        if (!value && !file)\n            return;\n        socket.send('/req/new-message', {}, JSON.stringify({\n            chatId: props.chat.id,\n            userId: props.user.data.id,\n            message: value,\n            file,\n        }));\n        setValue(\"\");\n    };\n\n\n    return <Form onSubmit={(e) => sendMessage()} className={\"input-wrapper\"}>\n        <Input placeholder='Type a message...' fluid value={value} onChange={(e, data) => setValue(data.value)}/>\n        <Button color=\"teal\" icon as=\"label\">\n            <Icon name=\"paperclip\"/>\n            <input name=\"image\" type=\"file\" onChange={handleUploadFile} hidden />\n        </Button>\n        <Modal\n            open={openModal}\n            basic\n            size='small'\n        >\n            <Modal.Content>\n                <Header as={'h3'} textAlign='center' className={\"white-header\"}>Message with attached</Header>\n                <Message icon >\n                    {loading ? <Icon name='circle notched' loading /> :\n                    <Icon name='file' />}\n                    <Message.Content>\n                        <Message.Header>{file && file.fileName}</Message.Header>\n                        {file && humanFileSize(file.size)}\n                    </Message.Content>\n                </Message>\n                <Form>\n                    <TextArea\n                        value={value}\n                        onChange={(e, data) => setValue(data.value)}\n                        style={{ minHeight: 200 }}\n                    />\n                </Form>\n            </Modal.Content>\n            <Modal.Actions className={\"action-btn\"}>\n                <Button color='green' inverted onClick={() => loading || sendMessage()}>\n                    <Icon name='save' disabled={loading}/> Save\n                </Button>\n                <Button color='blue' inverted onClick={() => setOpenModal(false)}>\n                    {/* TODOOOOOO remove file*/}\n                    <Icon name='cancel' /> Cancel\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    </Form>\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    user: state.user,\n    chat: state.chat\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MessageInput);","import {Button, Form, Header, Icon, Image, Message, Modal, TextArea} from \"semantic-ui-react\";\nimport React, {useState} from \"react\";\nimport IApp, {IMessage, IMessageView, IUser} from \"../../model/IApp\";\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport './styles.sass'\nimport {fromNow, humanFileSize} from \"../../helpers\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../redux/actions\";\n\ndayjs.extend(relativeTime);\n\n\nexport const MessageItem = (props: { user: IUser, message: IMessage, actions: typeof Actions }) => {\n    const {message, user, actions} = props;\n    const fromMe = message.user.id === user.id;\n\n    const [openDelete, setClose] = useState(false);\n    const [openEdit, setCloseEdit] = useState(false);\n    const [messageEdit, changeMessage] = useState<any>(message.message);\n\n    const onDelete = () => {\n        setClose(false);\n        actions.deleteMessage(message.id, message.chat.id);\n    };\n\n    const onEdit = () => {\n        setCloseEdit(false);\n        actions.editMessage(message.id, message.chat.id, messageEdit);\n    };\n    return (\n        <div className={`message-item ${openDelete ? \"to-delete\" : \"\"}`}\n             style={{alignItems: fromMe ? \"flex-end\" : \"flex-start\"}}>\n            <p className={fromMe ? \"from-me\" : \"from-them\"}>\n                {message.file && (\n                        message.file.fileType.indexOf('image') === -1 ? (\n                            <Message icon compact size={\"mini\"} info>\n                                <Icon name='file'\n                                      onClick={() => message.file && window.open(message.file.fileDownloadUri, '_blank')}/>\n                                <Message.Content>\n                                    <Message.Header>{message.file && message.file.fileName}</Message.Header>\n                                    {message.file && humanFileSize(message.file.size)}\n                                </Message.Content>\n                            </Message>) :\n                            <>\n                                <div style={{ marginBottom: 10 }}>\n                            <Image src={message.file.fileDownloadUri}\n                                   size='medium'\n                                   wrapped\n                                   as={'a'}\n                                   href={message.file.fileDownloadUri}\n                                   target='_blank'/>\n                                </div>\n                            </>\n\n                   )}\n                {message.message}\n                <span className=\"info-block\">\n                <span className={\"time\"}>{fromNow(message.time)}</span>\n                    {fromMe && (<span className={\"icons\"}>\n                    <Modal\n                        trigger={<Icon name={\"trash\"} size={\"small\"} onClick={() => setClose(true)}/>}\n                        open={openDelete}\n                        onClose={() => setClose(false)}\n                        basic\n                        size='small'\n                    >\n                    <Modal.Content>\n                      <Header as={'h3'} textAlign='center' className={\"white-header\"}>Are you sure you want to delete the message?</Header>\n                    </Modal.Content>\n                    <Modal.Actions className={\"action-btn\"}>\n                      <Button color='red' onClick={onDelete} inverted>\n                        <Icon name='trash'/> Delete\n                      </Button>\n                        <Button color='green' onClick={() => setClose(false)} inverted>\n                        <Icon name='cancel'/> Cancel\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                     <Modal\n                         trigger={<Icon name={\"edit\"} size={\"small\"} onClick={() => setCloseEdit(true)}/>}\n                         open={openEdit}\n                         onClose={() => setCloseEdit(false)}\n                         basic\n                         size='small'\n                     >\n                    <Modal.Content>\n                      <Header as={'h3'} textAlign='center' className={\"white-header\"}>Edit message</Header>\n                        <Form>\n                            <TextArea\n                                value={messageEdit}\n                                onChange={(e, data) => changeMessage(data.value)}\n                                style={{minHeight: 200}}\n                            />\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions className={\"action-btn\"}>\n                      <Button color='green' onClick={onEdit} inverted>\n                        <Icon name='edit'/> Edit\n                      </Button>\n                        <Button color='blue' onClick={() => setCloseEdit(false)} inverted>\n                        <Icon name='cancel'/> Cancel\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                </span>)}\n            </span>\n            </p>\n            <Image avatar src={message.user.avatar}/>\n        </div>\n    )\n};\n\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(Actions, dispatch)\n});\nexport default connect(\n    () => ({}),\n    mapDispatchToProps\n)(MessageItem);","import MessageItem from \"./MessageItem\";\nimport React from \"react\";\nimport {IChatList, IMessage, IMessageView, IUser} from \"../../model/IApp\";\n\n\nexport const MessageList = (props: { chat: IChatList, user: IUser}) => {\n    // @ts-ignore\n    return <> {(props.chat.data || []).map((elem: IMessage) => <MessageItem key={elem.id} message={elem} user={props.user}/>) }</>\n};\n\n\n\nexport default MessageList;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {Header, Loader, Comment} from 'semantic-ui-react'\nimport './styles.sass'\nimport MessageInput from \"../Message/Input\";\nimport MessageList from \"../Message/MessageList\";\n\n\nconst ChatPage = (props: any) => {\n\n\n    return (\n        <div className=\"chat-page-wrapper\">\n            {props.chat.isOpen ? (\n                props.chat.isFetching ?\n                    (<div className=\"loader-wrap\">\n                        <Loader active inline='centered'/>\n                    </div>) :\n                    (\n                        <>\n                            <div className=\"messages-wrap\">\n                                <MessageList\n                                    chat={props.chat}\n                                    user={props.user.data}/>\n                            </div>\n                            <div className=\"input-wrap\">\n                                <MessageInput/>\n                            </div>\n                        </>\n                    )\n            ) : (\n                <div style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", height: \"100%\" }}>\n                    <Header as={'h3'} textAlign={\"center\"}>\n                        Select chat to start texting\n                    </Header>\n                </div>\n            )}\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatPage);\n","import React, {useEffect} from 'react';\nimport './styles.sass';\nimport Header from \"../Header\";\nimport ChatList from \"../ChatList\";\nimport ChatPage from \"../ChatPage\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport socket from '../../services/socket/socket';\nimport {Dimmer, Loader} from \"semantic-ui-react\";\n\nconst Chat = (props: any) => {\n    useEffect(() => {\n        if(props.actions && props.user.data) {\n            console.log('init');\n            socket.connect(props.actions, props.state)\n        }\n    }, [props.actions, props.user]);\n\n    useEffect(() => {\n        props.actions.fetchUser();\n    }, [props.actions]);\n    return (\n        props.user.data && !props.user.isFetching ? (\n        <div className=\"main-wrapper\">\n            <div style={ {background: \"white\"} }>\n                    <Header />\n                <div className=\"content-wrap\">\n                    {props.showPanel &&\n                    <ChatList {...props} />}\n                    <ChatPage />\n                </div>\n            </div>\n        </div>) : (\n            <Dimmer active inverted>\n                <Loader inverted />\n            </Dimmer>\n        )\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    state,\n    showPanel: state.showPanel,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Chat);","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst LoginForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.loginUser(login, password);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"30%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Login to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                            error={props.loginPage && !!props.loginPage.error}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.loginPage && props.loginPage.isFetching}>\n                            Login\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.loginPage && !!props.loginPage.error && (<Message\n                    error\n                    content={props.loginPage.error}\n                />)}\n                <Message>\n                    New to us? <a href=\"#\" onClick={() => props.actions.changePage(\"reg\")}>Sign Up</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    loginPage: state.loginPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginForm);","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment, Image } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport ImagePicker from 'react-image-picker'\nimport 'react-image-picker/dist/index.css'\nimport { getAvatars} from \"../../helpers\";\n\nconst imageList = [...getAvatars(14)];\n\nconst RegForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.regUser(login, password, avatar);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"20%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Sign up to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                        />\n                        <Header as='h4' textAlign='left'>\n                            Choose a photo\n                        </Header>\n                        <ImagePicker\n                            images={imageList.map((image, i) => ({src: image, value: i}))}\n                            onPick={(data: any) => setAvatar(data.src)}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.regPage && props.regPage.isFetching}>\n                            Sign up\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.regPage && !!props.regPage.error && (<Message\n                    error\n                    content={props.regPage.error}\n                />)}\n                <Message>\n                    Already has account? <a href='#'  onClick={() => props.actions.changePage(\"login\")}>Login</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    regPage: state.regPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegForm);","import './styles.sass'\n\n\nconst initParticles = () => {\n    //@ts-ignore\n    // eslint-disable-next-line no-undef\n    particlesJS('particles-js',\n\n        {\n            \"particles\": {\n                \"number\": {\n                    \"value\": 80,\n                    \"density\": {\n                        \"enable\": true,\n                        \"value_area\": 800\n                    }\n                },\n                \"color\": {\n                    \"value\": \"#ffffff\"\n                },\n                \"shape\": {\n                    \"type\": \"circle\",\n                    \"stroke\": {\n                        \"width\": 0,\n                        \"color\": \"#000000\"\n                    },\n                    \"polygon\": {\n                        \"nb_sides\": 5\n                    },\n                    \"image\": {\n                        \"src\": \"img/github.svg\",\n                        \"width\": 100,\n                        \"height\": 100\n                    }\n                },\n                \"opacity\": {\n                    \"value\": 0.5,\n                    \"random\": false,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 1,\n                        \"opacity_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"size\": {\n                    \"value\": 5,\n                    \"random\": true,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 40,\n                        \"size_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"line_linked\": {\n                    \"enable\": true,\n                    \"distance\": 150,\n                    \"color\": \"#ffffff\",\n                    \"opacity\": 0.4,\n                    \"width\": 1\n                },\n                \"move\": {\n                    \"enable\": true,\n                    \"speed\": 2,\n                    \"direction\": \"none\",\n                    \"random\": false,\n                    \"straight\": false,\n                    \"out_mode\": \"out\",\n                    \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 1200\n                    }\n                }\n            },\n            \"interactivity\": {\n                \"detect_on\": \"canvas\",\n                \"events\": {\n                    \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                    },\n                    \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"push\"\n                    },\n                    \"resize\": true\n                },\n                \"modes\": {\n                    \"grab\": {\n                        \"distance\": 400,\n                        \"line_linked\": {\n                            \"opacity\": 1\n                        }\n                    },\n                    \"bubble\": {\n                        \"distance\": 400,\n                        \"size\": 40,\n                        \"duration\": 2,\n                        \"opacity\": 8,\n                        \"speed\": 3\n                    },\n                    \"repulse\": {\n                        \"distance\": 200\n                    },\n                    \"push\": {\n                        \"particles_nb\": 4\n                    },\n                    \"remove\": {\n                        \"particles_nb\": 2\n                    }\n                }\n            },\n            \"retina_detect\": true,\n            \"config_demo\": {\n                \"hide_card\": false,\n                \"background_color\": \"#b61924\",\n                \"background_image\": \"\",\n                \"background_position\": \"50% 50%\",\n                \"background_repeat\": \"no-repeat\",\n                \"background_size\": \"cover\"\n            }\n        }\n\n    );\n};\nexport default initParticles;","import React, {useEffect} from 'react';\nimport LoginForm from \"./LoginForm\";\nimport RegForm from \"./RegForm\";\nimport initParticles from \"./Particles/particles\";\nimport './Particles/styles.sass'\n\n\nconst LoginPage = (props: any) => {\n    useEffect(() => {initParticles()}, [])\n\n    return (\n        <>\n            <div id=\"particles-js\" />\n            {props.page === \"login\" ? <LoginForm/> : <RegForm/>}\n        </>\n    )\n};\n\n\nexport default LoginPage;","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport 'semantic-ui-css/semantic.min.css'\nimport LoginPage from \"./components/LoginPage\";\nimport IApp from \"./model/IApp\";\nimport {connect} from \"react-redux\";\n\nconst App: React.FC = (props: any) => {\n    switch (props.page) {\n        case \"login\":\n        case 'reg':\n            return <LoginPage page={props.page}/>;\n        default:\n            return (\n                <div className=\"App\">\n                    <Chat/>\n                </div>\n            )\n    }\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    page: state.page\n});\n\nexport default connect(\n    mapStateToProps,\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {fetchHeaderConfig} from \"./index\";\n\nconst request: typeof fetch = async (input: RequestInfo, init?: RequestInit | undefined) => {\n    let headers: HeadersInit = init && init.headers ? {...fetchHeaderConfig().headers, ...init.headers } : fetchHeaderConfig().headers as HeadersInit;\n    if(init && init.body) {\n        headers = new Headers({'Content-Type': 'application/json', ...headers});\n    }\n\n    let promise = await fetch(input, { ...(init || {}), headers});\n    console.log(promise)\n\n    if(!promise.ok){\n        console.error(promise);\n\n        const message = await promise.json();\n\n        console.log(message);\n\n        if(message.message === \"Token has expired\") {\n            localStorage.removeItem(\"token\");\n\n            return window.location.reload();\n        }\n        // @ts-ignore\n        throw new Error(message.message);\n    }\n    return await promise.json();\n};\nexport default request;","import {takeLatest, put} from \"redux-saga/effects\";\nimport * as types from \"./constants\";\nimport * as url from \"../var/routers\";\nimport {fetchHeaderConfig} from \"../helpers\";\nimport axios from 'axios';\nimport request from \"../helpers/webApi\";\nimport socket from \"../services/socket/socket\";\n\nfunction* fetchChats(action: any) {\n    try {\n        const res = yield request(url.CHAT_LIST);\n        yield put({type: types.FETCH_CHATS_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* fetchMessages(action: any) {\n    try {\n        const res = yield request(url.CHAT_MESSAGES + action.payload.id, {headers: fetchHeaderConfig().headers});\n        yield put({type: types.FETCH_MESSAGES_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* loginUser(action: any) {\n\n    try {\n        const res = yield request(url.LOGIN, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: action.payload.login,\n                password: action.payload.password\n            }),\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            }\n        });\n        localStorage.setItem('token', res.token);\n        yield put({\n            type: types.CHANGE_PAGE,\n            payload: \"chat\"\n        })\n    } catch (e) {\n        yield put({\n            type: types.LOGIN_FAIL,\n            payload: { error: e.message }\n        });\n        console.error(e);\n    }\n}\n\nfunction* fetchUser(action: any) {\n    try {\n        const res = yield request(url.USER, {\n            method: \"GET\",\n            headers: fetchHeaderConfig().headers\n        });\n\n        yield put({\n            type: types.FETCH_USER_DONE,\n            payload: {\n                user: res\n            }\n        })\n    } catch (e) {\n        console.error(e);\n        localStorage.removeItem('token');\n        yield put({\n            type: types.REMOVE_STORE\n        })\n    }\n}\n\nfunction* regUser(action: any) {\n    const {login, password, avatar} = action.payload;\n    try {\n        // TODO doesn't work with fetch, even if hard-code correct content-type\n        const res = yield axios({\n            method: \"POST\",\n            url: url.REG,\n            data: {\n                username: login,\n                password,\n                avatar\n            }\n        });\n        yield put({\n            type: types.LOGIN,\n            payload: {\n                login, password\n            }\n        })\n    } catch (error) {\n        yield put({\n            type: types.REG_FAIL,\n            payload: {error: error.message}\n        });\n        console.error(error);\n    }\n}\n\nfunction* search(action: any) {\n    try {\n        const res = yield request(url.SEARCH + `?search=${action.payload.search}`);\n        yield put({\n            type: types.SEARCH_DONE,\n            payload: res\n        })\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* newChat(action: any) {\n    try{\n        const res = yield request(url.NEW_CHAT, {\n            method: \"PUT\",\n            body: JSON.stringify({\n                userId: action.payload.userId\n            })\n        });\n        yield put({\n            type: types.CREATE_CHAT_DONE,\n            payload: {\n                chatId: res.chatId\n            }\n        })\n    }catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* deleteMessage(action: any) {\n    try {\n        yield request(url.DELETE_MESSAGE + `/${action.payload.messageId}`, {\n            method: \"DELETE\",\n            body: JSON.stringify({\n                chatId: action.payload.chatId\n            })\n        });\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* editMessage(action: any) {\n    try {\n        yield request(url.DELETE_MESSAGE + `/${action.payload.messageId}`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                chatId: action.payload.chatId,\n                message: action.payload.message\n            })\n        });\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* updateAvatar(action: any) {\n    try{\n        const res = yield request(url.UPDATE_AVATAR, {\n            method: \"POST\",\n            body: JSON.stringify({\n                src: action.payload.src\n            })\n        });\n        if(res.src){\n            yield put({\n                type: types.UPDATE_AVATAR_DONE,\n                payload: {\n                    src: res.src\n                }\n            })\n        }\n    }catch (e) {\n        console.log(e);\n    }\n}\n\nexport function* watchSaga() {\n    yield takeLatest(types.FETCH_CHATS, fetchChats);\n    yield takeLatest(types.FETCH_MESSAGES, fetchMessages);\n    yield takeLatest(types.LOGIN, loginUser);\n    yield takeLatest(types.FETCH_USER, fetchUser);\n    yield takeLatest(types.REG, regUser);\n    yield takeLatest(types.SEARCH, search);\n    yield takeLatest(types.CREATE_CHAT, newChat);\n    yield takeLatest(types.DELETE_MESSAGE, deleteMessage);\n    yield takeLatest(types.EDIT_MESSAGE, editMessage);\n    yield takeLatest(types.UPDATE_AVATAR, updateAvatar);\n}","import IApp, {IMessage} from './../model/IApp'\nimport IAction from './../model/IAction'\nimport * as types from './constants';\nimport {sortChatList} from \"../helpers\";\n\nconst initialState: IApp = {\n    chatList: {\n        data: null,\n        isFetching: false\n    },\n    user: {\n        isFetching: false,\n        data: null\n    },\n    chat: {\n        id: null,\n        isFetching: false,\n        isOpen: false,\n        data: [],\n        user: null\n    },\n    showPanel: true,\n    page: localStorage.getItem('token') && localStorage.getItem('token') !== \"undefined\" ? \"chat\" : \"login\",\n    search: {\n        isFetching: false,\n        isOpen: false\n    }\n};\n\nexport function reducer(state: IApp = initialState, action: IAction): IApp {\n    let data, message: IMessage, chatList, messageList;\n    switch (action.type) {\n        case types.FETCH_CHATS:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    isFetching: true\n                }\n            };\n        case types.TOGGLE_PANEL:\n            return {\n                ...state,\n                showPanel: !state.showPanel\n            };\n        case types.TOGGLE_SEARCH:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isOpen: !state.search.isOpen\n                },\n                showPanel: true\n            };\n        case types.FETCH_CHATS_DONE:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data: sortChatList(action.payload),\n                    isFetching: false,\n                }\n            };\n        case types.FETCH_MESSAGES:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.id,\n                    isFetching: true,\n                    isOpen: true,\n                    user: action.payload.user\n                }\n            };\n        case types.FETCH_MESSAGES_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: action.payload,\n                    isFetching: false\n                }\n            };\n        case types.ADD_NEW_MESSAGE:\n            message = action.payload.message;\n            data = ([...(state.chatList.data || [])]).map(elem => {\n                if (elem.chat.id === message.chat.id) {\n                    elem.message = message;\n                }\n                return elem;\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    // @ts-ignore\n                    data: sortChatList(data)\n                },\n                chat: {\n                    ...state.chat,\n                    data: state.chat.id === message.chat.id ? [...(state.chat.data || []), action.payload.message] : state.chat.data\n                }\n            };\n        case types.CHANGE_PAGE:\n            return {\n                ...state,\n                page: action.payload\n            };\n        case types.REMOVE_STORE:\n            return {\n                ...initialState,\n                page: \"login\"\n            };\n        case types.FETCH_USER:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: true\n                }\n            };\n        case types.FETCH_USER_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: false,\n                    data: action.payload.user\n                }\n            };\n        case types.LOGIN:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.LOGIN_FAIL:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.REG:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.REG_FAIL:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.SEARCH:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: true\n                }\n            };\n        case types.SEARCH_DONE:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: false,\n                    data: action.payload\n                }\n            };\n        case types.CREATE_CHAT:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    isFetching: true,\n                    isOpen: true,\n                    user: action.payload.user\n                }\n            };\n        case types.CREATE_CHAT_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.chatId,\n                    isFetching: false,\n                    data: []\n                }\n            };\n        case types.ADD_CHAT_TO_LIST:\n            data = [...(state.chatList.data || [])];\n            data.push({\n                chat: {id: action.payload.chatId},\n                message: null as unknown as IMessage,\n                user: action.payload.user\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    // @ts-ignore\n                    data: sortChatList(data)\n                }\n            };\n        case types.DELETE_MESSAGE_DONE:\n            message = action.payload.message;\n            if (message.chat.id !== state.chat.id)\n                return state;\n            messageList = [...(state.chat.data || [])]\n                .map(m => m.id === message.id ? undefined : m)\n                .filter(m => m);\n\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: messageList as IMessage[]\n                }\n            };\n        case types.EDIT_MESSAGE_DONE:\n            message = action.payload.message;\n            if (message.chat.id !== state.chat.id)\n                return state;\n            messageList = [...(state.chat.data || [])]\n                .map(m => m.id === message.id ? message : m);\n\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: messageList as IMessage[]\n                }\n            };\n        case types.CLOSE_CHAT:\n            return {\n                ...state,\n                chat: initialState.chat\n            };\n        case types.UPDATE_AVATAR_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    // @ts-ignore\n                    data: {\n                        ...(state.user.data || {}),\n                        avatar: action.payload.src\n                    }\n                }\n            }\n        default:\n            return state;\n    }\n} ","import { createStore, applyMiddleware } from \"redux\";\nimport { watchSaga } from \"./redux/saga\";\nimport { reducer } from \"./redux/reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = () => {\n  const middlewareSaga = createSagaMiddleware();\n  const store = createStore(reducer, composeWithDevTools(\n    applyMiddleware(middlewareSaga)\n  ));\n  middlewareSaga.run(watchSaga);\n  return store;\n};\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./configStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}