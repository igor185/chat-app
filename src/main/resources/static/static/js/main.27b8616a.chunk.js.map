{"version":3,"sources":["redux/constants.ts","redux/actions.ts","var/routers.ts","helpers/index.ts","components/Cropper/index.jsx","components/UserView/index.tsx","components/Message/Input/Typing.jsx","components/AvatarWrapper/index.tsx","components/Header/index.tsx","components/ChatList/ChatElem/index.tsx","components/ChatList/Search/index.tsx","components/ChatList/index.tsx","services/socket/socket.ts","components/Message/Input/index.tsx","components/Message/MessageItem.tsx","helpers/autoscroll.jsx","components/Message/MessageList.tsx","components/ChatPage/index.tsx","components/Chat/index.tsx","components/LoginPage/LoginForm.tsx","components/LoginPage/RegForm.tsx","components/LoginPage/Particles/particles.tsx","components/LoginPage/index.tsx","helpers/webApi.tsx","components/ConfirmPage/index.tsx","App.tsx","serviceWorker.ts","redux/saga.ts","redux/reducer.ts","configStore.ts","index.tsx"],"names":["FETCH_CHATS","FETCH_CHATS_DONE","FETCH_MESSAGES","FETCH_MESSAGES_DONE","CLOSE_CHAT","TOGGLE_PANEL","TOGGLE_SEARCH","ADD_NEW_MESSAGE","LOGIN","LOGIN_FAIL","REG","REG_FAIL","CHANGE_PAGE","REMOVE_STORE","FETCH_USER","FETCH_USER_DONE","SEARCH","SEARCH_DONE","CREATE_CHAT","CREATE_CHAT_DONE","ADD_CHAT_TO_LIST","DELETE_MESSAGE","DELETE_MESSAGE_DONE","EDIT_MESSAGE","EDIT_MESSAGE_DONE","UPDATE_AVATAR","UPDATE_AVATAR_DONE","UPDATE_ABOUT","UPDATE_ABOUT_DONE","UPDATE_EMAIL","UPDATE_EMAIL_DONE","SEND_CONFIRM_MESSAGE","SEND_OPTIONS","SEND_OPTIONS_DONE","SEND_EMAIL","CLEAR_LOGIN","CLEAR_REG","TYPING_MESSAGE","NEW_TYPING_MESSAGE","SET_TYPING_MESSAGE","SET_ONLINE_USER","SET_READ_MESSAGE","READ_MESSAGE","INCREASE_COUNT","clearStore","type","types","fetchChats","fetchMessages","chatId","user","payload","id","closeChat","togglePanel","newMessage","message","loginUser","login","password","regUser","avatar","changePage","page","fetchUser","search","toggleSearch","newChat","userId","addChatToList","setChat","deleteMessage","messageId","deleteMessageDone","editMessage","editMessageDone","updateAvatar","src","editAbout","editEmail","email","confirmEmail","sendOptions","options","sendEmail","clearLogin","clearReg","typingMessage","newTypingMessage","setTyping","isTyping","timeTyping","onlineUser","status","setReadMessage","readChat","increaseCount","prefix","SOCKET_URL","concat","CHAT_LIST","CHAT_MESSAGES","USER","NEW_CHAT","UPLOAD_FILE","CONFIRM_EMAIL","CONFIRM_EMAIL_DONE","dayjs","extend","relativeTime","fetchHeaderConfig","headers","Authorization","localStorage","getItem","sortChatList","data","Object","toConsumableArray","sort","el1","el2","time1","time","uploadFile","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","file","height","formData","res","wrap","_context","prev","next","FormData","append","fetch","url","method","body","sent","json","abrupt","stop","_x","_x2","apply","this","arguments","humanFileSize","bytes","si","length","undefined","thresh","Math","abs","units","u","toFixed","getImageHeight","Promise","req","fr","FileReader","onload","image","Image","result","readAsDataURL","e","Cropper","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","preview","onCrop","bind","assertThisInitialized","onClose","setState","_this2","_this$state$preview$s","split","_this$state$preview$s2","slicedToArray","info","_info$split","encoding","dataurl","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLtoFile","then","fileDownloadUri","catch","console","log","_this3","react_default","createElement","Fragment","className","react_avatar_default","width","onBeforeFileLoad","alt","style","display","justifyContent","Button","color","onClick","onSave","React","Component","connect","userStore","dispatch","actions","bindActionCreators","_useState","useState","_useState2","crop","setCropper","_useState3","_useState4","setEditAbout","_useState5","about","_useState6","editValue","setEditValue","closeEditAbout","_useState7","objectSpread2","_useState8","changeOptions","setOption","name","value","defineProperty","_useState9","_useState10","emailAbout","setEmailAbout","_useState11","_useState12","emailValue","setEmailValue","closeEmailAbout","useEffect","Modal","open","close","closeOnDimmerClick","setClose","centered","Header","as","username","isEdit","onLogOut","index_es","icon","faSignOutAlt","Content","components_Cropper","Image_Image","wrapped","size","circular","Description","Header_Header","Icon","NotificationManager","error","TextArea","onChange","minHeight","confirm","Popup","content","trigger","marginLeft","Input","Checkbox","toggle","checked","label","eachMessage","sendMessage","isEqual","Typing","AvatarWrapper","online","unread","chat","userView","setUserView","faBars","faSearch","react_timeago_lib_default","date","components_UserView","removeItem","ChatElem","_props$show","show","typing","setTime","timer","setTimer","clearTimeout","newTimer","setTimeout","text","react_ellipsis_text_default","Search","setValue","Form","onSubmit","trim","loading","isFetching","placeholder","iconPosition","map","elem","ChatList_ChatElem","key","chatList","find","onText","textAlign","isOpen","ChatList_Search","count","stompClient","socket","send","destination","action","store","connected","Stomp","over","SockJS","subscribe","JSON","parse","_ref2","user1","user2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","setLoading","openModal","setOpenModal","setFile","handleUploadFile","target","files","indexOf","t0","stringify","fluid","hidden","basic","Message","fileName","Actions","inverted","disabled","fromMe","openDelete","openEdit","setCloseEdit","messageEdit","changeMessage","alignItems","fileType","compact","window","marginBottom","href","whiteSpace","ReactHtmlParser","isScrolledUp","el","scrollTop","autoscroll","_ref$isScrolledDownTh","isScrolledDownThreshold","_React$PureComponent","_temp","shouldScroll","_isScrolledDown","_el","_scrollHeight","_isScrolledUp","inherits","createClass","clientHeight","scrollHeight","scrollDown","threshold","onScrolledTop","onScrolled","scrollDownIfNeeded","nextProps","nextState","difference","amount","_this$props","rest","objectWithoutProperties","assign","ref","ReactDOM","findDOMNode","onScroll","handleScroll","PureComponent","prevProps","prevState","snapshot","i","Message_MessageItem","Loader","active","inline","Message_MessageList","Message_Input","flexDirection","showPanel","background","components_Header","components_ChatList","components_ChatPage","Dimmer","loginPage","setLogin","setPassword","Grid","position","top","left","verticalAlign","Column","Segment","stacked","event","imageList","randomProfile","getAvatars","regPage","setAvatar","react_image_picker_dist_default","images","onPick","initParticles","particlesJS","particles","number","density","enable","value_area","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","config_demo","hide_card","background_color","background_image","background_position","background_repeat","background_size","LoginPage","LoginPage_LoginForm","LoginPage_RegForm","request","input","init","promise","Headers","Content-Type","ok","location","reload","Error","ConfirmPage","setLoad","setError","token","err","Subheader","replace","components_LoginPage","components_Chat","lib","_window$location$path","pathname","_window$location$path2","toArray","slice","components_ConfirmPage","join","Boolean","hostname","updateAbout","updateEmail","confirmMessage","typeMessage","newTyping","readMessage","watchSaga","put","_marked","_context2","_marked2","_context3","X-Requested-With","setItem","_marked3","_context4","_marked4","_action$payload","_context5","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","select","Date","_marked17","_context18","_marked18","_context19","takeLatest","_marked19","initialState","reducer","messageList","m","filter","index","findIndex","middlewareSaga","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27b8616a.chunk.js","sourcesContent":["export const FETCH_CHATS = \"FETCH_CHATS\";\nexport const FETCH_CHATS_DONE = \"FETCH_CHATS_DONE\";\n\nexport const FETCH_MESSAGES = \"FETCH_MESSAGES\";\nexport const FETCH_MESSAGES_DONE = \"FETCH_MESSAGES_DONE\";\nexport const CLOSE_CHAT = \"CLOSE_CHAT\";\n\nexport const TOGGLE_PANEL = \"TOGGLE_PANEL\";\nexport const TOGGLE_SEARCH = \"TOGGLE_SEARCH\";\n\nexport const ADD_NEW_MESSAGE = \"ADD_NEW_MESSAGE\";\n\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGIN_DONE = \"LOGIN_DONE\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\n\nexport const REG = \"REG\";\nexport const REG_DONE = \"REG_DONE\";\nexport const REG_FAIL = \"REG_FAIL\";\n\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const REMOVE_STORE = \"REMOVE_STORE\";\n\nexport const FETCH_USER = \"FETCH_USER\";\nexport const FETCH_USER_DONE = \"FETCH_USER_DONE\";\nexport const FETCH_USER_FAIL = \"FETCH_USER_FAIL\";\n\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_DONE = \"SEARCH_DONE\";\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\n\nexport const CREATE_CHAT = \"CREATE_CHAT\";\nexport const CREATE_CHAT_DONE = \"CREATE_CHAT_DONE\";\nexport const CREATE_CHAT_FAIL = \"CREATE_CHAT_FAIL\";\n\nexport const ADD_CHAT_TO_LIST = \"ADD_CHAT_TO_LIST\";\n\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const DELETE_MESSAGE_DONE = \"DELETE_MESSAGE_DONE\";\n\nexport const EDIT_MESSAGE = \"EDIT_MESSAGE\";\nexport const EDIT_MESSAGE_DONE = \"EDIT_MESSAGE_DONE\";\n\nexport const UPDATE_AVATAR = \"UPDATE_AVATAR\";\nexport const UPDATE_AVATAR_DONE = \"UPDATE_AVATAR_DONE\";\n\nexport const UPDATE_ABOUT = \"UPDATE_ABOUT\";\nexport const UPDATE_ABOUT_DONE = \"UPDATE_ABOUT_DONE\";\n\nexport const UPDATE_EMAIL = \"UPDATE_EMAIL\";\nexport const UPDATE_EMAIL_DONE = \"UPDATE_EMAIL_DONE\";\n\nexport const SEND_CONFIRM_MESSAGE = \"SEND_CONFIRM_MESSAGE\";\n\nexport const SEND_OPTIONS = \"SEND_OPTIONS\";\nexport const SEND_OPTIONS_DONE = \"SEND_OPTIONS_DONE\";\n\nexport const SEND_EMAIL = \"SEND_EMAIL\";\n\n\nexport const CLEAR_LOGIN = \"CLEAR_LOGIN\";\nexport const CLEAR_REG = \"CLEAR_REG\";\n\n\nexport const TYPING_MESSAGE = \"TYPING_MESSAGE\";\nexport const NEW_TYPING_MESSAGE = \"NEW_TYPING_MESSAGE\";\nexport const SET_TYPING_MESSAGE = \"SET_TYPING_MESSAGE\";\n\nexport const SET_ONLINE_USER = \"SET_ONLINE_USER\";\n\nexport const SET_READ_MESSAGE = \"SET_READ_MESSAGE\";\nexport const READ_MESSAGE = \"READ_MESSAGE\";\nexport const INCREASE_COUNT = \"INCREASE_COUNT\";","import * as types from \"./constants\";\nimport {IMessage, IOptions, IUser} from \"../model/IApp\";\n\nexport const clearStore = () => ({\n  type: types.REMOVE_STORE\n});\n\n\nexport const fetchChats = () => ({\n    type: types.FETCH_CHATS\n});\n\nexport const fetchMessages = (chatId: number, user: IUser) => ({\n    type: types.FETCH_MESSAGES,\n    payload: {\n        id: chatId,\n        user\n    }\n});\n\nexport const closeChat = () => ({\n    type: types.CLOSE_CHAT\n});\n\nexport const togglePanel = () => ({\n    type: types.TOGGLE_PANEL\n});\n\nexport const newMessage = (message: IMessage) => {\n    return {\n        type: types.ADD_NEW_MESSAGE,\n        payload: {\n            message\n        }\n    }\n};\n\nexport const loginUser = (login: string, password: string) => ({\n    type: types.LOGIN,\n    payload: {\n        login,\n        password\n    }\n});\n\nexport const regUser = (login: string, password: string, avatar: string) => ({\n    type: types.REG,\n    payload: {\n        login,\n        password,\n        avatar\n    }\n});\n\nexport const changePage = (page: string) => ({\n    type: types.CHANGE_PAGE,\n    payload: page\n});\n\nexport const fetchUser = () => ({\n    type: types.FETCH_USER\n});\n\nexport const search = (search: string) => ({\n   type: types.SEARCH,\n   payload: { search }\n});\n\nexport const toggleSearch = () => ({\n    type: types.TOGGLE_SEARCH\n});\n\nexport const newChat = (userId: number, user: IUser) => ({\n    type: types.CREATE_CHAT,\n    payload: {\n        userId,\n        user\n    }\n});\n\nexport const addChatToList = (chatId: number, user: IUser, setChat: boolean) => ({\n    type: types.ADD_CHAT_TO_LIST,\n    payload: {\n        chatId,\n        user,\n        setChat\n    }\n});\n\nexport const deleteMessage = (messageId: number, chatId: number) => ({\n    type: types.DELETE_MESSAGE,\n    payload: {\n        messageId,\n        chatId\n    }\n});\n\nexport const deleteMessageDone = (message: IMessage) => ({\n    type: types.DELETE_MESSAGE_DONE,\n    payload: {\n        message\n    }\n});\n\nexport const editMessage = (messageId: number, chatId: number, message: string) => ({\n    type: types.EDIT_MESSAGE,\n    payload: {\n        messageId,\n        chatId,\n        message\n    }\n});\n\nexport const editMessageDone = (message: IMessage) => ({\n    type: types.EDIT_MESSAGE_DONE,\n    payload: {\n        message\n    }\n});\n\nexport const updateAvatar = (src: string) => ({\n    type: types.UPDATE_AVATAR,\n    payload: {\n        src\n    }\n});\n\nexport const editAbout = (message: string) => ({\n    type: types.UPDATE_ABOUT,\n    payload: {\n        message\n    }\n});\n\nexport const editEmail = (email: string) => ({\n    type: types.UPDATE_EMAIL,\n    payload: {\n        email\n    }\n});\n\nexport const confirmEmail = (email: string) => ({\n    type: types.SEND_CONFIRM_MESSAGE,\n    payload: {\n        email\n    }\n});\n\nexport const sendOptions = (options: IOptions) => ({\n    type: types.SEND_OPTIONS,\n    payload: {\n        options\n    }\n});\n\nexport const sendEmail = (message: IMessage) => ({\n    type: types.SEND_EMAIL,\n    payload: {\n        message\n    }\n});\n\nexport const clearLogin = () => ({ type: types.CLEAR_LOGIN });\n\nexport const clearReg = () => ({ type: types.CLEAR_REG });\n\n\nexport const typingMessage = (chatId: number, userId: number) => ({\n    type: types.TYPING_MESSAGE,\n    payload: {\n        chatId,\n        userId\n    }\n});\n\nexport const newTypingMessage = (chatId: number) => ({\n    type: types.NEW_TYPING_MESSAGE,\n    payload: {\n        chatId\n    }\n});\n\nexport const setTyping = (chatId: number, isTyping: boolean, timeTyping: any) => ({\n    type: types.SET_TYPING_MESSAGE,\n    payload: {\n        chatId,\n        isTyping,\n        timeTyping\n    }\n})\n\nexport const onlineUser = (userId: number, status: boolean) => ({\n    type: types.SET_ONLINE_USER,\n    payload: {\n        userId,\n        status\n    }\n});\n\nexport const setReadMessage = (chatId: number) => ({\n    type: types.SET_READ_MESSAGE,\n    payload: {\n        chatId\n    }\n});\n\nexport const readChat = (chatId: number, userId: number) => ({\n    type: types.READ_MESSAGE,\n    payload: {\n        userId,\n        chatId\n    }\n});\n\nexport const increaseCount = (chatId: number) => ({\n    type: types.INCREASE_COUNT,\n    payload: {\n        chatId\n    }\n})","const prefix = \"https://igor-babin-chat-java.herokuapp.com\";\n// const prefix = \"http://localhost:8080\";\n\n\nexport const SOCKET_URL = `${prefix}/ws`;\nexport const CHAT_LIST = `${prefix}/api/chats`;\nexport const CHAT_MESSAGES = `${prefix}/api/chat/`;\nexport const LOGIN = `${prefix}/api/auth/login`;\nexport const USER = `${prefix}/api/me`;\nexport const REG = `${prefix}/req`;\nexport const SEARCH = `${prefix}/api/users`;\nexport const NEW_CHAT = `${prefix}/api/chat`;\nexport const DELETE_MESSAGE = `${prefix}/api/message`;\nexport const UPLOAD_FILE = `${prefix}/api/uploadFile`;\nexport const UPDATE_AVATAR = `${prefix}/api/user/avatar`;\nexport const UPDATE_ABOUT = `${prefix}/api/user/about`;\nexport const UPDATE_EMAIL = `${prefix}/api/user/email`;\nexport const CONFIRM_EMAIL = `${prefix}/api/email/confirm`;\nexport const CONFIRM_EMAIL_DONE = `${prefix}/api/user/confirm`;\nexport const SEND_OPTIONS = `${prefix}/api/user/options`;\nexport const SEND_EMAIL = `${prefix}/api/email/send-message`;","import randomProfile from 'random-profile-generator';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport {IFile, IMessageView} from \"../model/IApp\";\nimport * as url from '../var/routers';\n\ndayjs.extend(relativeTime);\n\n\nexport const fetchHeaderConfig = () => ({\n    headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n});\n\nexport const getAvatars = (amount: number) => {\n    let res = [];\n    for (let i = 0; i < amount; i++)\n        res[i] = randomProfile.avatar();\n    return res;\n};\n\nexport const fromNow = (date: string | number) => dayjs(date).fromNow();\n\nexport const sortChatList = (data: IMessageView[]) => {\n    const res = [...(data || [])];\n\n    return res.sort((el1, el2) => {\n        const time1: number = el1.message ? el1.message.time : 0;\n        const time2: number = el2.message ? el2.message.time : 0;\n        return time2 - time1;\n    })\n};\n\nexport const uploadFile = async (file: any, height: number): Promise<IFile> => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('height', \"\" + height);\n\n    let res = await fetch(url.UPLOAD_FILE, {\n        headers: {Authorization: `Bearer ${localStorage.getItem('token')}`},\n        method: \"POST\",\n        body: formData\n    });\n    res = await res.json();\n    return res as unknown as IFile;\n};\n\n\nexport const humanFileSize = (bytes: number, si: boolean = false) => {\n    const thresh = si ? 1000 : 1024;\n    if (Math.abs(bytes) < thresh) {\n        return bytes + ' B';\n    }\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    do {\n        bytes /= thresh;\n        ++u;\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n    return bytes.toFixed(1) + ' ' + units[u];\n};\n\nexport const dataURLtoFile = (dataurl: any, filename: any) => {\n    let arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n    while(n--){\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, {type:mime});\n};\n\nexport const getImageHeight = (file: any) => new Promise<number>((res, req) => {\n    try {\n        const fr = new FileReader();\n        fr.onload = function () {\n            const image = new Image();\n            // @ts-ignore\n            image.src = fr.result;\n            image.onload = function () {\n                res(image.height);\n            };\n        };\n        fr.readAsDataURL(file);\n    }catch (e) {\n        req(e.message);\n    }\n});","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Avatar from 'react-avatar-edit'\nimport './styles.sass'\nimport {Button} from \"semantic-ui-react\";\nimport {dataURLtoFile, uploadFile} from \"../../helpers\";\n\nclass Cropper extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            preview: null,\n            src: \"\"\n        };\n        this.onCrop = this.onCrop.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    onClose() {\n        this.setState({preview: null})\n    }\n\n    onCrop(preview) {\n        this.setState({preview})\n    }\n\n    onSave(){\n        const [info, data] = this.state.preview.split(',');\n        const [typeTemp] = info.split(\";\");\n        const encoding = typeTemp.split(\"/\")[1];\n        const file = dataURLtoFile(this.state.preview, `avatar.${encoding}`);\n        uploadFile(file)\n            .then(file => {\n                this.props.onClose(file.fileDownloadUri);\n            })\n            .catch(console.log);\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"cropper\">\n                    <Avatar\n                        width={320}\n                        height={200}\n                        onCrop={this.onCrop}\n                        onClose={this.onClose}\n                        onBeforeFileLoad={this.onBeforeFileLoad}\n                    />\n\n                    <div className=\"preview\">\n                        {this.state.preview && (\n                            <img src={this.state.preview} alt=\"Preview\"/>)\n                        }\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <Button color='blue' onClick={() => this.props.onClose()}>Close</Button>\n                    {this.state.preview && <Button color='blue' onClick={() => this.onSave()}>Save</Button>}\n                </div>\n            </>\n\n        )\n    }\n}\n\nexport default Cropper;","import React, {useEffect, useState} from 'react';\nimport IApp, {IOptions, IUser} from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {Modal, Image, Header, Button, Icon, TextArea, Input, Popup, Checkbox} from \"semantic-ui-react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport Cropper from \"../Cropper\";\nimport { isEqual } from 'lodash';\n\nimport './styles.sass';\nimport {NotificationManager} from \"react-notifications\";\n\nexport interface IProps {\n    close: boolean;\n    setClose: (status: boolean) => void;\n    actions: typeof actions\n    user: IUser\n    userStore?: IUser\n    onLogOut: () => void\n    isEdit: boolean\n}\n\nconst UserView = (props: IProps) => {\n    const user = props.user;\n    const [crop, setCropper] = useState(false);\n\n\n    const [editAbout, setEditAbout] = useState(false);\n    const [editValue, setEditValue] = useState<any>(user.about);\n    const closeEditAbout = () => {\n        setEditValue(user.about);\n        setEditAbout(false);\n    };\n    const changeAbout = () => {\n        if(editValue.length > 255){\n            return NotificationManager.error(\"Too big message\");\n        }\n        props.actions.editAbout(editValue);\n        closeEditAbout();\n    };\n\n    const sendConfirmLink = () => {\n        props.actions.confirmEmail(user.email || \"\");\n    };\n\n    const [options, changeOptions] = useState<IOptions>({...user.options});\n\n    const setOption = (name: string, value: boolean) => {\n        changeOptions({\n            ...options,\n            [name]: value\n            })\n    };\n\n\n    const [emailAbout, setEmailAbout] = useState(false);\n    const [emailValue, setEmailValue] = useState<any>(user.email);\n    const closeEmailAbout = () => {\n        setEmailValue(user.email);\n        setEmailAbout(false);\n    };\n    const changeEmail = () => {\n        props.actions.editEmail(emailValue);\n        closeEmailAbout();\n    };\n\n    const sendOptions = () => {\n        props.actions.sendOptions(options);\n    };\n\n    useEffect(() => {\n        if (emailAbout) {\n            setEmailValue(user.email);\n        }\n    }, [emailAbout]);\n\n    useEffect(() => {\n        if (editAbout) {\n            setEditValue(user.about);\n        }\n    }, [editAbout]);\n\n    useEffect(() => {\n        changeOptions(user.options);\n    }, [user.options]);\n    return (\n        <Modal\n            open={props.close}\n            closeOnDimmerClick={true}\n            onClose={() => props.setClose(false)}\n            centered={false}\n        >\n            <Modal.Header as={'h1'}>\n                <div className={\"header-wrap-view\"}>\n                    {user.username}\n                    {props.isEdit && <div className=\"icon-wrap\" onClick={props.onLogOut}>\n                        <FontAwesomeIcon icon={faSignOutAlt}/>\n                    </div>}\n                </div>\n            </Modal.Header>\n            <Modal.Content>\n                <div className=\"content-wrapper\">\n                    {crop ? (\n                            <>\n                                <Cropper\n                                    onClose={(src?: string) => {\n                                        setCropper(false);\n                                        if (src) {\n                                            props.actions.updateAvatar(src);\n                                        }\n                                    }}\n                                />\n                            </>\n                        ) :\n                        (<div className={\"avatar\"}>\n                            <Image wrapped size='medium' src={user.avatar} circular/>\n                            {props.isEdit &&\n                            <Button color='blue' onClick={() => setCropper(true)}>Upload photo</Button>}\n                        </div>)\n                    }\n                    <Modal.Description>\n                        <Header as={'h4'}>Profile Info</Header>\n                        <div className=\"key-value\">\n                            <div className=\"key\">\n                                About\n                                {props.isEdit && (!editAbout ?\n                                    <span onClick={() => setEditAbout(true)}><Icon name={'edit'}\n                                                                                   color={\"blue\"}/></span> : (\n                                        <>\n                                            <span onClick={closeEditAbout}><Icon name={'window close outline'}\n                                                                                 color={\"blue\"}/></span>\n                                            <span onClick={changeAbout}><Icon name={'check'} color={\"blue\"}/></span>\n                                        </>\n                                    ))}\n                            </div>\n                            <div className=\"value\">\n                                {!props.isEdit || !editAbout ? user.about : (\n                                    <TextArea\n                                        value={editValue}\n                                        onChange={(e, data) => setEditValue(data.value)}\n                                        style={{minHeight: 100}}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"key-value\">\n                            <div className=\"key\">\n                                <div>\n                                    Email\n                                    {props.isEdit && (!emailAbout ?\n                                        <span onClick={() => setEmailAbout(true)}><Icon name={'edit'}\n                                                                                        color={\"blue\"}/></span> : (\n                                            <>\n                                                <span onClick={closeEmailAbout}><Icon name={'window close outline'}\n                                                                                      color={\"blue\"}/></span>\n                                                <span onClick={changeEmail}><Icon name={'check'} color={\"blue\"}/></span>\n                                            </>\n                                        ))}\n                                </div>\n                                <Header as={'h6'} color={user.confirm ? \"green\" : \"red\"}>{user.confirm ? 'confirm' : (\n                                    props.isEdit && <Popup content='Click to send confirm email'\n                                                           trigger={<span style={{marginLeft: 0}}\n                                                                          onClick={sendConfirmLink}>no confirm</span>}/>\n                                )}</Header>\n                            </div>\n                            <div className=\"value\">\n                                {!props.isEdit || !emailAbout ? user.email : (\n                                    <Input value={emailValue} onChange={(e, data) => setEmailValue(data.value)}/>\n                                )}\n                            </div>\n                        </div>\n                        {props.isEdit && <div className={\"notific-setting\"}>\n                            <Header as={'h4'}>Notification settings</Header>\n                            {!user.confirm && <Header as={'h5'} color={\"red\"}>Works only when you confirm email</Header>}\n                            <div className={\"checkbox-wrap\"}>\n                                <Checkbox toggle checked={options.newChat} onChange={() => setOption('newChat', !options.newChat)} label={\"New chat\"}/>\n                            </div>\n                            <div className={\"checkbox-wrap\"}>\n                                <Checkbox toggle checked={options.eachMessage} onChange={() => setOption('eachMessage', !options.eachMessage)} label={\"Each new message\"}/>\n                            </div>\n                            <div className={\"checkbox-wrap\"}>\n                                <Checkbox toggle checked={options.sendMessage} onChange={() => setOption('sendMessage', !options.sendMessage)} label={\"Option to send particular message to email\"}/>\n                            </div>\n                            {isEqual(options, user.options) ? \"\" : <Button color='blue' onClick={sendOptions}>Save settings</Button>}\n                        </div>}\n                    </Modal.Description>\n                </div>\n            </Modal.Content>\n        </Modal>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    userStore: state.user.data\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserView);","import React from \"react\";\nimport './styles.scss';\n\nexport default () => (\n    <div className=\"typing-indicator\">\n        <span className=\"span\"/>\n        <span className=\"span\"/>\n        <span className=\"span\"/>\n        <span className=\"text\">typing</span>\n    </div>\n)","import React from \"react\";\nimport './styles.scss';\n\nexport interface IProps {\n    width: number\n    height: number\n    src: string\n    online: boolean\n    unread?: any\n}\nexport default (props: IProps) => (\n    <div className={`avatar ${props.online && \"online\"}`}>\n        <img\n            width={props.width}\n            height={props.height}\n            className=\"rounded-circle\"\n            src={props.src}\n            alt=\"\"\n        />\n        {props.unread !== 0 && props.unread && (<span className={\"unread\"}>{props.unread}</span>)}\n    </div>\n)","import React, {useEffect, useState} from \"react\";\nimport \"./styles.sass\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faSearch, faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport IApp, {IUser} from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {Image} from \"semantic-ui-react\";\nimport UserView from \"../UserView\";\nimport Typing from \"../Message/Input/Typing\";\nimport Avatar from '../AvatarWrapper'\nimport ReactTimeago from \"react-timeago\";\n\nconst Header = (props: any) => {\n    const onLogOut = () => {\n        localStorage.removeItem('token');\n        props.actions.clearStore();\n    };\n    const [close, setClose] = useState(false);\n    const [userView, setUserView] = useState<IUser | null>(null);\n\n    const onClick = (user: IUser) => {\n        if (user) {\n            setClose(true);\n            setUserView(user);\n        }\n    };\n\n    useEffect(() => {\n        if (userView && userView.id === props.user.data.id) {\n            setUserView(props.user.data);\n        }\n    }, [props.user]);\n\n    const user = props.chat.user;\n\n    return (\n        <div className=\"header-wrap\">\n            <div className=\"left-side\">\n                <div className=\"icon-wrap\" onClick={() => props.actions.togglePanel()}>\n                    <FontAwesomeIcon icon={faBars}/>\n                </div>\n                <div className=\"icon-wrap\" onClick={() => props.actions.toggleSearch()}>\n                    <FontAwesomeIcon icon={faSearch}/></div>\n            </div>\n            {user &&\n            <div className={\"header-user\"} onClick={() => onClick(user)}>\n                <div className=\"avatar\">\n                    <Avatar src={user.avatar} height={35} width={35} online={user.online}/>\n                </div>\n                <div className=\"name-wrapper\">\n                    <div className=\"name\">{user.username}</div>\n                    {props.chat.isTyping ? <Typing/> : <span className={\"user-status\"}>{\n                        props.chat.user.online ? \"online\" : <ReactTimeago date={props.chat.user.time}/>\n                    }</span>}\n                </div>\n            </div>}\n            <div className=\"right-size\" onClick={() => onClick(props.user.data)}>\n                <Avatar src={props.user.data.avatar} height={35} width={35} online={props.user.data.online}/>\n            </div>\n            {userView && <UserView\n                isEdit={userView.id === props.user.data.id}\n                close={close}\n                setClose={() => {\n                    setUserView(null);\n                    setClose(false);\n                }}\n                user={userView}\n                actions={props.actions}\n                onLogOut={onLogOut}\n            />\n            }\n        </div>\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n","import React, {useEffect, useState} from 'react';\nimport \"./styles.sass\"\nimport {fromNow} from \"../../../helpers\";\nimport EllipsisText from \"react-ellipsis-text\";\nimport Typing from \"../../Message/Input/Typing\";\nimport Avatar from '../../AvatarWrapper'\nimport TimeAgo from 'react-timeago'\n\nexport interface IChatElem {\n    id: number;\n    name: string;\n    date: string;\n    message: string;\n    onClick: () => void;\n}\n\n\nconst ChatElem = (props: any) => {\n    const {name, date, message, id, avatar, show = false, typing, timeTyping, online} = props;\n\n    const [time, setTime] = useState(timeTyping);\n    const [timer, setTimer] = useState<any>(null);\n\n    useEffect(() => {\n        setTime(timeTyping);\n        if (timer) {\n            clearTimeout(timer);\n        }\n        const newTimer = setTimeout(() => {\n            props.actions && props.actions.setTyping(id, false, null);\n        }, 3000);\n        setTimer(newTimer);\n    }, [timeTyping]);\n\n\n    const text = message ? (message.message || (message.file ? <span className=\"file\">file</span> : \"\")) : \"\";\n    return (\n        <div className={`chat-elem-wrap ${props.chatId === id ? 'toggled' : \"\"}`} onClick={() => props.onClick()}>\n            <div className=\"avatar\">\n                <Avatar src={avatar} height={35} width={35} online={online} unread={props.unread}/>\n            </div>\n            <div className=\"info\">\n                <div className=\"name-wrap\">\n                    <div className=\"name\"><EllipsisText text={name} length={10}/></div>\n                    <div className=\"date\"><TimeAgo date={date} /></div>\n                </div>\n                {typing ? <Typing /> : !show && typeof text === \"string\" ? (\n                    <EllipsisText text={text} length={20}/>) : text}\n            </div>\n        </div>\n    )\n};\n\n\nexport default ChatElem;","import React, {useState} from 'react';\nimport {Form, Header, Icon, Input} from \"semantic-ui-react\";\nimport ChatElem from \"../ChatElem\";\nimport {IUser} from \"../../../model/IApp\";\n\n\nconst Search = (props: any) => {\n    const [value, setValue] = useState(\"\");\n    const onText = (user: IUser) => {\n\n        const chat = props.chatList.data.find( (elem: any) =>elem.user.id === user.id);\n        if(chat){\n            return props.actions.fetchMessages(chat.chat.id, user);\n        }\n        props.actions.newChat(user.id);\n    };\n\n    const getNotFound = () => (\n        <Header as='h4' icon textAlign={\"center\"}>\n            <Icon name='window close outline' size={\"mini\"}/>\n            Not found\n        </Header>\n    );\n    const getUserList = () => (\n        <>\n            {props.search.data.map((elem: IUser) =>\n                <ChatElem\n                    key={elem.id}\n                    id={elem.id}\n                    name={elem.username}\n                    avatar={elem.avatar}\n                    online={elem.online}\n                    onClick={() => onText(elem)}\n                    show\n                />\n            )}\n        </>\n    );\n\n\n    return (\n        <>\n            <Form onSubmit={() => value.trim() && props.actions.search(value)}>\n                <Input\n                    loading={props.search.isFetching}\n                    value={value}\n                    icon='user'\n                    placeholder='Search...'\n                    iconPosition='left'\n                    onChange={(e, data) => setValue(data.value)}\n                />\n            </Form>\n            <>\n                {props.search.data && (props.search.data.length > 0 ? getUserList() : getNotFound())}\n            </>\n        </>\n    )\n};\n\n\nexport default Search;","import ChatElem from \"./ChatElem\";\nimport React, {useEffect} from \"react\";\nimport \"./styles.sass\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport IApp, {IChatList, IChatView, IMessageView, IUser} from \"../../model/IApp\";\nimport Search from \"./Search\";\n\n\ninterface IChatListProps {\n    actions: typeof actions;\n    chatList: IChatList;\n    chat: IChatView\n    search: any\n    user: {\n        data: IUser\n    }\n}\n\nconst ChatList = (props: IChatListProps) => {\n    useEffect(() => {\n        if (!props.chatList.data)\n            props.actions.fetchChats();\n    }, [props.actions]);\n\n    const onClick = (elem: IMessageView) => {\n        if (elem.chat.id !== props.chat.id) {\n            props.actions.fetchMessages(elem.chat.id, elem.user)\n        } else {\n            props.actions.closeChat();\n        }\n    };\n\n    return (\n        (<div className=\"chat-list-wrap\">\n                {props.search.isOpen ? <Search {...props}/> :\n                    <>\n                        {props.chatList.data && props.chatList.data.map(elem => elem && elem.message && (\n                            <ChatElem key={elem.chat.id} id={elem.chat.id}\n                                      chatId={props.chat.id}\n                                      name={elem.user.username}\n                                      date={elem.message.time}\n                                      message={elem.message}\n                                      avatar={elem.user.avatar}\n                                      typing={elem.isTyping || false}\n                                      timeTyping={elem.timeTyping}\n                                      actions={props.actions}\n                                      online={elem.user.online}\n                                      time={elem.user.time}\n                                      unread={elem.chat.userId !== props.user.data.id ? elem.chat.count : \"\"}\n                                      onClick={() => onClick(elem)}/>\n                        ))}\n                    </>}\n            </div>\n        ))\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    chatList: state.chatList,\n    chat: state.chat,\n    search: state.search,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatList);","import SockJS from \"sockjs-client\";\nimport Stomp, {Client} from 'stompjs';\nimport * as actions from \"../../redux/actions\";\nimport * as url from '../../var/routers'\nimport IApp, {IMessage, IUser} from \"../../model/IApp\";\n\nlet stompClient = {} as Client;\n\n\n\nconst connect = (action: typeof actions, store: IApp) => {\n    if(stompClient.connected){\n        console.log(\"already connected\");\n        return;\n    }\n\n\n    const user = store.user.data as IUser;\n\n\n    // null, {headers: { 'Authorization': 'Basic '+localStorage.getItem('token')}})\n    // @ts-ignore\n    stompClient = Stomp.over(new SockJS(url.SOCKET_URL));\n\n    stompClient.connect({ 'user': user.id }, () => {\n        console.log('Connected', store.user);\n\n\n\n        stompClient.subscribe(`/res/new-message/${user.id}`, ({ body }) => action.newMessage(JSON.parse(body)));\n\n        stompClient.subscribe(`/res/new-chat/${user.id}`, ({ body }: { body: string}) => {\n            const newChat: { chatId: number, user1: IUser, user2: IUser} = JSON.parse(body);\n\n            action.addChatToList(newChat.chatId, newChat.user1.id === user.id ? newChat.user2 : newChat.user1, user.id === newChat.user1.id);\n\n        });\n\n        stompClient.subscribe(`/res/delete-message/${user.id}`, ({ body }: { body: string}) => {\n            const message: IMessage = JSON.parse(body);\n\n            action.deleteMessageDone(message);\n            action.fetchChats();\n        });\n\n        stompClient.subscribe(`/res/edit-message/${user.id}`, ({ body }: { body: string}) => {\n            const message: IMessage = JSON.parse(body);\n\n            action.editMessageDone(message);\n            action.fetchChats();\n        });\n\n        stompClient.subscribe(`/res/new-typing/${user.id}`, ({body} : {body: string}) => {\n            const { chatId } : {chatId: number} = JSON.parse(body);\n\n            action.newTypingMessage(chatId)\n        });\n\n        stompClient.subscribe('/res/online', ({body} : {body: string}) => {\n            const userId = JSON.parse(body);\n            action.onlineUser(userId, true);\n        });\n\n        stompClient.subscribe('/res/offline', ({body} : {body: string}) => {\n            const userId = JSON.parse(body);\n            action.onlineUser(userId, false);\n        });\n\n        stompClient.subscribe('/res/chat-read/'+user.id, ({body} : {body: string}) => {\n            const chatId = JSON.parse(body);\n            action.setReadMessage(chatId);\n        });\n    });\n\n\n};\n\nconst send = (destination: string, headers?: {}, body?: string) => {\n    return stompClient.send(destination, headers, body);\n};\n\nexport default {\n    stompClient,\n    send,\n    connect\n};","import React, {useEffect, useState} from 'react';\nimport {Button, Form, Header, Icon, Input, Message, Modal, TextArea} from 'semantic-ui-react'\nimport socket from \"../../../services/socket/socket\";\nimport IApp, {IFile} from \"../../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {uploadFile, humanFileSize, getImageHeight} from \"../../../helpers\";\nimport {NotificationManager} from \"react-notifications\";\n\n\nexport const MessageInput = (props: any) => {\n    const [value, setValue] = useState<any>(\"\");\n    const [loading, setLoading] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [file, setFile] = useState<IFile | null>(null);\n\n    useEffect(() => {\n        if (value) {\n            props.actions.typingMessage(props.chat.id, props.chat.user.id);\n        }\n        // typing // send to another user !!!!!!!!!!!\n    }, [value]);\n\n    const handleUploadFile = async ({target}: any) => {\n        if (target.files.length == 0) {\n            return;\n        }\n        const height = target.files[0].type.indexOf(\"image\") !== -1 ? await getImageHeight(target.files[0]) : 0;\n\n        setOpenModal(true);\n        setLoading(true);\n        uploadFile(target.files[0], height)\n            .then((file: IFile) => {\n                setFile(file);\n                setLoading(false);\n            })\n            .catch(console.log);\n    };\n\n    const sendMessage = () => {\n        if (value.length > 255) {\n            return NotificationManager.error(\"Too long\");\n        }\n\n        setOpenModal(false);\n        if (!value.trim() && !file)\n            return;\n        socket.send('/req/new-message', {}, JSON.stringify({\n            chatId: props.chat.id,\n            userId: props.user.data.id,\n            message: value,\n            file,\n        }));\n        setValue(\"\");\n        setFile(null);\n    };\n\n\n    return <Form onSubmit={(e) => sendMessage()} className={\"input-wrapper\"}>\n        <Input placeholder='Type a message...' fluid value={value} onChange={(e, data) => setValue(data.value)}/>\n        <Button color=\"teal\" icon as=\"label\">\n            <Icon name=\"paperclip\"/>\n            <input name=\"image\" type=\"file\" onChange={handleUploadFile} hidden/>\n        </Button>\n        <Modal\n            open={openModal}\n            basic\n            size='small'\n        >\n            <Modal.Content>\n                <Header as={'h3'} textAlign='center' className={\"white-header\"}>Message with attached</Header>\n                <Message icon>\n                    {loading ? <Icon name='circle notched' loading/> :\n                        <Icon name='file'/>}\n                    <Message.Content>\n                        <Message.Header>{file && file.fileName}</Message.Header>\n                        {file && humanFileSize(file.size)}\n                    </Message.Content>\n                </Message>\n                <Form>\n                    <TextArea\n                        value={value}\n                        onChange={(e, data) => setValue(data.value)}\n                        style={{minHeight: 200}}\n                    />\n                </Form>\n            </Modal.Content>\n            <Modal.Actions className={\"action-btn\"}>\n                <Button color='green' inverted onClick={() => loading || sendMessage()}>\n                    <Icon name='save' disabled={loading}/> Save\n                </Button>\n                <Button color='blue' inverted onClick={() => {\n                    setOpenModal(false);\n                    setFile(null)\n                }}>\n                    <Icon name='cancel'/> Cancel\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    </Form>\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    user: state.user,\n    chat: state.chat\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MessageInput);","import {Button, Form, Header, Icon, Image, Message, Modal, TextArea} from \"semantic-ui-react\";\nimport React, {useState} from \"react\";\nimport {IMessage, IUser} from \"../../model/IApp\";\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport './styles.sass'\nimport {fromNow, humanFileSize} from \"../../helpers\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as Actions from \"../../redux/actions\";\nimport ReactHtmlParser from 'react-html-parser';\nimport {NotificationManager} from \"react-notifications\";\nimport TimeAgo from \"react-timeago\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ndayjs.extend(relativeTime);\n\n\nexport const MessageItem = (props: { user: IUser, message: IMessage, actions: typeof Actions, checked: boolean }) => {\n    const {message, user, actions, checked} = props;\n    const fromMe = message.user.id === user.id;\n\n    const [openDelete, setClose] = useState(false);\n    const [openEdit, setCloseEdit] = useState(false);\n    const [messageEdit, changeMessage] = useState<any>(message.message);\n\n    const onDelete = () => {\n        setClose(false);\n        actions.deleteMessage(message.id, message.chat.id);\n    };\n\n    const onEdit = () => {\n        if(messageEdit.length > 255){\n            return NotificationManager.error(\"Too long\");\n        }\n        setCloseEdit(false);\n        actions.editMessage(message.id, message.chat.id, messageEdit);\n    };\n\n    const getJustifyContent = () => fromMe ? \"space-between\" : user.options.sendMessage ? \"space-between\" : \"flex-end\";\n    const sendMessage = () => props.actions.sendEmail(message);\n    return (\n        <div className={`message-item ${openDelete ? \"to-delete\" : \"\"} ${openEdit ? \"to-edit\" : \"\"}`}\n             style={{alignItems: fromMe ? \"flex-end\" : \"flex-start\"}}>\n            <div className={`message-wrap ${fromMe ? \"from-me\" : \"from-them\"}`}>\n                {message.file && (\n                        message.file.fileType.indexOf('image') === -1 ? (\n                            <Message icon compact size={\"mini\"} info>\n                                <Icon name='file'\n                                      onClick={() => message.file && window.open(message.file.fileDownloadUri, '_blank')}/>\n                                <Message.Content>\n                                    <Message.Header>{message.file && message.file.fileName}</Message.Header>\n                                    {message.file && humanFileSize(message.file.size)}\n                                </Message.Content>\n                            </Message>) :\n                            <>\n                                <div style={{ marginBottom: 10, height: message.file.height }}>\n                            <Image src={message.file.fileDownloadUri}\n                                   wrapped\n                                   as={'a'}\n                                   className={\"image-fit\"}\n                                   href={message.file.fileDownloadUri}\n                                   target='_blank'/>\n                                </div>\n                            </>\n\n                   )}\n                <div style={{ whiteSpace: \"pre-wrap\" }}>{ReactHtmlParser(message.message)}</div>\n                <span className=\"info-block\" style={{ justifyContent: getJustifyContent() }}>\n                    {!fromMe && user.confirm && user.options.sendMessage && <span><Icon name={\"mail\"} size={\"small\"} onClick={sendMessage}/></span>}\n                <span className={\"time\"}><TimeAgo date={message.time} /></span>\n                    {fromMe && (<span className={\"icons\"}>\n                        {checked && <Icon name={\"check\"} size={\"small\"}/>}\n                        {user.confirm && user.options.sendMessage && <Icon name={\"mail\"} size={\"small\"} onClick={sendMessage}/>}\n                    <Modal\n                        trigger={<Icon name={\"trash\"} size={\"small\"} onClick={() => setClose(true)}/>}\n                        open={openDelete}\n                        onClose={() => setClose(false)}\n                        basic\n                        size='small'\n                    >\n                    <Modal.Content>\n                      <Header as={'h3'} textAlign='center' className={\"white-header\"}>Are you sure you want to delete the message?</Header>\n                    </Modal.Content>\n                    <Modal.Actions className={\"action-btn\"}>\n                      <Button color='red' onClick={onDelete} inverted>\n                        <Icon name='trash'/> Delete\n                      </Button>\n                        <Button color='green' onClick={() => setClose(false)} inverted>\n                        <Icon name='cancel'/> Cancel\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                     <Modal\n                         trigger={<Icon name={\"edit\"} size={\"small\"} onClick={() => setCloseEdit(true)}/>}\n                         open={openEdit}\n                         onClose={() => setCloseEdit(false)}\n                         basic\n                         size='small'\n                     >\n                    <Modal.Content>\n                      <Header as={'h3'} textAlign='center' className={\"white-header\"}>Edit message</Header>\n                        <Form>\n                            <TextArea\n                                value={messageEdit}\n                                onChange={(e, data) => changeMessage(data.value)}\n                                style={{minHeight: 200}}\n                            />\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions className={\"action-btn\"}>\n                      <Button color='green' onClick={onEdit} inverted>\n                        <Icon name='edit'/> Edit\n                      </Button>\n                        <Button color='blue' onClick={() => setCloseEdit(false)} inverted>\n                        <Icon name='cancel'/> Cancel\n                      </Button>\n                    </Modal.Actions>\n                  </Modal>\n                </span>)}\n            </span>\n            </div>\n            {/*<Image avatar src={message.user.avatar}/>*/}\n        </div>\n    )\n};\n\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(Actions, dispatch)\n});\nexport default connect(\n    () => ({}),\n    mapDispatchToProps\n)(MessageItem);","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst hasOverflow = el => el.clientHeight < el.scrollHeight\n\nconst isScrolledDown = (el, threshold) => {\n    const bottom = el.scrollTop + el.clientHeight\n    return bottom >= el.scrollHeight - threshold\n}\n\nconst isScrolledUp = el => el.scrollTop === 0\n\nconst scrollDown = el => el.scrollTop = el.scrollHeight - el.clientHeight\n\nconst scrollDownBy = (amount, el) => el.scrollTop += amount\nconst scrollUpBy = (amount, el) => el.scrollTop -= amount\n\nexport default (Component, { isScrolledDownThreshold = 150 } = { }) => class extends React.PureComponent {\n    shouldScroll = true;\n    constructor(props){\n        super(props)\n        this._isScrolledDown = true /* whether the user has scrolled down */\n        this._el = null\n        this._scrollHeight = null\n        this._isScrolledUp = null\n        this.state = { size: (this.props.chat.data || []).length}\n    }\n    scrollDownIfNeeded(){\n        if(this.shouldScroll && hasOverflow(this._el)){\n            scrollDown(this._el)\n            this.shouldScroll = false;\n        }\n    }\n    handleScroll(e){\n        this._isScrolledDown = isScrolledDown(this._el, isScrolledDownThreshold)\n        if(isScrolledUp(this._el)){\n            this.props.onScrolledTop && this.props.onScrolledTop(e)\n        }\n        this.props.onScrolled && this.props.onScrolled(e)\n    }\n    componentDidMount(){\n        this.scrollDownIfNeeded()\n    }\n    componentWillUpdate(nextProps, nextState){\n        this.setState({size: nextProps.chat.data.length});\n        this.shouldScroll = nextProps.chat.data.length > this.state.size;\n        this._scrollHeight = this._el.scrollHeight\n        this._isScrolledUp = isScrolledUp(this._el)\n    }\n    componentDidUpdate(){\n        /* if the list is scrolled all the way up and new items are added, preserve the current scroll position */\n        if(this._isScrolledUp && this._scrollHeight !== null){\n            /* the scroll height increased by this much during the update */\n            const difference = this._el.scrollHeight - this._scrollHeight\n            this._scrollHeight = null\n            scrollDownBy(difference, this._el)\n        }\n        else this.scrollDownIfNeeded()\n    }\n    render(){\n        const { onScrolled, onScrolledTop, ...rest } = this.props\n        return <Component\n            {...rest}\n            ref={ el => this._el = ReactDOM.findDOMNode(el) }\n            onScroll={ e => this.handleScroll(e) }\n        />\n    }\n}","import MessageItem from \"./MessageItem\";\nimport React from \"react\";\nimport autoscroll from '../../helpers/autoscroll';\n\n\nclass MessageList extends React.Component<any> {\n\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any): void {\n        try{\n            const data  = this.props.chat.data;\n            if(data.length > prevProps.chat.data.length){\n                if(data[data.length - 1].user.id !== this.props.user.id) {\n                    console.log('i read');\n                    this.props.actions.readChat(this.props.chat.id, this.props.chat.user.id);\n                }\n            }\n        }catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    render() {\n        const checked = (i: number) =>\n            this.props.chat.userId !== this.props.user.id ? true : (\n                this.props.chat.data.length - i >= this.props.chat.count + 1\n            );\n\n        return (\n            <div className=\"messages-wrap\" {...this.props}>\n                <div>\n                    {(this.props.chat.data || []).map((elem: any, i:number) =>\n                        <MessageItem\n                            checked={checked(i)}\n                            key={elem.id}\n                            message={elem}\n                            user={this.props.user}/>\n                    )}\n                </div>\n            </div>)\n    }\n};\n\nexport default autoscroll(MessageList);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {Header, Loader} from 'semantic-ui-react'\nimport './styles.sass'\nimport MessageInput from \"../Message/Input\";\nimport MessageList from \"../Message/MessageList\";\n\n\nconst ChatPage = (props: any) => {\n\n\n    return (\n        <div className=\"chat-page-wrapper\">\n            {props.chat.isOpen ? (\n                props.chat.isFetching ?\n                    (<div className=\"loader-wrap\">\n                        <Loader active inline='centered'/>\n                    </div>) :\n                    (\n                        <>\n\n                                <MessageList\n                                    chat={props.chat}\n                                    user={props.user.data}\n                                    actions={props.actions}/>\n                            <div className=\"input-wrap\">\n                                <MessageInput/>\n                            </div>\n                        </>\n                    )\n            ) : (\n                <div style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", height: \"100%\" }}>\n                    <Header as={'h3'} textAlign={\"center\"}>\n                        Select chat to start texting\n                    </Header>\n                </div>\n            )}\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatPage);\n","import React, {useEffect} from 'react';\nimport './styles.sass';\nimport Header from \"../Header\";\nimport ChatList from \"../ChatList\";\nimport ChatPage from \"../ChatPage\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport socket from '../../services/socket/socket';\nimport {Dimmer, Loader} from \"semantic-ui-react\";\n\nconst Chat = (props: any) => {\n    useEffect(() => {\n        if(props.actions && props.user.data) {\n            console.log('init');\n            socket.connect(props.actions, props.state)\n        }\n    }, [props.actions, props.user]);\n\n    useEffect(() => {\n        props.actions.fetchUser();\n    }, [props.actions]);\n    return (\n        props.user.data && !props.user.isFetching ? (\n        <div className=\"main-wrapper\">\n            <div style={ {background: \"white\"} }>\n                    <Header />\n                <div className=\"content-wrap\">\n                    {props.showPanel &&\n                    <ChatList {...props} />}\n                    <ChatPage />\n                </div>\n            </div>\n        </div>) : (\n            <Dimmer active inverted>\n                <Loader inverted />\n            </Dimmer>\n        )\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    state,\n    showPanel: state.showPanel,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Chat);","import React, {useEffect, useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst LoginForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.loginUser(login, password);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"30%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Login to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                            error={props.loginPage && !!props.loginPage.error}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.loginPage && props.loginPage.isFetching}>\n                            Login\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.loginPage && !!props.loginPage.error && (<Message\n                    error\n                    content={props.loginPage.error}\n                />)}\n                <Message>\n                    New to us? <a href=\"#\" onClick={() => props.actions.changePage(\"reg\")}>Sign Up</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    loginPage: state.loginPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginForm);","import React, {useEffect, useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment, Image } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport ImagePicker from 'react-image-picker'\nimport 'react-image-picker/dist/index.css'\nimport { getAvatars} from \"../../helpers\";\n\nconst imageList = [...getAvatars(14)];\n\nconst RegForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.regUser(login, password, avatar);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"20%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Create an account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='User name' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                        />\n                        <Header as='h4' textAlign='left'>\n                            Choose a photo\n                        </Header>\n                        <ImagePicker\n                            images={imageList.map((image, i) => ({src: image, value: i}))}\n                            onPick={(data: any) => setAvatar(data.src)}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.regPage && props.regPage.isFetching}>\n                            Sign up\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.regPage && !!props.regPage.error && (<Message\n                    error\n                    content={props.regPage.error}\n                />)}\n                <Message>\n                    Already has account? <a href='#'  onClick={() => props.actions.changePage(\"login\")}>Login</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    regPage: state.regPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegForm);","import './styles.sass'\n\n\nconst initParticles = () => {\n    //@ts-ignore\n    // eslint-disable-next-line no-undef\n    particlesJS('particles-js',\n\n        {\n            \"particles\": {\n                \"number\": {\n                    \"value\": 80,\n                    \"density\": {\n                        \"enable\": true,\n                        \"value_area\": 800\n                    }\n                },\n                \"color\": {\n                    \"value\": \"#ffffff\"\n                },\n                \"shape\": {\n                    \"type\": \"circle\",\n                    \"stroke\": {\n                        \"width\": 0,\n                        \"color\": \"#000000\"\n                    },\n                    \"polygon\": {\n                        \"nb_sides\": 5\n                    },\n                    \"image\": {\n                        \"src\": \"img/github.svg\",\n                        \"width\": 100,\n                        \"height\": 100\n                    }\n                },\n                \"opacity\": {\n                    \"value\": 0.5,\n                    \"random\": false,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 1,\n                        \"opacity_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"size\": {\n                    \"value\": 5,\n                    \"random\": true,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 40,\n                        \"size_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"line_linked\": {\n                    \"enable\": true,\n                    \"distance\": 150,\n                    \"color\": \"#ffffff\",\n                    \"opacity\": 0.4,\n                    \"width\": 1\n                },\n                \"move\": {\n                    \"enable\": true,\n                    \"speed\": 2,\n                    \"direction\": \"none\",\n                    \"random\": false,\n                    \"straight\": false,\n                    \"out_mode\": \"out\",\n                    \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 1200\n                    }\n                }\n            },\n            \"interactivity\": {\n                \"detect_on\": \"canvas\",\n                \"events\": {\n                    \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                    },\n                    \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"push\"\n                    },\n                    \"resize\": true\n                },\n                \"modes\": {\n                    \"grab\": {\n                        \"distance\": 400,\n                        \"line_linked\": {\n                            \"opacity\": 1\n                        }\n                    },\n                    \"bubble\": {\n                        \"distance\": 400,\n                        \"size\": 40,\n                        \"duration\": 2,\n                        \"opacity\": 8,\n                        \"speed\": 3\n                    },\n                    \"repulse\": {\n                        \"distance\": 200\n                    },\n                    \"push\": {\n                        \"particles_nb\": 4\n                    },\n                    \"remove\": {\n                        \"particles_nb\": 2\n                    }\n                }\n            },\n            \"retina_detect\": true,\n            \"config_demo\": {\n                \"hide_card\": false,\n                \"background_color\": \"#b61924\",\n                \"background_image\": \"\",\n                \"background_position\": \"50% 50%\",\n                \"background_repeat\": \"no-repeat\",\n                \"background_size\": \"cover\"\n            }\n        }\n\n    );\n};\nexport default initParticles;","import React, {useEffect} from 'react';\nimport LoginForm from \"./LoginForm\";\nimport RegForm from \"./RegForm\";\nimport initParticles from \"./Particles/particles\";\nimport './Particles/styles.sass'\n\n\nconst LoginPage = (props: any) => {\n    useEffect(() => {initParticles()}, [])\n\n    return (\n        <>\n            <div id=\"particles-js\" />\n            {props.page === \"login\" ? <LoginForm/> : <RegForm/>}\n        </>\n    )\n};\n\n\nexport default LoginPage;","import {fetchHeaderConfig} from \"./index\";\n\nconst request: typeof fetch = async (input: RequestInfo, init?: RequestInit | undefined) => {\n    let headers: HeadersInit = init && init.headers ? {...fetchHeaderConfig().headers, ...init.headers } : fetchHeaderConfig().headers as HeadersInit;\n    if(init && init.body) {\n        headers = new Headers({'Content-Type': 'application/json', ...headers});\n    }\n\n    let promise = await fetch(input, { ...(init || {}), headers});\n\n    if(!promise.ok){\n        console.error(promise);\n\n        const message = await promise.json();\n\n        console.log(message);\n\n        if(message.message === \"Token has expired\") {\n            localStorage.removeItem(\"token\");\n\n            return window.location.reload();\n        }\n        // @ts-ignore\n        throw new Error(message.message || message[0]);\n    }\n    return await promise.json();\n};\nexport default request;","import {Dimmer, Icon, Loader, Header} from \"semantic-ui-react\";\nimport React, {useEffect, useState} from 'react';\n\nimport './styles.sass';\nimport request from \"../../helpers/webApi\";\nimport {CONFIRM_EMAIL_DONE} from \"../../var/routers\";\n\nconst ConfirmPage = (props: { token: string }) => {\n    const [isFetching, setLoad] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        request(\n            CONFIRM_EMAIL_DONE,\n            {\n                method: \"POST\",\n                body: JSON.stringify({\n                    token: props.token\n                })\n            }\n        )\n            .then(res => {\n                if (!res) {\n                    setError(true);\n                }\n                setLoad(false);\n            })\n            .catch(err => {\n                console.log(err);\n                setError(true);\n                setLoad(false);\n            })\n    }, []);\n\n    return <div className={\"confirm-wrap\"}> {!isFetching ? (\n        <Dimmer active>\n            <Header as='h2' icon color={\"black\"}>\n                <Icon name={!error ? 'check circle' : 'close'} color={!error ? \"green\" : \"red\"}/>\n                Email doesn't confirmed!\n                <Header.Subheader><span onClick={() => window.location.replace(\"/\")}>Go to app</span></Header.Subheader>\n            </Header>\n        </Dimmer>\n    ) : (\n        <Dimmer inverted>\n            <Loader inverted/>\n        </Dimmer>\n    )\n    }\n    </div>\n};\n\n\nexport default ConfirmPage;","import React from \"react\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport 'semantic-ui-css/semantic.min.css'\nimport LoginPage from \"./components/LoginPage\";\nimport IApp from \"./model/IApp\";\nimport {connect} from \"react-redux\";\nimport {NotificationContainer} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport ConfirmPage from \"./components/ConfirmPage\";\n\nconst App: React.FC = (props: any) => {\n    switch (props.page) {\n        case \"login\":\n        case 'reg':\n            return <LoginPage page={props.page}/>;\n        default:\n            if(window.location.href.indexOf(\"/email\") === -1) {\n                return (\n                    <div className=\"App\">\n                        <Chat/>\n                        <NotificationContainer/>\n                    </div>\n                )\n            } else {\n              const [,type, ...token] = window.location.pathname.split(\"/\");\n              if(type === \"email-confirm\"){\n                  return <ConfirmPage token={token.join(\"/\")}/>;\n              }else if(type === \"email-reset\"){\n                  return (<span>reset</span>);\n              }\n            }\n            return <span>not found</span>;\n    }\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    page: state.page\n\n});\n\nexport default connect(\n    mapStateToProps,\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {takeLatest, put, select, delay} from \"redux-saga/effects\";\nimport * as types from \"./constants\";\nimport * as url from \"../var/routers\";\nimport {fetchHeaderConfig} from \"../helpers\";\nimport request from \"../helpers/webApi\";\nimport {NotificationManager} from \"react-notifications\";\nimport socket from \"../services/socket/socket\";\nimport IApp, {IMessageView} from \"../model/IApp\";\nimport {Simulate} from \"react-dom/test-utils\";\n\nfunction* fetchChats(action: any) {\n    try {\n        const res = yield request(url.CHAT_LIST);\n        yield put({type: types.FETCH_CHATS_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* fetchMessages(action: any) {\n    try {\n        const res = yield request(url.CHAT_MESSAGES + action.payload.id, {headers: fetchHeaderConfig().headers});\n        yield put({type: types.FETCH_MESSAGES_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* loginUser(action: any) {\n\n    try {\n        const res = yield request(url.LOGIN, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: action.payload.login,\n                password: action.payload.password\n            }),\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            }\n        });\n        localStorage.setItem('token', res.token);\n        yield put({\n            type: types.CHANGE_PAGE,\n            payload: \"chat\"\n        })\n    } catch (e) {\n        yield put({\n            type: types.LOGIN_FAIL,\n            payload: {error: e.message}\n        });\n        console.error(e);\n    }\n}\n\nfunction* fetchUser(action: any) {\n    try {\n        const res = yield request(url.USER, {\n            method: \"GET\",\n            headers: fetchHeaderConfig().headers\n        });\n\n        yield put({\n            type: types.FETCH_USER_DONE,\n            payload: {\n                user: res\n            }\n        })\n    } catch (e) {\n        localStorage.removeItem('token');\n        yield put({\n            type: types.REMOVE_STORE\n        })\n    }\n}\n\nfunction* regUser(action: any) {\n    const {login, password, avatar} = action.payload;\n    try {\n        yield request(url.REG, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: login,\n                password,\n                avatar\n            })\n        });\n        yield put({\n            type: types.LOGIN,\n            payload: {\n                login, password\n            }\n        })\n    } catch (error) {\n        yield put({\n            type: types.REG_FAIL,\n            payload: {error: error.message}\n        });\n    }\n}\n\nfunction* search(action: any) {\n    try {\n        const res = yield request(url.SEARCH + `?search=${action.payload.search}`);\n        yield put({\n            type: types.SEARCH_DONE,\n            payload: res\n        })\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* newChat(action: any) {\n    try {\n        const res = yield request(url.NEW_CHAT, {\n            method: \"PUT\",\n            body: JSON.stringify({\n                userId: action.payload.userId\n            })\n        });\n        yield put({\n            type: types.CREATE_CHAT_DONE,\n            payload: {\n                chatId: res.chatId\n            }\n        })\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* deleteMessage(action: any) {\n    try {\n        yield request(url.DELETE_MESSAGE + `/${action.payload.messageId}`, {\n            method: \"DELETE\",\n            body: JSON.stringify({\n                chatId: action.payload.chatId\n            })\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* editMessage(action: any) {\n    try {\n        yield request(url.DELETE_MESSAGE + `/${action.payload.messageId}`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                chatId: action.payload.chatId,\n                message: action.payload.message\n            })\n        });\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* updateAvatar(action: any) {\n    try {\n        const res = yield request(url.UPDATE_AVATAR, {\n            method: \"POST\",\n            body: JSON.stringify({\n                src: action.payload.src\n            })\n        });\n        if (res) {\n            yield put({\n                type: types.UPDATE_AVATAR_DONE,\n                payload: {\n                    src: res\n                }\n            })\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* updateAbout(action: any) {\n    try {\n        const res = yield request(url.UPDATE_ABOUT, {\n            method: \"POST\",\n            body: JSON.stringify({\n                message: action.payload.message\n            })\n        });\n        yield put({\n            type: types.UPDATE_ABOUT_DONE,\n            payload: {\n                message: res\n            }\n        })\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* updateEmail(action: any) {\n    try {\n        const res = yield request(url.UPDATE_EMAIL, {\n            method: \"POST\",\n            body: JSON.stringify({\n                email: action.payload.email\n            })\n        });\n        yield put({\n            type: types.UPDATE_EMAIL_DONE,\n            payload: {\n                email: res\n            }\n        })\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* confirmMessage(action: any) {\n    try {\n        const res = yield request(url.CONFIRM_EMAIL, {\n            method: \"POST\",\n            body: JSON.stringify({\n                email: action.payload.email\n            })\n        });\n        if (res) {\n            NotificationManager.info(\"Confirm email send\");\n        }\n    } catch (e) {\n        NotificationManager.error(\"Something go wrong\");\n        console.log(e);\n    }\n}\n\nfunction* sendOptions(action: any) {\n    try {\n        const res = yield request(url.SEND_OPTIONS, {\n            method: \"POST\",\n            body: JSON.stringify({\n                ...action.payload.options\n            })\n        });\n        if (res) {\n            yield put({\n                type: types.SEND_OPTIONS_DONE,\n                payload: {\n                    options: action.payload.options\n                }\n            })\n        }\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* sendEmail(action: any){\n    try{\n        yield request(url.SEND_EMAIL, {\n            method: \"POST\",\n            body: JSON.stringify({\n                messageId: action.payload.message.id\n            })\n        });\n        NotificationManager.info(\"Email was send\");\n    }catch (e) {\n        console.log(e);\n        NotificationManager.error(\"Something go wrong with email\");\n    }\n}\n\nfunction* typeMessage(action: any){\n    try{\n        yield socket.send(\"/req/new-typing\", {}, JSON.stringify({\n            chatId: action.payload.chatId,\n            userId: action.payload.userId\n        }))\n    }catch (e) {\n        console.log(e)\n    }\n}\n\nfunction* newTyping(action: any) {\n    try {\n        const chatId  = action.payload.chatId;\n        let chat: IMessageView = yield select((store: IApp) => (store.chatList.data || []).find(el => el.chat.id === chatId));\n        const date = new Date();\n        if(!chat){\n            throw new Error(\"no such chat\");\n        }\n\n        yield put({\n            type: types.SET_TYPING_MESSAGE,\n            payload: {\n                chatId,\n                isTyping: true,\n                timeTyping: date\n            }\n        });\n    }catch (e) {\n        console.log(\"NEW TYPING ERROR: \", e);\n    }\n}\n\nfunction* readMessage(action: any) {\n    try {\n        yield socket.send(\"/req/message-read\", {}, JSON.stringify({\n            userId: action.payload.userId,\n            chatId: action.payload.chatId,\n        }))\n    }catch (e) {\n        console.log(e);\n    }\n}\nexport function* watchSaga() {\n    yield takeLatest(types.FETCH_CHATS, fetchChats);\n    yield takeLatest(types.FETCH_MESSAGES, fetchMessages);\n    yield takeLatest(types.LOGIN, loginUser);\n    yield takeLatest(types.FETCH_USER, fetchUser);\n    yield takeLatest(types.REG, regUser);\n    yield takeLatest(types.SEARCH, search);\n    yield takeLatest(types.CREATE_CHAT, newChat);\n    yield takeLatest(types.DELETE_MESSAGE, deleteMessage);\n    yield takeLatest(types.EDIT_MESSAGE, editMessage);\n    yield takeLatest(types.UPDATE_AVATAR, updateAvatar);\n    yield takeLatest(types.UPDATE_ABOUT, updateAbout);\n    yield takeLatest(types.UPDATE_EMAIL, updateEmail);\n    yield takeLatest(types.SEND_CONFIRM_MESSAGE, confirmMessage);\n    yield takeLatest(types.SEND_OPTIONS, sendOptions);\n    yield takeLatest(types.SEND_EMAIL, sendEmail);\n    yield takeLatest(types.TYPING_MESSAGE, typeMessage);\n    yield takeLatest(types.NEW_TYPING_MESSAGE, newTyping);\n    yield takeLatest(types.READ_MESSAGE, readMessage);\n}","import IApp, {IMessage} from './../model/IApp'\nimport IAction from './../model/IAction'\nimport * as types from './constants';\nimport {sortChatList} from \"../helpers\";\n\nconst initialState: IApp = {\n    chatList: {\n        data: null,\n        isFetching: false\n    },\n    user: {\n        isFetching: false,\n        data: null\n    },\n    chat: {\n        id: null,\n        isFetching: false,\n        isOpen: false,\n        data: [],\n        user: null,\n        count: 0,\n        userId: null\n    },\n    showPanel: true,\n    page: localStorage.getItem('token') && localStorage.getItem('token') !== \"undefined\" ? \"chat\" : \"login\",\n    search: {\n        isFetching: false,\n        isOpen: false\n    }\n};\n\nexport function reducer(state: IApp = initialState, action: IAction): IApp {\n    let data, message: IMessage, chatList, messageList, chatId: number;\n    switch (action.type) {\n        case types.FETCH_CHATS:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    isFetching: true\n                }\n            };\n        case types.TOGGLE_PANEL:\n            return {\n                ...state,\n                showPanel: !state.showPanel\n            };\n        case types.TOGGLE_SEARCH:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isOpen: !state.search.isOpen\n                },\n                showPanel: true\n            };\n        case types.FETCH_CHATS_DONE:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data: sortChatList(action.payload),\n                    isFetching: false,\n                }\n            };\n        case types.FETCH_MESSAGES:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.id,\n                    isFetching: true,\n                    isOpen: true,\n                    user: action.payload.user\n                },\n                chatList: {\n                    ...state.chatList,\n                    data: (state.chatList.data || []).map(el => (action.payload.id === el.chat.id ?\n                        { ...el, chat: { ...el.chat, ...(action.payload.user.id === el.chat.userId ? {count: 0, userId: null} : {})}} : el))\n                },\n            };\n        case types.FETCH_MESSAGES_DONE:\n            message = action.payload.length && action.payload[0];\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    count: message ? message.chat.count : 0,\n                    userId: message ? message.chat.userId : 0,\n                    data: action.payload,\n                    isFetching: false\n                }\n            };\n        case types.ADD_NEW_MESSAGE:\n            message = action.payload.message;\n            data = ([...(state.chatList.data || [])]).map(elem => {\n                if (elem.chat.id === message.chat.id) {\n                    elem.message = message;\n                    elem.chat.count = message.chat.count;\n                    elem.chat.userId = message.chat.userId;\n                }\n                return elem;\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    // @ts-ignore\n                    data: sortChatList(data)\n                },\n                chat: {\n                    ...state.chat,\n                    count: state.chat.count + 1,\n                    data: state.chat.id === message.chat.id ? [...(state.chat.data || []), action.payload.message] : state.chat.data\n                }\n            };\n        case types.CHANGE_PAGE:\n            return {\n                ...state,\n                page: action.payload\n            };\n        case types.REMOVE_STORE:\n            return {\n                ...initialState,\n                page: \"login\"\n            };\n        case types.FETCH_USER:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: true\n                }\n            };\n        case types.FETCH_USER_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: false,\n                    data: {\n                        ...action.payload.user,\n                        online: true,\n                        time: new Date()\n                    }\n                }\n            };\n        case types.LOGIN:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.LOGIN_FAIL:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.REG:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.REG_FAIL:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.SEARCH:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: true\n                }\n            };\n        case types.SEARCH_DONE:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: false,\n                    data: action.payload\n                }\n            };\n        case types.CREATE_CHAT:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    isFetching: true,\n                    isOpen: true,\n                    user: action.payload.user\n                }\n            };\n        case types.CREATE_CHAT_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.chatId,\n                    isFetching: false,\n                    data: []\n                }\n            };\n        case types.ADD_CHAT_TO_LIST:\n            data = [...(state.chatList.data || [])];\n            data.push({\n                chat: {id: action.payload.chatId, count: 0, userId: null},\n                message: null as unknown as IMessage,\n                user: action.payload.user\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    // @ts-ignore\n                    data: sortChatList(data)\n                },\n                chat: action.payload.setChat ? {\n                    id: action.payload.chatId,\n                    isFetching: false,\n                    isOpen: true,\n                    data: [],\n                    user: action.payload.user,\n                    count: 0,\n                    userId: null\n                } : state.chat\n            };\n        case types.DELETE_MESSAGE_DONE:\n            message = action.payload.message;\n            if (message.chat.id !== state.chat.id)\n                return state;\n            messageList = [...(state.chat.data || [])]\n                .map(m => m.id === message.id ? undefined : m)\n                .filter(m => m);\n\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: messageList as IMessage[]\n                }\n            };\n        case types.EDIT_MESSAGE_DONE:\n            message = action.payload.message;\n            if (message.chat.id !== state.chat.id)\n                return state;\n            messageList = [...(state.chat.data || [])]\n                .map(m => m.id === message.id ? message : m);\n\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: messageList as IMessage[]\n                }\n            };\n        case types.CLOSE_CHAT:\n            return {\n                ...state,\n                chat: initialState.chat\n            };\n        case types.UPDATE_AVATAR_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    // @ts-ignore\n                    data: {\n                        ...(state.user.data || {}),\n                        avatar: action.payload.src\n                    }\n                }\n            };\n        case types.UPDATE_ABOUT_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    // @ts-ignore\n                    data: {\n                        ...(state.user.data || {}),\n                        about: action.payload.message\n                    }\n                }\n            };\n        case types.UPDATE_EMAIL_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    // @ts-ignore\n                    data: {\n                        ...(state.user.data || {}),\n                        email: action.payload.email,\n                        confirm: false\n                    }\n                }\n            };\n        case types.SEND_OPTIONS_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    // @ts-ignore\n                    data: {\n                        ...(state.user.data || {}),\n                        options: action.payload.options\n                    }\n                }\n            };\n        case types.CLEAR_LOGIN:\n            return {\n                ...state,\n                loginPage: initialState.loginPage\n            };\n        case types.CLEAR_REG:\n            return {\n                ...state,\n                regPage: initialState.regPage\n            };\n        case types.SET_TYPING_MESSAGE:\n            data = state.chatList.data || [];\n            const index = data.findIndex(el => el.chat.id === action.payload.chatId);\n            if (index === -1)\n                return state;\n\n            const chat = {...data[index]};\n            chat.isTyping = action.payload.isTyping;\n            chat.timeTyping = action.payload.timeTyping;\n\n            data[index] = chat;\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data\n                },\n                chat: state.chat.id !== action.payload.chatId ? state.chat : {\n                    ...state.chat,\n                    isTyping: action.payload.isTyping\n                }\n            };\n        case types.SET_ONLINE_USER:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    data: !state.user.data ? state.user.data : {\n                        ...state.user.data,\n                        online: action.payload.status,\n                        time: new Date()\n                    }\n                },\n                chat: {\n                    ...state.chat,\n                    user: !state.chat.user ? state.chat.user : {\n                        ...state.chat.user,\n                        online: action.payload.status,\n                        time: new Date()\n                    }\n                },\n                chatList: {\n                    ...state.chatList,\n                    data: !state.chatList.data ? state.chatList.data : state.chatList.data.map(el => ({\n                        ...el,\n                        user: !el.user || el.user.id !== action.payload.userId ? el.user : {\n                            ...el.user,\n                            online: action.payload.status,\n                            time: new Date()\n                        }\n                    }))\n                },\n                search: {\n                    ...state.search,\n                    data: !state.search.data ? state.search.data : state.search.data.map(user => ({\n                        ...user,\n                        online: action.payload.status,\n                        time: new Date()\n                    }))\n                }\n            };\n        case types.SET_READ_MESSAGE:\n        case types.READ_MESSAGE:\n            chatId = action.payload.chatId;\n\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data: (state.chatList.data || []).map(el => (chatId === el.chat.id ? { ...el, chat: { ...el.chat, count: 0, userId: null }} : el))\n                },\n                chat: state.chat.id !== chatId ? state.chat : { ...state.chat, count: 0, userId: null }\n            };\n        case types.INCREASE_COUNT:\n            chatId = action.payload.chatId;\n\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data: (state.chatList.data || []).map(el => (chatId === el.chat.id ? { ...el, chat: { ...el.chat, count: el.chat.count + 1 }} : el))\n                },\n                chat: state.chat.id !== chatId ? state.chat : { ...state.chat, count: state.chat.count + 1}\n            };\n        default:\n            return state;\n    }\n} ","import { createStore, applyMiddleware } from \"redux\";\nimport { watchSaga } from \"./redux/saga\";\nimport { reducer } from \"./redux/reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = () => {\n  const middlewareSaga = createSagaMiddleware();\n  const store = createStore(reducer, composeWithDevTools(\n    applyMiddleware(middlewareSaga)\n  ));\n  middlewareSaga.run(watchSaga);\n  return store;\n};\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./configStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}