{"version":3,"sources":["redux/constants.ts","redux/actions.ts","components/Header/index.tsx","components/ChatList/ChatElem/index.tsx","components/ChatList/index.tsx","services/socket/socket.ts","components/Message/Input/index.tsx","components/Message/MessageItem.tsx","components/Message/MessageList.tsx","components/ChatPage/index.tsx","components/Chat/index.tsx","components/LoginPage/LoginForm.tsx","helpers/index.ts","components/LoginPage/RegForm.tsx","components/LoginPage/Particles/particles.tsx","components/LoginPage/index.tsx","App.tsx","serviceWorker.ts","var/routers.ts","redux/saga.ts","redux/reducer.ts","configStore.ts","index.tsx"],"names":["FETCH_CHATS","FETCH_CHATS_DONE","FETCH_MESSAGES","FETCH_MESSAGES_DONE","TOGGLE_PANEL","ADD_NEW_MESSAGE","LOGIN","REG","CHANGE_PAGE","REMOVE_STORE","FETCH_USER","FETCH_USER_DONE","clearStore","type","types","fetchChats","fetchMessages","chatId","payload","id","togglePanel","newMessage","message","loginUser","login","password","regUser","avatar","changePage","page","fetchUser","connect","state","dispatch","actions","bindActionCreators","props","react_default","a","createElement","className","onClick","index_es","icon","faBars","faSearch","localStorage","removeItem","faSignOutAlt","ChatElem","name","date","Comment","Group","Avatar","src","Content","Author","as","Metadata","Text","chatList","useEffect","data","Fragment","map","elem","ChatList_ChatElem","key","chat","user","username","time","stompClient","Stomp","over","SockJS","socket","Object","objectSpread2","send","bind","action","console","log","subscribe","_ref","body","JSON","parse","MessageInput","Form","onSubmit","e","currentTarget","getElementsByTagName","value","stringify","userId","Input","placeholder","fluid","dayjs","extend","relativeTime","MessageItem","fromNow","Actions","Action","MessageList","Message_MessageItem","isOpen","isFetching","Loader","active","inline","Message_MessageList","Message_Input","showPanel","style","background","components_Header","components_ChatList","components_ChatPage","Dimmer","inverted","_useState","useState","_useState2","slicedToArray","setLogin","_useState3","_useState4","setPassword","Grid","textAlign","position","top","left","verticalAlign","Column","width","elements_Header_Header","size","Segment","stacked","iconPosition","onChange","event","Button","Message","href","fetchHeaderConfig","headers","Authorization","concat","getItem","imageList","toConsumableArray","amount","res","i","randomProfile","getAvatars","_useState5","_useState6","setAvatar","dist_default","images","image","onPick","initParticles","particlesJS","particles","number","density","enable","value_area","color","shape","stroke","polygon","nb_sides","height","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","config_demo","hide_card","background_color","background_image","background_position","background_repeat","background_size","LoginPage","LoginPage_LoginForm","LoginPage_RegForm","components_LoginPage","components_Chat","Boolean","window","location","hostname","match","prefix","CHAT_LIST","CHAT_MESSAGES","USER","watchSaga","regenerator_default","wrap","_context","prev","next","fetch","url","sent","json","put","t0","stop","_marked","_context2","_marked2","_context3","method","X-Requested-With","setItem","token","_marked3","_context4","error","_marked4","_action$payload","_context5","axios","_marked5","_context6","takeLatest","_marked6","initialState","undefined","reducer","arguments","length","store","middlewareSaga","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b29a4960.chunk.js","sourcesContent":["export const FETCH_CHATS = \"FETCH_CHATS\";\nexport const FETCH_CHATS_DONE = \"FETCH_CHATS_DONE\";\n\nexport const FETCH_MESSAGES = \"FETCH_MESSAGES\";\nexport const FETCH_MESSAGES_DONE = \"FETCH_MESSAGES_DONE\";\n\nexport const TOGGLE_PANEL = \"TOGGLE_PANEL\";\n\nexport const ADD_NEW_MESSAGE = \"ADD_NEW_MESSAGE\";\n\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGIN_DONE = \"LOGIN_DONE\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\n\nexport const REG = \"REG\";\nexport const REG_DONE = \"REG_DONE\";\nexport const REG_FAIL = \"REG_FAIL\";\n\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const REMOVE_STORE = \"REMOVE_STORE\";\n\nexport const FETCH_USER = \"FETCH_USER\";\nexport const FETCH_USER_DONE = \"FETCH_USER_DONE\";\nexport const FETCH_USER_FAIL = \"FETCH_USER_FAIL\";","import * as types from \"./constants\";\n\nexport const clearStore = () => ({\n  type: types.REMOVE_STORE\n});\n\n\nexport const fetchChats = () => ({\n    type: types.FETCH_CHATS\n});\n\nexport const fetchMessages = (chatId: number) => ({\n    type: types.FETCH_MESSAGES,\n    payload: {\n        id: chatId\n    }\n});\n\nexport const togglePanel = () => ({\n    type: types.TOGGLE_PANEL\n});\n\nexport const newMessage = (message: any) => {\n    return {\n        type: types.ADD_NEW_MESSAGE,\n        payload: {\n            message\n        }\n    }\n};\n\nexport const loginUser = (login: string, password: string) => ({\n    type: types.LOGIN,\n    payload: {\n        login,\n        password\n    }\n});\n\nexport const regUser = (login: string, password: string, avatar: string) => ({\n    type: types.REG,\n    payload: {\n        login,\n        password,\n        avatar\n    }\n});\n\nexport const changePage = (page: string) => ({\n    type: types.CHANGE_PAGE,\n    payload: page\n});\n\nexport const fetchUser = () => ({\n    type: types.FETCH_USER\n});\n","import React from \"react\";\nimport \"./styles.sass\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faSearch, faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst Header = (props: any) => {\n    const onLogOut = () => {\n        localStorage.removeItem('token');\n        props.actions.clearStore();\n    };\n\n\n    return (\n        <div className=\"header-wrap\">\n            <div className=\"left-side\">\n                <div className=\"icon-wrap\" onClick={() => props.actions.togglePanel()}>\n                    <FontAwesomeIcon icon={faBars}/>\n                </div>\n                <div className=\"icon-wrap\">\n                    <FontAwesomeIcon icon={faSearch}/>\n                </div>\n            </div>\n            <div className=\"right-size\">\n                <div className=\"icon-wrap\" onClick={onLogOut}>\n                    <FontAwesomeIcon icon={faSignOutAlt}/>\n                </div>\n            </div>\n\n        </div>\n    )\n};\n\n// togglePanel\nconst mapStateToProps = (state: IApp): any => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n","import React from 'react';\nimport \"./styles.sass\"\nimport {Comment} from \"semantic-ui-react\";\n\nexport interface IChatElem {\n    id: number;\n    name: string;\n    date: string;\n    message: string;\n    onClick: (id: number) => void;\n}\n\nconst ChatElem = (props: any) => {\n    const {name, date, message, id} = props;\n    return (\n        <div className=\"chat-elem-wrap\" onClick={() => props.onClick(id)}>\n            <Comment.Group>\n                <Comment>\n                    <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/joe.jpg' />\n                    <Comment.Content>\n                        <Comment.Author as='a'>{name}</Comment.Author>\n                        <Comment.Metadata>\n                            <div>Today at 5:42PM</div>\n                        </Comment.Metadata>\n                        <Comment.Text>{message ? message.message : \"\"}</Comment.Text>\n                    </Comment.Content>\n                </Comment>\n                </Comment.Group>\n        </div>\n    )\n};\n\n\nexport default ChatElem;","import ChatElem from \"./ChatElem\";\nimport React, {useEffect} from \"react\";\nimport \"./styles.sass\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport IApp, {IChatList, IChatView} from \"../../model/IApp\";\nimport {Input, Divider, Header} from \"semantic-ui-react\";\n\nconst mapStateToProps = (state: IApp): any => ({\n    chatList: state.chatList\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\ninterface IChatListProps {\n    actions: typeof actions;\n    chatList: IChatList;\n    chat: IChatView\n}\n\nconst ChatList = (props: IChatListProps) => {\n    useEffect(() => {\n        if (!props.chatList.data)\n            props.actions.fetchChats();\n    }, [props.actions]);\n\n    return (\n        <>\n\n           <div className=\"chat-list-wrap\">\n               {/*<Input placeholder='Search...' fluid/>*/}\n               {/*<Divider />*/}\n               {/*<Header as='h3'>Chats</Header>*/}\n                {props.chatList.data && props.chatList.data.map(elem => <ChatElem key={elem.chat.id} id={elem.chat.id}\n                                                                                  name={elem.user.username}\n                                                                                  date={elem.time}\n                                                                                  message={elem.message}\n                                                                                  onClick={(id: number) => props.actions.fetchMessages(elem.chat.id)}/>)}\n            </div>\n        </>\n    )\n};\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatList);","import SockJS from \"sockjs-client\";\nimport Stomp from 'stompjs';\nimport * as actions from \"../../redux/actions\";\n\nconst stompClient = Stomp.over(new SockJS('http://localhost:8080/ws'));\n\n\nconst connect = (action: typeof actions) => {\n    stompClient.connect({}, () => {\n        console.log('Connected');\n        stompClient.subscribe('/res/new-message', ({ body }) => action.newMessage(JSON.parse(body)));\n    });\n};\n\nexport default {\n    ...stompClient,\n    send: stompClient.send.bind(stompClient),\n    connect\n};","import React from 'react';\nimport {Form, Input} from 'semantic-ui-react'\nimport socket from \"../../../services/socket/socket\";\n\n\nexport const MessageInput = () => {\n    const sendMessage = (message: string) => {\n        socket.send('/req/new-message', {}, JSON.stringify({\n            chatId: 4,\n            userId: 1,\n            message\n        }))\n    };\n    return <Form onSubmit={(e) => sendMessage(e.currentTarget.getElementsByTagName(\"input\")[0].value)}>\n        <Input placeholder='Type a message...' fluid/>\n    </Form>\n};\n\n\n\nexport default MessageInput;","import {Comment} from \"semantic-ui-react\";\nimport React from \"react\";\nimport {IMessage} from \"../../model/IApp\";\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\ndayjs.extend(relativeTime);\n\n\nexport const MessageItem = (props: IMessage) => {\n    return (<Comment>\n        <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/joe.jpg'/>\n        <Comment.Content>\n            <Comment.Author as='a'>{props.user.username}</Comment.Author>\n            <Comment.Metadata>\n                <div>{dayjs(props.time).fromNow()}</div>\n            </Comment.Metadata>\n            <Comment.Text>{props.message}</Comment.Text>\n            <Comment.Actions>\n                <Comment.Action>Reply</Comment.Action>\n            </Comment.Actions>\n        </Comment.Content>\n    </Comment>)\n};\n\n\n\nexport default MessageItem;","import MessageItem from \"./MessageItem\";\nimport React from \"react\";\n\n\nexport const MessageList = (props: any) => {\n    return <> {props.chat.data.map((elem: any) => <MessageItem {...elem as any}/>) }</>\n};\n\n\n\nexport default MessageList;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {Header, Loader, Comment} from 'semantic-ui-react'\nimport './styles.sass'\nimport MessageInput from \"../Message/Input\";\nimport MessageList from \"../Message/MessageList\";\n\n\nconst ChatPage = (props: any) => {\n\n\n    return (\n        <div className=\"chat-page-wrapper\">\n            {props.chat.isOpen ? (\n                props.chat.isFetching ?\n                    (<div className=\"loader-wrap\">\n                        <Loader active inline='centered'/>\n                    </div>) :\n                    (\n                        <>\n                            <div className=\"messages-wrap\">\n                                <Comment.Group>\n                                    <MessageList {...props} />\n                                </Comment.Group>\n                            </div>\n                            <div className=\"input-wrap\">\n                                <MessageInput />\n                            </div>\n                        </>\n                    )\n            ) : (\n                \"close\"\n            )}\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatPage);\n","import React, {useEffect} from 'react';\nimport './styles.sass';\nimport Header from \"../Header\";\nimport ChatList from \"../ChatList\";\nimport ChatPage from \"../ChatPage\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport socket from '../../services/socket/socket';\nimport {Dimmer, Loader} from \"semantic-ui-react\";\n\nconst Chat = (props: any) => {\n    useEffect(() => {\n        socket.connect(props.actions)\n    }, [props.actions]);\n\n    useEffect(() => {\n        props.actions.fetchUser();\n    }, [props.actions]);\n    return (\n        props.user.data && !props.user.isFetching ? (\n        <div className=\"main-wrapper\">\n            <div style={ {background: \"white\"} }>\n                    <Header />\n                <div className=\"content-wrap\">\n                    {props.showPanel &&\n                    <ChatList {...props} />}\n                    <ChatPage />\n                </div>\n            </div>\n        </div>) : (\n            <Dimmer active inverted>\n                <Loader inverted />\n            </Dimmer>\n        )\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Chat);","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst LoginForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.loginUser(login, password);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"30%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Login to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                        />\n\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit}>\n                            Login\n                        </Button>\n                    </Segment>\n                </Form>\n                <Message>\n                    New to us? <a href=\"#\" onClick={() => props.actions.changePage(\"reg\")}>Sign Up</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginForm);","import randomProfile from 'random-profile-generator';\n\n\nexport const fetchHeaderConfig = () => ({\n    headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n});\n\nexport const getAvatars = (amount: number) => {\n    let res = [];\n    for(let i = 0; i<amount; i++)\n        res[i] = randomProfile.avatar();\n    return res;\n};","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment, Image } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport ImagePicker from 'react-image-picker'\nimport 'react-image-picker/dist/index.css'\nimport { getAvatars} from \"../../helpers\";\n\nconst imageList = [...getAvatars(14)];\n\nconst RegForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.regUser(login, password, avatar);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"20%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Sign up to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                        />\n                        <Header as='h4' textAlign='left'>\n                            Choose a photo\n                        </Header>\n                        <ImagePicker\n                            images={imageList.map((image, i) => ({src: image, value: i}))}\n                            onPick={(data: any) => setAvatar(data.src)}\n                        />\n\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit}>\n                            Sign up\n                        </Button>\n                    </Segment>\n                </Form>\n                <Message>\n                    Already has account? <a href='#'  onClick={() => props.actions.changePage(\"login\")}>Login</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegForm);","import './styles.sass'\n\n\nconst initParticles = () => {\n    //@ts-ignore\n    // eslint-disable-next-line no-undef\n    particlesJS('particles-js',\n\n        {\n            \"particles\": {\n                \"number\": {\n                    \"value\": 80,\n                    \"density\": {\n                        \"enable\": true,\n                        \"value_area\": 800\n                    }\n                },\n                \"color\": {\n                    \"value\": \"#ffffff\"\n                },\n                \"shape\": {\n                    \"type\": \"circle\",\n                    \"stroke\": {\n                        \"width\": 0,\n                        \"color\": \"#000000\"\n                    },\n                    \"polygon\": {\n                        \"nb_sides\": 5\n                    },\n                    \"image\": {\n                        \"src\": \"img/github.svg\",\n                        \"width\": 100,\n                        \"height\": 100\n                    }\n                },\n                \"opacity\": {\n                    \"value\": 0.5,\n                    \"random\": false,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 1,\n                        \"opacity_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"size\": {\n                    \"value\": 5,\n                    \"random\": true,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 40,\n                        \"size_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"line_linked\": {\n                    \"enable\": true,\n                    \"distance\": 150,\n                    \"color\": \"#ffffff\",\n                    \"opacity\": 0.4,\n                    \"width\": 1\n                },\n                \"move\": {\n                    \"enable\": true,\n                    \"speed\": 2,\n                    \"direction\": \"none\",\n                    \"random\": false,\n                    \"straight\": false,\n                    \"out_mode\": \"out\",\n                    \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 1200\n                    }\n                }\n            },\n            \"interactivity\": {\n                \"detect_on\": \"canvas\",\n                \"events\": {\n                    \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                    },\n                    \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"push\"\n                    },\n                    \"resize\": true\n                },\n                \"modes\": {\n                    \"grab\": {\n                        \"distance\": 400,\n                        \"line_linked\": {\n                            \"opacity\": 1\n                        }\n                    },\n                    \"bubble\": {\n                        \"distance\": 400,\n                        \"size\": 40,\n                        \"duration\": 2,\n                        \"opacity\": 8,\n                        \"speed\": 3\n                    },\n                    \"repulse\": {\n                        \"distance\": 200\n                    },\n                    \"push\": {\n                        \"particles_nb\": 4\n                    },\n                    \"remove\": {\n                        \"particles_nb\": 2\n                    }\n                }\n            },\n            \"retina_detect\": true,\n            \"config_demo\": {\n                \"hide_card\": false,\n                \"background_color\": \"#b61924\",\n                \"background_image\": \"\",\n                \"background_position\": \"50% 50%\",\n                \"background_repeat\": \"no-repeat\",\n                \"background_size\": \"cover\"\n            }\n        }\n\n    );\n}\n//         Particles\n//                 // @ts-ignore\n//                 params={{\n//                     \"particles\": {\n//                         \"number\": {\n//                             \"value\": 80,\n//                             \"density\": {\n//                                 \"enable\": true,\n//                                 \"value_area\": 800\n//                             }\n//                         },\n//                         \"color\": {\n//                             \"value\": \"#ffffff\"\n//                         },\n//                         \"shape\": {\n//                             \"type\": \"circle\",\n//                             \"stroke\": {\n//                                 \"width\": 0,\n//                                 \"color\": \"#000000\"\n//                             },\n//                             \"polygon\": {\n//                                 \"nb_sides\": 5\n//                             },\n//                             \"image\": {\n//                                 \"src\": \"img/github.svg\",\n//                                 \"width\": 100,\n//                                 \"height\": 100\n//                             }\n//                         },\n//                         \"opacity\": {\n//                             \"value\": 0.5,\n//                             \"random\": false,\n//                             \"anim\": {\n//                                 \"enable\": false,\n//                                 \"speed\": 1,\n//                                 \"opacity_min\": 0.1,\n//                                 \"sync\": false\n//                             }\n//                         },\n//                         \"size\": {\n//                             \"value\": 10,\n//                             \"random\": true,\n//                             \"anim\": {\n//                                 \"enable\": false,\n//                                 \"speed\": 40,\n//                                 \"size_min\": 0.1,\n//                                 \"sync\": false\n//                             }\n//                         },\n//                         \"line_linked\": {\n//                             \"enable\": true,\n//                             \"distance\": 150,\n//                             \"color\": \"#ffffff\",\n//                             \"opacity\": 0.4,\n//                             \"width\": 1\n//                         },\n//                         \"move\": {\n//                             \"enable\": true,\n//                             \"speed\": 2,\n//                             \"direction\": \"none\",\n//                             \"random\": false,\n//                             \"straight\": false,\n//                             \"out_mode\": \"out\",\n//                             \"attract\": {\n//                                 \"enable\": false,\n//                                 \"rotateX\": 600,\n//                                 \"rotateY\": 1200\n//                             }\n//                         }\n//                     },\n//                     \"interactivity\": {\n//                         \"detect_on\": \"canvas\",\n//                         \"events\": {\n//                             \"onhover\": {\n//                                 \"enable\": true,\n//                                 \"mode\": \"repulse\"\n//                             },\n//                             \"onclick\": {\n//                                 \"enable\": true,\n//                                 \"mode\": \"push\"\n//                             },\n//                             \"resize\": true\n//                         },\n//                         \"modes\": {\n//                             \"grab\": {\n//                                 \"distance\": 400,\n//                                 \"line_linked\": {\n//                                     \"opacity\": 1\n//                                 }\n//                             },\n//                             \"bubble\": {\n//                                 \"distance\": 400,\n//                                 \"size\": 40,\n//                                 \"duration\": 2,\n//                                 \"opacity\": 8,\n//                                 \"speed\": 3\n//                             },\n//                             \"repulse\": {\n//                                 \"distance\": 200\n//                             },\n//                             \"push\": {\n//                                 \"particles_nb\": 4\n//                             },\n//                             \"remove\": {\n//                                 \"particles_nb\": 2\n//                             }\n//                         }\n//                     },\n//                     \"retina_detect\": true,\n//                 }\n//                 }\n//                 style={{\n//                     width: '100%',\n//                 }}\n//                 canvasClassName={\"canvas\"}\n//             >\n//                 {props.children}\n//             </Particles>\n//         </div>\n//     )\n// };\nexport default initParticles;","import React, {useEffect} from 'react';\nimport LoginForm from \"./LoginForm\";\nimport RegForm from \"./RegForm\";\nimport initParticles from \"./Particles/particles\";\nimport './Particles/styles.sass'\n\n\nconst LoginPage = (props: any) => {\n    useEffect(() => {initParticles()}, [])\n\n    return (\n        <>\n            <div id=\"particles-js\" />\n            {props.page === \"login\" ? <LoginForm/> : <RegForm/>}\n        </>\n    )\n};\n\n\nexport default LoginPage;","import React from \"react\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport 'semantic-ui-css/semantic.min.css'\nimport LoginPage from \"./components/LoginPage\";\nimport IApp from \"./model/IApp\";\nimport {connect} from \"react-redux\";\n\nconst App: React.FC = (props: any) => {\n    switch (props.page) {\n        case \"login\":\n        case 'reg':\n            return <LoginPage page={props.page}/>;\n        default:\n            return (\n                <div className=\"App\">\n                    <Chat/>\n                </div>\n            )\n    }\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    page: state.page\n});\n\nexport default connect(\n    mapStateToProps,\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const prefix = \"http://localhost:8080\";\n\n\nexport const CHAT_LIST = `${prefix}/api/chats`;\nexport const CHAT_MESSAGES = `${prefix}/api/chat/`;\nexport const LOGIN = `${prefix}/api/auth/login`;\nexport const USER = `${prefix}/api/me`;\nexport const REG = `http://localhost:8080/req`;","import {takeLatest, put} from \"redux-saga/effects\";\nimport * as types from \"./constants\";\nimport * as url from \"../var/routers\";\nimport {fetchHeaderConfig} from \"../helpers\";\nimport axios from 'axios';\n\nfunction* fetchChats(action: any) {\n    try {\n        let res = yield fetch(url.CHAT_LIST, { headers: fetchHeaderConfig().headers });\n        res = yield res.json();\n        yield put({type: types.FETCH_CHATS_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* fetchMessages(action: any) {\n    try {\n        let res = yield fetch(url.CHAT_MESSAGES + action.payload.id, { headers: fetchHeaderConfig().headers});\n        res = yield res.json();\n        yield put({type: types.FETCH_MESSAGES_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* loginUser(action: any) {\n\n    try{\n        let res = yield fetch(url.LOGIN, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: action.payload.login,\n                password: action.payload.password\n            }),\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            }\n        });\n        res = yield res.json();\n        localStorage.setItem('token', res.token);\n        yield put({\n            type: types.CHANGE_PAGE,\n            payload: \"chat\"\n        })\n    }catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* fetchUser(action: any) {\n    try{\n        let res = yield fetch(url.USER, {\n            method: \"GET\",\n            headers: fetchHeaderConfig().headers\n        });\n        res = yield res.json();\n\n        yield put({\n            type: types.FETCH_USER_DONE,\n            payload: {\n                user: res\n            }\n        })\n    }catch (e) {\n        console.error(e);\n        localStorage.removeItem('token');\n        yield put({\n            type: types.REMOVE_STORE\n        })\n    }\n}\n\nfunction* regUser(action: any){\n    const { login, password, avatar } = action.payload;\n    try{\n        let res = yield axios({\n            method: \"POST\",\n            url: url.REG,\n            data: {\n                username: login,\n                password,\n                avatar\n            }\n        })\n        console.log(res);\n\n        res = yield res.json();\n\n        console.log(res);\n    }catch (e) {\n        console.error(e);\n    }\n}\n\nexport function* watchSaga() {\n    yield takeLatest(types.FETCH_CHATS, fetchChats);\n    yield takeLatest(types.FETCH_MESSAGES, fetchMessages);\n    yield takeLatest(types.LOGIN, loginUser);\n    yield takeLatest(types.FETCH_USER, fetchUser);\n    yield takeLatest(types.REG, regUser);\n}","import IApp, {IUser} from './../model/IApp'\nimport IAction from './../model/IAction'\nimport * as types from './constants';\n\nconst initialState: IApp = {\n    chatList: {\n        data: null,\n        isFetching: false\n    },\n    user: {\n      isFetching: false,\n      data: null\n    },\n    chat: {\n        isFetching: false,\n        isOpen: false,\n        data: []\n    },\n    showPanel: true,\n    page: localStorage.getItem('token') && localStorage.getItem('token') !== undefined ? \"chat\" : \"login\"\n};\n\nexport function reducer (state: IApp = initialState, action: IAction): IApp {\n    switch(action.type) {\n        case types.FETCH_CHATS:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    isFetching: true\n                }\n            };\n        case types.TOGGLE_PANEL:\n            return {\n                ...state,\n                showPanel: !state.showPanel\n            };\n        case types.FETCH_CHATS_DONE:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data: action.payload,\n                    isFetching: false,\n                }\n            };\n        case types.FETCH_MESSAGES:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    isFetching: true,\n                    isOpen: true\n                }\n            };\n        case types.FETCH_MESSAGES_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: action.payload,\n                    isFetching: false\n                }\n            };\n        case types.ADD_NEW_MESSAGE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: [...(state.chat.data || []), action.payload.message]\n                }\n            };\n        case types.CHANGE_PAGE:\n            return {\n                ...state,\n                page: action.payload\n            };\n        case types.REMOVE_STORE:\n            return {\n                ...initialState,\n                page: \"login\"\n            };\n        case types.FETCH_USER:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: true\n                }\n            };\n        case types.FETCH_USER_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: false,\n                    data: action.payload.user\n                }\n            };\n        default:\n            return state;\n    }\n} ","import { createStore, applyMiddleware } from \"redux\";\nimport { watchSaga } from \"./redux/saga\";\nimport { reducer } from \"./redux/reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = () => {\n  const middlewareSaga = createSagaMiddleware();\n  const store = createStore(reducer, composeWithDevTools(\n    applyMiddleware(middlewareSaga)\n  ));\n  middlewareSaga.run(watchSaga);\n  return store;\n};\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./configStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}