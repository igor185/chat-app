{"version":3,"sources":["redux/constants.ts","redux/actions.ts","components/Search/Search.tsx","components/Header/index.tsx","helpers/index.ts","components/ChatList/ChatElem/index.tsx","components/ChatList/index.tsx","var/routers.ts","services/socket/socket.ts","components/Message/Input/index.tsx","components/Message/MessageItem.tsx","components/Message/MessageList.tsx","components/ChatPage/index.tsx","components/Chat/index.tsx","components/LoginPage/LoginForm.tsx","components/LoginPage/RegForm.tsx","components/LoginPage/Particles/particles.tsx","components/LoginPage/index.tsx","App.tsx","serviceWorker.ts","helpers/webApi.tsx","redux/saga.ts","redux/reducer.ts","configStore.ts","index.tsx"],"names":["FETCH_CHATS","FETCH_CHATS_DONE","FETCH_MESSAGES","FETCH_MESSAGES_DONE","TOGGLE_PANEL","ADD_NEW_MESSAGE","LOGIN","LOGIN_FAIL","REG","REG_FAIL","CHANGE_PAGE","REMOVE_STORE","FETCH_USER","FETCH_USER_DONE","SEARCH","SEARCH_DONE","CREATE_CHAT","CREATE_CHAT_DONE","ADD_CHAT_TO_LIST","clearStore","type","types","fetchChats","fetchMessages","chatId","payload","id","togglePanel","newMessage","message","loginUser","login","password","regUser","avatar","changePage","page","fetchUser","search","newChat","userId","addChatToList","user","addMessageToChatList","options","key","text","value","connect","state","chatList","dispatch","actions","bindActionCreators","props","_useState","useState","_useState2","Object","slicedToArray","setValue","_useState3","_useState4","open","setOpen","react_default","a","createElement","Modal","trigger","className","onClick","index_es","icon","faSearch","Header","Content","scrolling","Form","onSubmit","Input","label","Dropdown","defaultValue","labelPosition","placeholder","fluid","loading","isFetching","onChange","e","data","length","Fragment","Header_Header","as","map","Comment","Group","Avatar","src","Author","username","Actions","Action","chat","find","elem","onText","faBars","components_Search_Search","localStorage","removeItem","faSignOutAlt","dayjs","extend","relativeTime","fetchHeaderConfig","headers","Authorization","concat","getItem","fromNow","date","ChatElem","name","Metadata","Text","useEffect","ChatList_ChatElem","time","prefix","SOCKET_URL","CHAT_LIST","CHAT_MESSAGES","USER","NEW_CHAT","stompClient","socket","destination","body","send","action","store","connected","console","log","Stomp","over","SockJS","url","subscribe","_ref","JSON","parse","_ref2","user1","user2","stringify","MessageItem","MessageList","Message_MessageItem","assign","isOpen","Loader","active","inline","Message_MessageList","Message_Input","showPanel","style","background","components_Header","components_ChatList","components_ChatPage","Dimmer","inverted","loginPage","setLogin","setPassword","Grid","textAlign","position","top","left","verticalAlign","Column","width","size","Segment","stacked","iconPosition","event","error","Button","Message","href","imageList","toConsumableArray","amount","res","i","randomProfile","getAvatars","regPage","_useState5","_useState6","setAvatar","react_image_picker_dist_default","images","image","onPick","content","initParticles","particlesJS","particles","number","density","enable","value_area","color","shape","stroke","polygon","nb_sides","height","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","config_demo","hide_card","background_color","background_image","background_position","background_repeat","background_size","LoginPage","LoginPage_LoginForm","LoginPage_RegForm","components_LoginPage","components_Chat","Boolean","window","location","hostname","match","request","asyncToGenerator","regenerator_default","mark","_callee","input","init","promise","wrap","_context","prev","next","objectSpread2","Headers","Content-Type","fetch","sent","status","abrupt","reload","ok","t0","json","t1","call","Error","statusText","stop","_x","_x2","apply","this","arguments","watchSaga","put","_marked","_context2","_marked2","_context3","method","X-Requested-With","setItem","token","_marked3","_context4","_marked4","_action$payload","_context5","axios","_marked5","_context6","_marked6","_context7","_marked7","_context8","takeLatest","_marked8","initialState","reducer","undefined","middlewareSaga","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.792113c8.chunk.js","sourcesContent":["export const FETCH_CHATS = \"FETCH_CHATS\";\nexport const FETCH_CHATS_DONE = \"FETCH_CHATS_DONE\";\n\nexport const FETCH_MESSAGES = \"FETCH_MESSAGES\";\nexport const FETCH_MESSAGES_DONE = \"FETCH_MESSAGES_DONE\";\n\nexport const TOGGLE_PANEL = \"TOGGLE_PANEL\";\n\nexport const ADD_NEW_MESSAGE = \"ADD_NEW_MESSAGE\";\n\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGIN_DONE = \"LOGIN_DONE\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\n\nexport const REG = \"REG\";\nexport const REG_DONE = \"REG_DONE\";\nexport const REG_FAIL = \"REG_FAIL\";\n\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\nexport const REMOVE_STORE = \"REMOVE_STORE\";\n\nexport const FETCH_USER = \"FETCH_USER\";\nexport const FETCH_USER_DONE = \"FETCH_USER_DONE\";\nexport const FETCH_USER_FAIL = \"FETCH_USER_FAIL\";\n\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_DONE = \"SEARCH_DONE\";\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\n\nexport const CREATE_CHAT = \"CREATE_CHAT\";\nexport const CREATE_CHAT_DONE = \"CREATE_CHAT_DONE\";\nexport const CREATE_CHAT_FAIL = \"CREATE_CHAT_FAIL\";\n\nexport const ADD_CHAT_TO_LIST = \"ADD_CHAT_TO_LIST\";","import * as types from \"./constants\";\nimport {IMessage, IUser} from \"../model/IApp\";\n\nexport const clearStore = () => ({\n  type: types.REMOVE_STORE\n});\n\n\nexport const fetchChats = () => ({\n    type: types.FETCH_CHATS\n});\n\nexport const fetchMessages = (chatId: number) => ({\n    type: types.FETCH_MESSAGES,\n    payload: {\n        id: chatId\n    }\n});\n\nexport const togglePanel = () => ({\n    type: types.TOGGLE_PANEL\n});\n\nexport const newMessage = (message: IMessage) => {\n    return {\n        type: types.ADD_NEW_MESSAGE,\n        payload: {\n            message\n        }\n    }\n};\n\nexport const loginUser = (login: string, password: string) => ({\n    type: types.LOGIN,\n    payload: {\n        login,\n        password\n    }\n});\n\nexport const regUser = (login: string, password: string, avatar: string) => ({\n    type: types.REG,\n    payload: {\n        login,\n        password,\n        avatar\n    }\n});\n\nexport const changePage = (page: string) => ({\n    type: types.CHANGE_PAGE,\n    payload: page\n});\n\nexport const fetchUser = () => ({\n    type: types.FETCH_USER\n});\n\nexport const search = (search: string) => ({\n   type: types.SEARCH,\n   payload: { search }\n});\n\nexport const newChat = (userId: number) => ({\n    type: types.CREATE_CHAT,\n    payload: {\n        userId\n    }\n});\n\nexport const addChatToList = (chatId: number, user: IUser) => ({\n    type: types.ADD_CHAT_TO_LIST,\n    payload: {\n        chatId,\n        user\n    }\n});\n\nexport const addMessageToChatList = (chatId: number, message: IMessage) => {}\n","import React, {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport {Dropdown, Form, Header, Icon, Input, Modal, Comment} from \"semantic-ui-react\";\n\nimport './styles.sass'\nimport IApp, {IUser} from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst options = [\n    {key: 'user', text: 'User', value: 'user'},\n];\n\nconst Search = (props: any) => {\n    const [value, setValue] = useState(\"\");\n    const [open, setOpen] = useState(false);\n\n    const onSearch = () => {\n        props.actions.search(value);\n    };\n\n    const onText = (user: IUser) => {\n        setOpen(false);\n\n        const chat = props.chatList.data.find( (elem: any) =>elem.user.id === user.id);\n        if(chat){\n            return props.actions.fetchMessages(chat.chat.id);\n        }\n        props.actions.newChat(user.id);\n    };\n\n\n    return (\n        <Modal\n            open={open}\n            trigger={<div className=\"icon-wrap\" onClick={() => setOpen(true)}>\n                <FontAwesomeIcon icon={faSearch}/></div>}>\n            <Modal.Header>Search</Modal.Header>\n            <Modal.Content\n                scrolling>\n                <Form onSubmit={onSearch}><Input\n                    label={<Dropdown defaultValue={options[0].value} options={options}/>}\n                    labelPosition='left'\n                    placeholder='Search...'\n                    fluid\n                    loading={props.search.isFetching}\n                    value={value}\n                    onChange={(e, data) => setValue(data.value)}\n                />\n                    {props.search.data && props.search.data.length > 0 && (\n                        <>\n                            <Header as={'h2'}>Results</Header>\n                            {props.search.data.map((user: IUser) => (\n                                <Comment.Group>\n                                    <Comment>\n                                        <Comment.Avatar as='a' src={user.avatar}/>\n                                        <Comment.Content>\n                                            <Comment.Author>{user.username}</Comment.Author>\n                                            {/*<Comment.Text>*/}\n                                            {/*    This will be great for business reports. I will definitely download*/}\n                                            {/*    this.*/}\n                                            {/*</Comment.Text>*/}\n                                            <Comment.Actions>\n                                                <Comment.Action><span onClick={() => {onText(user)}}>Text</span></Comment.Action>\n                                            </Comment.Actions>\n                                        </Comment.Content>\n                                    </Comment>\n                                </Comment.Group>\n                            ))}\n                        </>\n                    )}\n                </Form>\n            </Modal.Content>\n        </Modal>\n    );\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    search: state.search,\n    chatList: state.chatList\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Search);\n","import React from \"react\";\nimport \"./styles.sass\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars, faSearch, faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport Search from \"../Search/Search\";\n\nconst Header = (props: any) => {\n    const onLogOut = () => {\n        localStorage.removeItem('token');\n        props.actions.clearStore();\n    };\n\n\n    return (\n        <div className=\"header-wrap\">\n            <div className=\"left-side\">\n                <div className=\"icon-wrap\" onClick={() => props.actions.togglePanel()}>\n                    <FontAwesomeIcon icon={faBars}/>\n                </div>\n                <Search />\n            </div>\n            <div className=\"right-size\">\n                <div className=\"icon-wrap\" onClick={onLogOut}>\n                    <FontAwesomeIcon icon={faSignOutAlt}/>\n                </div>\n            </div>\n\n        </div>\n    )\n};\n\n// togglePanel\nconst mapStateToProps = (state: IApp): any => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n","import randomProfile from 'random-profile-generator';\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\ndayjs.extend(relativeTime);\n\n\nexport const fetchHeaderConfig = () => ({\n    headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n});\n\nexport const getAvatars = (amount: number) => {\n    let res = [];\n    for(let i = 0; i<amount; i++)\n        res[i] = randomProfile.avatar();\n    return res;\n};\n\nexport const fromNow = (date: string) => dayjs(date).fromNow();","import React from 'react';\nimport \"./styles.sass\"\nimport {Comment} from \"semantic-ui-react\";\nimport {fromNow} from \"../../../helpers\";\n\nexport interface IChatElem {\n    id: number;\n    name: string;\n    date: string;\n    message: string;\n    onClick: (id: number) => void;\n}\n\nconst ChatElem = (props: any) => {\n    const {name, date, message, id, avatar} = props;\n    return (\n        <div className=\"chat-elem-wrap\" onClick={() => props.onClick(id)}>\n            <Comment.Group>\n                <Comment>\n                    <Comment.Avatar src={avatar} />\n                    <Comment.Content>\n                        <Comment.Author as='a'>{name}</Comment.Author>\n                        <Comment.Metadata>\n                            <div>{fromNow(date)}</div>\n                        </Comment.Metadata>\n                        <Comment.Text>{message ? message.message : \"\"}</Comment.Text>\n                    </Comment.Content>\n                </Comment>\n                </Comment.Group>\n        </div>\n    )\n};\n\n\nexport default ChatElem;","import ChatElem from \"./ChatElem\";\nimport React, {useEffect} from \"react\";\nimport \"./styles.sass\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport IApp, {IChatList, IChatView} from \"../../model/IApp\";\nimport {Input, Divider, Header} from \"semantic-ui-react\";\n\nconst mapStateToProps = (state: IApp): any => ({\n    chatList: state.chatList\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\ninterface IChatListProps {\n    actions: typeof actions;\n    chatList: IChatList;\n    chat: IChatView\n}\n\nconst ChatList = (props: IChatListProps) => {\n    useEffect(() => {\n        if (!props.chatList.data)\n            props.actions.fetchChats();\n    }, [props.actions]);\n\n    return (\n        <>\n\n            <div className=\"chat-list-wrap\">\n                {props.chatList.data && props.chatList.data.map(elem => elem && elem.message && (\n                    <ChatElem key={elem.chat.id} id={elem.chat.id}\n                              name={elem.user.username}\n                              date={elem.message.time}\n                              message={elem.message}\n                              avatar={elem.user.avatar}\n                              onClick={(id: number) => props.actions.fetchMessages(elem.chat.id)}/>\n                ))}\n            </div>\n        </>\n    )\n};\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatList);","// const prefix = \"https://igor-babin-chat-java.herokuapp.com\";\nconst prefix = \"http://localhost:8080\";\n\n\nexport const SOCKET_URL = `${prefix}/ws`;\nexport const CHAT_LIST = `${prefix}/api/chats`;\nexport const CHAT_MESSAGES = `${prefix}/api/chat/`;\nexport const LOGIN = `${prefix}/api/auth/login`;\nexport const USER = `${prefix}/api/me`;\nexport const REG = `${prefix}/req`;\nexport const SEARCH = `${prefix}/api/users`;\nexport const NEW_CHAT = `${prefix}/api/chat`;","import SockJS from \"sockjs-client\";\nimport Stomp, {Client} from 'stompjs';\nimport * as actions from \"../../redux/actions\";\nimport * as url from '../../var/routers'\nimport IApp, {IUser} from \"../../model/IApp\";\n\nlet stompClient = {} as Client;\n\n\n\nconst connect = (action: typeof actions, store: IApp) => {\n    if(stompClient.connected){\n        console.log(\"already connected\");\n        return;\n    }\n\n\n    const user = store.user.data as IUser;\n\n    stompClient = Stomp.over(new SockJS(url.SOCKET_URL));\n    stompClient.connect({}, () => {\n        console.log('Connected', store.user);\n\n\n\n        stompClient.subscribe(`/res/new-message/${user.id}`, ({ body }) => action.newMessage(JSON.parse(body)));\n\n        stompClient.subscribe(`/res/new-chat/${user.id}`, ({ body }: { body: string}) => {\n            const newChat: { chatId: number, user1: IUser, user2: IUser} = JSON.parse(body);\n\n            action.addChatToList(newChat.chatId, newChat.user1.id === user.id ? newChat.user1 : newChat.user2);\n\n        });\n    });\n};\n\nconst send = (destination: string, headers?: {}, body?: string) => {\n    return stompClient.send(destination, headers, body);\n};\n\nexport default {\n    stompClient,\n    send,\n    connect\n};","import React, {useState} from 'react';\nimport {Form, Input} from 'semantic-ui-react'\nimport socket from \"../../../services/socket/socket\";\nimport IApp from \"../../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../../redux/actions\";\nimport {connect} from \"react-redux\";\n\n\nexport const MessageInput = (props: any) => {\n    const [value, setValue] = useState(\"\");\n    const sendMessage = () => {\n        if(!value)\n            return;\n        socket.send('/req/new-message', {}, JSON.stringify({\n            chatId: props.chat.id,\n            userId: props.user.data.id,\n            message: value\n        }));\n        setValue(\"\");\n    };\n    return <Form onSubmit={(e) => sendMessage()}>\n        <Input placeholder='Type a message...' fluid value={value} onChange={(e, data) => setValue(data.value)}/>\n    </Form>\n};\n\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    user: state.user,\n    chat: state.chat\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MessageInput);","import {Comment} from \"semantic-ui-react\";\nimport React from \"react\";\nimport {IMessage} from \"../../model/IApp\";\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport {fromNow} from \"../../helpers\";\ndayjs.extend(relativeTime);\n\n\nexport const MessageItem = (props: IMessage) => {\n    return (<Comment>\n        <Comment.Avatar src={props.user.avatar}/>\n        <Comment.Content>\n            <Comment.Author as='a'>{props.user.username}</Comment.Author>\n            <Comment.Metadata>\n                <div>{fromNow(props.time)}</div>\n            </Comment.Metadata>\n            <Comment.Text>{props.message}</Comment.Text>\n            <Comment.Actions>\n                <Comment.Action>Reply</Comment.Action>\n            </Comment.Actions>\n        </Comment.Content>\n    </Comment>)\n};\n\n\n\nexport default MessageItem;","import MessageItem from \"./MessageItem\";\nimport React from \"react\";\n\n\nexport const MessageList = (props: any) => {\n    return <> {props.chat.data.map((elem: any) => <MessageItem key={elem.id} {...elem as any}/>) }</>\n};\n\n\n\nexport default MessageList;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {Header, Loader, Comment} from 'semantic-ui-react'\nimport './styles.sass'\nimport MessageInput from \"../Message/Input\";\nimport MessageList from \"../Message/MessageList\";\n\n\nconst ChatPage = (props: any) => {\n\n\n    return (\n        <div className=\"chat-page-wrapper\">\n            {props.chat.isOpen ? (\n                props.chat.isFetching ?\n                    (<div className=\"loader-wrap\">\n                        <Loader active inline='centered'/>\n                    </div>) :\n                    (\n                        <>\n                            <div className=\"messages-wrap\">\n                                <Comment.Group>\n                                    <MessageList {...props} />\n                                </Comment.Group>\n                            </div>\n                            <div className=\"input-wrap\">\n                                <MessageInput />\n                            </div>\n                        </>\n                    )\n            ) : (\n                \"close\"\n            )}\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state: IApp): any => ({\n    chat: state.chat\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatPage);\n","import React, {useEffect} from 'react';\nimport './styles.sass';\nimport Header from \"../Header\";\nimport ChatList from \"../ChatList\";\nimport ChatPage from \"../ChatPage\";\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport socket from '../../services/socket/socket';\nimport {Dimmer, Loader} from \"semantic-ui-react\";\n\nconst Chat = (props: any) => {\n    useEffect(() => {\n        if(props.actions && props.user.data) {\n            console.log('init');\n            socket.connect(props.actions, props.state)\n        }\n    }, [props.actions, props.user]);\n\n    useEffect(() => {\n        props.actions.fetchUser();\n    }, [props.actions]);\n    return (\n        props.user.data && !props.user.isFetching ? (\n        <div className=\"main-wrapper\">\n            <div style={ {background: \"white\"} }>\n                    <Header />\n                <div className=\"content-wrap\">\n                    {props.showPanel &&\n                    <ChatList {...props} />}\n                    <ChatPage />\n                </div>\n            </div>\n        </div>) : (\n            <Dimmer active inverted>\n                <Loader inverted />\n            </Dimmer>\n        )\n    )\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    state,\n    showPanel: state.showPanel,\n    user: state.user\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Chat);","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\n\nconst LoginForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.loginUser(login, password);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"30%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Login to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                            error={props.loginPage && !!props.loginPage.error}\n                        />\n\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.loginPage && props.loginPage.isFetching}>\n                            Login\n                        </Button>\n                    </Segment>\n                </Form>\n                <Message>\n                    New to us? <a href=\"#\" onClick={() => props.actions.changePage(\"reg\")}>Sign Up</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    loginPage: state.loginPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginForm);","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment, Image } from 'semantic-ui-react'\nimport IApp from \"../../model/IApp\";\nimport {bindActionCreators} from \"redux\";\nimport * as actions from \"../../redux/actions\";\nimport {connect} from \"react-redux\";\nimport ImagePicker from 'react-image-picker'\nimport 'react-image-picker/dist/index.css'\nimport { getAvatars} from \"../../helpers\";\n\nconst imageList = [...getAvatars(14)];\n\nconst RegForm = (props: any) => {\n    const [login, setLogin] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [avatar, setAvatar] = useState(\"\");\n\n\n    const onSubmit = () => props.actions.regUser(login, password, avatar);\n\n    console.log(props.regPage && props.regPage.error);\n\n    return (\n        <Grid textAlign='center' style={{  position: \"absolute\", top: \"20%\", left: \"35%\" }} verticalAlign='middle'>\n            <Grid.Column style={{ width: 500, background: \"white\" }}>\n                <Header as='h2' textAlign='center'>\n                    Sign up to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                        <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' value={login} onChange={(event, data) => setLogin(data.value)}/>\n                        <Form.Input\n                            fluid\n                            icon='lock'\n                            iconPosition='left'\n                            placeholder='Password'\n                            type='password'\n                            value={password}\n                            onChange={(event, data) => setPassword(data.value)}\n                        />\n                        <Header as='h4' textAlign='left'>\n                            Choose a photo\n                        </Header>\n                        <ImagePicker\n                            images={imageList.map((image, i) => ({src: image, value: i}))}\n                            onPick={(data: any) => setAvatar(data.src)}\n                        />\n                        <Button className={\"color-btn\"} fluid size='large' onClick={onSubmit} loading={props.regPage && props.regPage.isFetching}>\n                            Sign up\n                        </Button>\n                    </Segment>\n                </Form>\n                {props.regPage && !!props.regPage.error && (<Message\n                    error\n                    content={props.regPage.error}\n                />)}\n                <Message>\n                    Already has account? <a href='#'  onClick={() => props.actions.changePage(\"login\")}>Login</a>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state: IApp): any => ({\n    showPanel: state.showPanel,\n    regPage: state.regPage\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    actions: bindActionCreators(actions, dispatch)\n});\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegForm);","import './styles.sass'\n\n\nconst initParticles = () => {\n    //@ts-ignore\n    // eslint-disable-next-line no-undef\n    particlesJS('particles-js',\n\n        {\n            \"particles\": {\n                \"number\": {\n                    \"value\": 80,\n                    \"density\": {\n                        \"enable\": true,\n                        \"value_area\": 800\n                    }\n                },\n                \"color\": {\n                    \"value\": \"#ffffff\"\n                },\n                \"shape\": {\n                    \"type\": \"circle\",\n                    \"stroke\": {\n                        \"width\": 0,\n                        \"color\": \"#000000\"\n                    },\n                    \"polygon\": {\n                        \"nb_sides\": 5\n                    },\n                    \"image\": {\n                        \"src\": \"img/github.svg\",\n                        \"width\": 100,\n                        \"height\": 100\n                    }\n                },\n                \"opacity\": {\n                    \"value\": 0.5,\n                    \"random\": false,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 1,\n                        \"opacity_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"size\": {\n                    \"value\": 5,\n                    \"random\": true,\n                    \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 40,\n                        \"size_min\": 0.1,\n                        \"sync\": false\n                    }\n                },\n                \"line_linked\": {\n                    \"enable\": true,\n                    \"distance\": 150,\n                    \"color\": \"#ffffff\",\n                    \"opacity\": 0.4,\n                    \"width\": 1\n                },\n                \"move\": {\n                    \"enable\": true,\n                    \"speed\": 2,\n                    \"direction\": \"none\",\n                    \"random\": false,\n                    \"straight\": false,\n                    \"out_mode\": \"out\",\n                    \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 1200\n                    }\n                }\n            },\n            \"interactivity\": {\n                \"detect_on\": \"canvas\",\n                \"events\": {\n                    \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                    },\n                    \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"push\"\n                    },\n                    \"resize\": true\n                },\n                \"modes\": {\n                    \"grab\": {\n                        \"distance\": 400,\n                        \"line_linked\": {\n                            \"opacity\": 1\n                        }\n                    },\n                    \"bubble\": {\n                        \"distance\": 400,\n                        \"size\": 40,\n                        \"duration\": 2,\n                        \"opacity\": 8,\n                        \"speed\": 3\n                    },\n                    \"repulse\": {\n                        \"distance\": 200\n                    },\n                    \"push\": {\n                        \"particles_nb\": 4\n                    },\n                    \"remove\": {\n                        \"particles_nb\": 2\n                    }\n                }\n            },\n            \"retina_detect\": true,\n            \"config_demo\": {\n                \"hide_card\": false,\n                \"background_color\": \"#b61924\",\n                \"background_image\": \"\",\n                \"background_position\": \"50% 50%\",\n                \"background_repeat\": \"no-repeat\",\n                \"background_size\": \"cover\"\n            }\n        }\n\n    );\n};\nexport default initParticles;","import React, {useEffect} from 'react';\nimport LoginForm from \"./LoginForm\";\nimport RegForm from \"./RegForm\";\nimport initParticles from \"./Particles/particles\";\nimport './Particles/styles.sass'\n\n\nconst LoginPage = (props: any) => {\n    useEffect(() => {initParticles()}, [])\n\n    return (\n        <>\n            <div id=\"particles-js\" />\n            {props.page === \"login\" ? <LoginForm/> : <RegForm/>}\n        </>\n    )\n};\n\n\nexport default LoginPage;","import React from \"react\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport 'semantic-ui-css/semantic.min.css'\nimport LoginPage from \"./components/LoginPage\";\nimport IApp from \"./model/IApp\";\nimport {connect} from \"react-redux\";\n\nconst App: React.FC = (props: any) => {\n    switch (props.page) {\n        case \"login\":\n        case 'reg':\n            return <LoginPage page={props.page}/>;\n        default:\n            return (\n                <div className=\"App\">\n                    <Chat/>\n                </div>\n            )\n    }\n};\n\nconst mapStateToProps = (state: IApp): any => ({\n    page: state.page\n});\n\nexport default connect(\n    mapStateToProps,\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {fetchHeaderConfig} from \"./index\";\n\nconst request: typeof fetch = async (input: RequestInfo, init?: RequestInit | undefined) => {\n    let headers: HeadersInit = init && init.headers ? {...fetchHeaderConfig().headers, ...init.headers } : fetchHeaderConfig().headers as HeadersInit;\n    console.log(init, { ...(init || {}), headers});\n    if(init && init.body) {\n        headers = new Headers({'Content-Type': 'application/json', ...headers});\n    }\n\n    const promise = await fetch(input, { ...(init || {}), headers});\n\n    if(promise.status === 401){\n        localStorage.removeItem(\"token\");\n        return window.location.reload();\n    }\n    if(!promise.ok){\n        console.error(promise);\n        console.log(await promise.json())\n        throw new Error(promise.statusText + \" \" + promise.status);\n    }\n    return await promise.json();\n};\nexport default request;","import {takeLatest, put} from \"redux-saga/effects\";\nimport * as types from \"./constants\";\nimport * as url from \"../var/routers\";\nimport {fetchHeaderConfig} from \"../helpers\";\nimport axios from 'axios';\nimport request from \"../helpers/webApi\";\nimport socket from \"../services/socket/socket\";\n\nfunction* fetchChats(action: any) {\n    try {\n        const res = yield request(url.CHAT_LIST);\n        yield put({type: types.FETCH_CHATS_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* fetchMessages(action: any) {\n    try {\n        const res = yield request(url.CHAT_MESSAGES + action.payload.id, {headers: fetchHeaderConfig().headers});\n        yield put({type: types.FETCH_MESSAGES_DONE, payload: res})\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nfunction* loginUser(action: any) {\n\n    try {\n        const res = yield request(url.LOGIN, {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: action.payload.login,\n                password: action.payload.password\n            }),\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\"\n            }\n        });\n        localStorage.setItem('token', res.token);\n        yield put({\n            type: types.CHANGE_PAGE,\n            payload: \"chat\"\n        })\n    } catch (e) {\n        yield put({\n            type: types.LOGIN_FAIL\n        });\n        console.error(e);\n    }\n}\n\nfunction* fetchUser(action: any) {\n    try {\n        const res = yield request(url.USER, {\n            method: \"GET\",\n            headers: fetchHeaderConfig().headers\n        });\n\n        yield put({\n            type: types.FETCH_USER_DONE,\n            payload: {\n                user: res\n            }\n        })\n    } catch (e) {\n        console.error(e);\n        localStorage.removeItem('token');\n        yield put({\n            type: types.REMOVE_STORE\n        })\n    }\n}\n\nfunction* regUser(action: any) {\n    const {login, password, avatar} = action.payload;\n    try {\n        // TODO doesn't work with fetch, even if hard-code correct content-type\n        const res = yield axios({\n            method: \"POST\",\n            url: url.REG,\n            data: {\n                username: login,\n                password,\n                avatar\n            }\n        });\n        yield put({\n            type: types.LOGIN,\n            payload: {\n                login, password\n            }\n        })\n    } catch (error) {\n        yield put({\n            type: types.REG_FAIL,\n            payload: {error: error.message}\n        });\n        console.error(error);\n    }\n}\n\nfunction* search(action: any) {\n    try {\n        const res = yield request(url.SEARCH + `?search=${action.payload.search}`);\n        yield put({\n            type: types.SEARCH_DONE,\n            payload: res\n        })\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nfunction* newChat(action: any) {\n    try{\n        const res = yield request(url.NEW_CHAT, {\n            method: \"PUT\",\n            body: JSON.stringify({\n                userId: action.payload.userId\n            })\n        });\n        yield put({\n            type: types.CREATE_CHAT_DONE,\n            payload: {\n                chatId: res.chatId\n            }\n        })\n    }catch (e) {\n        console.error(e);\n    }\n}\n\nexport function* watchSaga() {\n    yield takeLatest(types.FETCH_CHATS, fetchChats);\n    yield takeLatest(types.FETCH_MESSAGES, fetchMessages);\n    yield takeLatest(types.LOGIN, loginUser);\n    yield takeLatest(types.FETCH_USER, fetchUser);\n    yield takeLatest(types.REG, regUser);\n    yield takeLatest(types.SEARCH, search);\n    yield takeLatest(types.CREATE_CHAT, newChat);\n}","import IApp, {IMessage} from './../model/IApp'\nimport IAction from './../model/IAction'\nimport * as types from './constants';\n\nconst initialState: IApp = {\n    chatList: {\n        data: null,\n        isFetching: false\n    },\n    user: {\n        isFetching: false,\n        data: null\n    },\n    chat: {\n        id: null,\n        isFetching: false,\n        isOpen: false,\n        data: []\n    },\n    showPanel: true,\n    page: localStorage.getItem('token') && localStorage.getItem('token') !== \"undefined\" ? \"chat\" : \"login\",\n    search: {\n        isFetching: false\n    }\n};\n\nexport function reducer(state: IApp = initialState, action: IAction): IApp {\n    let data, message: IMessage;\n    switch (action.type) {\n        case types.FETCH_CHATS:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    isFetching: true\n                }\n            };\n        case types.TOGGLE_PANEL:\n            return {\n                ...state,\n                showPanel: !state.showPanel\n            };\n        case types.FETCH_CHATS_DONE:\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data: action.payload,\n                    isFetching: false,\n                }\n            };\n        case types.FETCH_MESSAGES:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.id,\n                    isFetching: true,\n                    isOpen: true\n                }\n            };\n        case types.FETCH_MESSAGES_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    data: action.payload,\n                    isFetching: false\n                }\n            };\n        case types.ADD_NEW_MESSAGE:\n            message = action.payload.message;\n            data = ([...(state.chatList.data || [])]).map(elem => {\n                if (elem.chat.id === message.chat.id) {\n                    elem.message = message;\n                }\n                return elem;\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data\n                },\n                chat: {\n                    ...state.chat,\n                    data: state.chat.id === message.chat.id ? [...(state.chat.data || []), action.payload.message] : state.chat.data\n                }\n            };\n        case types.CHANGE_PAGE:\n            return {\n                ...state,\n                page: action.payload\n            };\n        case types.REMOVE_STORE:\n            return {\n                ...initialState,\n                page: \"login\"\n            };\n        case types.FETCH_USER:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: true\n                }\n            };\n        case types.FETCH_USER_DONE:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    isFetching: false,\n                    data: action.payload.user\n                }\n            };\n        case types.LOGIN:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.LOGIN_FAIL:\n            return {\n                ...state,\n                loginPage: {\n                    isFetching: false,\n                    error: true\n                }\n            };\n        case types.REG:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: true,\n                    error: null\n                }\n            };\n        case types.REG_FAIL:\n            return {\n                ...state,\n                regPage: {\n                    isFetching: false,\n                    error: action.payload.error\n                }\n            };\n        case types.SEARCH:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: true\n                }\n            };\n        case types.SEARCH_DONE:\n            return {\n                ...state,\n                search: {\n                    ...state.search,\n                    isFetching: false,\n                    data: action.payload\n                }\n            };\n        case types.CREATE_CHAT:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    isFetching: true,\n                    isOpen: true\n                }\n            };\n        case types.CREATE_CHAT_DONE:\n            return {\n                ...state,\n                chat: {\n                    ...state.chat,\n                    id: action.payload.chatId,\n                    isFetching: false,\n                    data: []\n                }\n            };\n        case types.ADD_CHAT_TO_LIST:\n            data = [...(state.chatList.data || [])];\n            data.push({\n                chat: {id: action.payload.chatId},\n                message: null,\n                user: action.payload.user\n            });\n            return {\n                ...state,\n                chatList: {\n                    ...state.chatList,\n                    data\n                }\n            };\n        default:\n            return state;\n    }\n} ","import { createStore, applyMiddleware } from \"redux\";\nimport { watchSaga } from \"./redux/saga\";\nimport { reducer } from \"./redux/reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = () => {\n  const middlewareSaga = createSagaMiddleware();\n  const store = createStore(reducer, composeWithDevTools(\n    applyMiddleware(middlewareSaga)\n  ));\n  middlewareSaga.run(watchSaga);\n  return store;\n};\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./configStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}